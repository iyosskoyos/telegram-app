{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/Viewer/ProfileMediaViewerContent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateChatBlob = update => {\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            photo = _this$props.photo;\n\n      if (chatId === update.chatId && photo.big.id === update.fileId) {\n        const file = FileStore.get(update.fileId) || this.state.file;\n        this.setState({\n          file: file\n        });\n      }\n    };\n\n    this.onClientUpdateUserBlob = update => {\n      const _this$props2 = this.props,\n            chatId = _this$props2.chatId,\n            photo = _this$props2.photo;\n      const userId = getChatUserId(chatId);\n\n      if (userId === update.userId && photo.big.id === update.fileId) {\n        const file = FileStore.get(update.fileId) || this.state.file;\n        this.setState({\n          file: file\n        });\n      }\n    };\n\n    this.handleContentClick = event => {\n      if (event) event.stopPropagation();\n      this.props.onClick(event);\n    };\n\n    const _this$props3 = this.props,\n          _chatId = _this$props3.chatId,\n          _photo = _this$props3.photo;\n    let _file = _photo.big;\n    _file = FileStore.get(_file.id) || _file;\n    this.state = {\n      prevChatId: _chatId,\n      prevPhoto: _photo,\n      width: PROFILE_PHOTO_BIG_SIZE,\n      height: PROFILE_PHOTO_BIG_SIZE,\n      file: _file\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const chatId = props.chatId,\n          photo = props.photo;\n\n    if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n      return {\n        prevChatId: chatId,\n        prevPhoto: photo,\n        width: PROFILE_PHOTO_BIG_SIZE,\n        height: PROFILE_PHOTO_BIG_SIZE,\n        file: photo.big\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n  }\n\n  componentWillUnmount() {\n    FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n  }\n\n  render() {\n    const _this$state = this.state,\n          width = _this$state.width,\n          height = _this$state.height,\n          file = _this$state.file;\n    if (!file) return null;\n    const blob = FileStore.getBlob(file.id) || file.blob;\n    const src = FileStore.getBlobUrl(blob);\n    console.log('img.render ', src);\n    return React.createElement(\"div\", {\n      className: \"media-viewer-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"media-viewer-content-image\",\n      src: src,\n      alt: \"\",\n      onClick: this.handleContentClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(FileProgress, {\n      file: file,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nProfileMediaViewerContent.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  photo: PropTypes.object.isRequired\n};\nexport default ProfileMediaViewerContent;","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/Viewer/ProfileMediaViewerContent.js"],"names":["React","PropTypes","FileProgress","getChatUserId","PROFILE_PHOTO_BIG_SIZE","FileStore","ProfileMediaViewerContent","Component","constructor","props","onClientUpdateChatBlob","update","chatId","photo","big","id","fileId","file","get","state","setState","onClientUpdateUserBlob","userId","handleContentClick","event","stopPropagation","onClick","prevChatId","prevPhoto","width","height","getDerivedStateFromProps","componentDidMount","on","componentWillUnmount","removeListener","render","blob","getBlob","src","getBlobUrl","console","log","propTypes","number","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n"]},"metadata":{},"sourceType":"module"}