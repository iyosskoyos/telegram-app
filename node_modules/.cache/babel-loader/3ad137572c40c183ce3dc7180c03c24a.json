{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/Viewer/MediaViewerDownloadButton.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\nconst iconStyle = {\n  padding: 20,\n  color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateMediaBlob = update => {\n      const fileId = this.state.fileId;\n\n      if (fileId === update.fileId) {\n        this.setState({\n          disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        });\n      }\n    };\n\n    this.handleClick = event => {\n      event.stopPropagation();\n      const onClick = this.props.onClick;\n      const disabled = this.state.disabled;\n      if (disabled) return;\n      onClick(event);\n    };\n\n    const _fileId = props.fileId;\n    this.state = {\n      prevPropsFileId: _fileId,\n      fileId: _fileId,\n      disabled: MediaViewerDownloadButton.saveDisabled(_fileId)\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const fileId = props.fileId;\n    const prevPropsFileId = state.prevPropsFileId;\n\n    if (fileId !== prevPropsFileId) {\n      return {\n        prevPropsFileId: fileId,\n        fileId: fileId,\n        disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n    FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n    FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n    FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n    FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n    FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n  }\n\n  componentWillUnmount() {\n    FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n    FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n    FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n    FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n    FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n    FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n  }\n\n  render() {\n    const title = this.props.title;\n    const disabled = this.state.disabled;\n    return React.createElement(MediaViewerFooterButton, {\n      disabled: disabled,\n      title: title,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(SaveIcon, {\n      style: iconStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nMediaViewerDownloadButton.saveDisabled = fileId => {\n  return !Boolean(FileStore.getBlob(fileId));\n};\n\nMediaViewerDownloadButton.propTypes = {\n  fileId: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  title: PropTypes.string\n};\nexport default MediaViewerDownloadButton;","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/Viewer/MediaViewerDownloadButton.js"],"names":["React","PropTypes","SaveIcon","MediaViewerFooterButton","FileStore","iconStyle","padding","color","MediaViewerDownloadButton","Component","constructor","props","onClientUpdateMediaBlob","update","fileId","state","setState","disabled","saveDisabled","handleClick","event","stopPropagation","onClick","prevPropsFileId","getDerivedStateFromProps","componentDidMount","on","componentWillUnmount","removeListener","render","title","Boolean","getBlob","propTypes","number","isRequired","func","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n"]},"metadata":{},"sourceType":"module"}