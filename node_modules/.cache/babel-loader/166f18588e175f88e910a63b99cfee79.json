{"ast":null,"code":"/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, IV_PHOTO_SIZE, LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM, PHOTO_BIG_SIZE, PHOTO_SIZE, PRELOAD_ANIMATION_SIZE, PRELOAD_AUDIO_SIZE, PRELOAD_DOCUMENT_SIZE, PRELOAD_STICKER_SIZE, PRELOAD_VIDEO_SIZE, PRELOAD_VIDEONOTE_SIZE, PRELOAD_VOICENOTE_SIZE, THUMBNAIL_PRIORITY } from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n  if (!size) return \"0 B\";\n\n  if (size < 1024) {\n    return \"\".concat(size, \" B\");\n  }\n\n  if (size < 1024 * 1024) {\n    return \"\".concat((size / 1024).toFixed(1), \" KB\");\n  }\n\n  if (size < 1024 * 1024 * 1024) {\n    return \"\".concat((size / 1024 / 1024).toFixed(1), \" MB\");\n  }\n\n  return \"\".concat((size / 1024 / 1024 / 1024).toFixed(1), \" GB\");\n}\n\nfunction getFileSize(file) {\n  if (!file) return null;\n  let size = file.size;\n  if (!size) return null;\n  return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n  if (!photo) return null;\n  return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n  let blob = new Blob([data], {\n    type: mime || 'application/octet-stream'\n  });\n\n  if (typeof window.navigator.msSaveBlob !== 'undefined') {\n    // IE workaround for \"HTML7007: One or more blob URLs were\n    // revoked by closing the blob for which they were created.\n    // These URLs will no longer resolve as the data backing\n    // the URL has been freed.\"\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    let blobURL = window.URL.createObjectURL(blob);\n    let tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename); // Safari thinks _blank anchor are pop ups. We only want to set _blank\n    // target if the browser does not support the HTML5 download attribute.\n    // This allows you to download files in desktop safari if pop up blocking\n    // is enabled.\n\n    if (typeof tempLink.download === 'undefined') {\n      tempLink.setAttribute('target', '_blank');\n    }\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  }\n}\n\nfunction saveBlob(blob, filename) {\n  if (typeof window.navigator.msSaveBlob !== 'undefined') {\n    // IE workaround for \"HTML7007: One or more blob URLs were\n    // revoked by closing the blob for which they were created.\n    // These URLs will no longer resolve as the data backing\n    // the URL has been freed.\"\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    let blobURL = window.URL.createObjectURL(blob);\n    let tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename); // Safari thinks _blank anchor are pop ups. We only want to set _blank\n    // target if the browser does not support the HTML5 download attribute.\n    // This allows you to download files in desktop safari if pop up blocking\n    // is enabled.\n\n    if (typeof tempLink.download === 'undefined') {\n      tempLink.setAttribute('target', '_blank');\n    }\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n  if (!chatId) return;\n  if (!messageIds) return;\n  if (!messageIds.length) return;\n  const result = await TdLibController.send({\n    '@type': 'getMessages',\n    chat_id: chatId,\n    message_ids: messageIds\n  });\n  result.messages = result.messages.map((message, i) => {\n    return message || {\n      '@type': 'deletedMessage',\n      chat_id: chatId,\n      id: messageIds[i],\n      content: null\n    };\n  });\n  MessageStore.setItems(result.messages);\n\n  for (let i = messageIds.length - 1; i >= 0; i--) {\n    MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n  }\n\n  store = FileStore.getStore();\n  loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n  for (let i = messages.length - 1; i >= 0; i--) {\n    const message = messages[i];\n\n    if (!message) {\n      continue;\n    }\n\n    const content = message.content;\n\n    if (content) {\n      switch (content['@type']) {\n        case 'messageAnimation':\n          {\n            const animation = content.animation;\n            loadAnimationThumbnailContent(store, animation, message);\n            break;\n          }\n\n        case 'messageAudio':\n          {\n            const audio = content.audio;\n            loadAudioThumbnailContent(store, audio, message);\n            break;\n          }\n\n        case 'messageChatChangePhoto':\n          {\n            const photo = content.photo;\n            loadPhotoContent(store, photo, message);\n            break;\n          }\n\n        case 'messageDocument':\n          {\n            const document = content.document;\n            loadDocumentThumbnailContent(store, document, message);\n            break;\n          }\n\n        case 'messageGame':\n          {\n            const game = content.game;\n            loadGameThumbnailContent(store, game, message);\n            break;\n          }\n\n        case 'messagePhoto':\n          {\n            const photo = content.photo;\n            loadPhotoContent(store, photo, message);\n            break;\n          }\n\n        case 'messageSticker':\n          {\n            const sticker = content.sticker;\n            loadStickerThumbnailContent(store, sticker, message);\n            break;\n          }\n\n        case 'messageText':\n          {\n            const web_page = content.web_page;\n            if (!web_page) break;\n            const animation = web_page.animation,\n                  audio = web_page.audio,\n                  document = web_page.document,\n                  photo = web_page.photo,\n                  sticker = web_page.sticker,\n                  video = web_page.video,\n                  video_note = web_page.video_note;\n\n            if (photo) {\n              loadPhotoContent(store, photo, message);\n              break;\n            }\n\n            if (animation) {\n              loadAnimationThumbnailContent(store, animation, message);\n              break;\n            }\n\n            if (audio) {\n              loadAudioThumbnailContent(store, audio, message);\n              break;\n            }\n\n            if (document) {\n              loadDocumentThumbnailContent(store, document, message);\n              break;\n            }\n\n            if (sticker) {\n              loadStickerThumbnailContent(store, sticker, message);\n              break;\n            }\n\n            if (video) {\n              loadVideoThumbnailContent(store, video, message);\n              break;\n            }\n\n            if (video_note) {\n              loadVideoNoteThumbnailContent(store, video_note, message);\n              break;\n            }\n\n            break;\n          }\n\n        case 'messageVideo':\n          {\n            const video = content.video;\n            loadVideoThumbnailContent(store, video, message);\n            break;\n          }\n\n        case 'messageVideoNote':\n          {\n            const video_note = content.video_note;\n            loadVideoNoteThumbnailContent(store, video_note, message);\n            break;\n          }\n      }\n    }\n  }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n  if (!audio) return;\n  let file = audio.audio;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n  const _file = file,\n        id = _file.id,\n        size = _file.size;\n  const blob = FileStore.getBlob(id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateAudioBlob(chatId, messageId, id), () => {\n    if (!useFileSize || size && size < PRELOAD_AUDIO_SIZE) {\n      FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n    }\n  });\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n  if (!audio) return false;\n  const photoSize = audio.album_cover_thumbnail;\n  if (!photoSize) return false;\n  let file = photoSize.photo;\n  if (!file) return false;\n  file = FileStore.get(file.id) || file;\n  const _file2 = file,\n        id = _file2.id;\n  const blob = FileStore.getBlob(file.id);\n  if (blob) return true;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio));\n  return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n  if (!animation) return;\n  let file = animation.animation;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n  const _file3 = file,\n        id = _file3.id,\n        size = _file3.size;\n  const blob = FileStore.getBlob(id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateAnimationBlob(chatId, messageId, id), () => {\n    if (!useFileSize || size && size < PRELOAD_ANIMATION_SIZE) {\n      FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n    }\n  });\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n  if (!animation) return false;\n  const photoSize = animation.thumbnail;\n  if (!photoSize) return false;\n  let file = photoSize.photo;\n  if (!file) return false;\n  file = FileStore.get(file.id) || file;\n  const _file4 = file,\n        id = _file4.id;\n  const blob = FileStore.getBlob(file.id);\n  if (blob) return true;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation));\n  return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n  if (!contact) return;\n  if (!message) return;\n  const user_id = contact.user_id;\n  const user = UserStore.get(user_id);\n  if (!user) return;\n  loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n  if (!document) return;\n  let file = document.document;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n  const _file5 = file,\n        id = _file5.id,\n        size = _file5.size;\n  const blob = FileStore.getBlob(id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateDocumentBlob(chatId, messageId, id), () => {\n    if (!useFileSize || size && size < PRELOAD_DOCUMENT_SIZE) {\n      FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n    }\n  });\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n  if (!document) return false;\n  const photoSize = document.thumbnail;\n  if (!photoSize) return false;\n  let file = photoSize.photo;\n  if (!file) return false;\n  file = FileStore.get(file.id) || file;\n  const _file6 = file,\n        id = _file6.id;\n  const blob = FileStore.getBlob(file.id);\n  if (blob) return true;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document));\n  return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n  if (!game) return;\n  const animation = game.animation;\n  loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n  if (!game) return false;\n  const photo = game.photo,\n        animation = game.animation;\n\n  if (loadAnimationThumbnailContent(store, animation, message)) {\n    return true;\n  }\n\n  loadPhotoContent(store, photo, message);\n  return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n  if (!pageBlockMap) return;\n  const location = pageBlockMap.location;\n  const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n  if (!locationId) return;\n  let file = FileStore.getLocationFile(locationId);\n\n  if (!file) {\n    file = await TdLibController.send({\n      '@type': 'getMapThumbnailFile',\n      location,\n      width: IV_LOCATION_WIDTH,\n      height: IV_LOCATION_HEIGHT,\n      zoom: LOCATION_ZOOM,\n      scale: LOCATION_SCALE,\n      chat_id: message ? message.chat_id : 0\n    });\n    FileStore.setLocationFile(locationId, file);\n    store = FileStore.getStore();\n  }\n\n  file = FileStore.get(file.id) || file;\n  const _file7 = file,\n        id = _file7.id;\n  const blob = FileStore.getBlob(file.id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateLocationBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap));\n}\n\nasync function loadLocationContent(store, location, message) {\n  if (!location) return;\n  const locationId = getLocationId(location);\n  if (!locationId) return;\n  let file = FileStore.getLocationFile(locationId);\n\n  if (!file) {\n    file = await TdLibController.send({\n      '@type': 'getMapThumbnailFile',\n      location,\n      width: LOCATION_WIDTH,\n      height: LOCATION_HEIGHT,\n      zoom: LOCATION_ZOOM,\n      scale: LOCATION_SCALE,\n      chat_id: message ? message.chat_id : 0\n    });\n    FileStore.setLocationFile(locationId, file);\n    store = FileStore.getStore();\n  }\n\n  file = FileStore.get(file.id) || file;\n  const _file8 = file,\n        id = _file8.id;\n  const blob = FileStore.getBlob(file.id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateLocationBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location));\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n  if (!photo) return;\n  const sizes = photo.sizes;\n  if (!sizes) return;\n  const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n  if (!photoSize) return;\n  let file = photoSize.photo;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n  const _file9 = file,\n        id = _file9.id;\n  const blob = FileStore.getBlob(id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updatePhotoBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo));\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n  if (!photo) return;\n  const sizes = photo.sizes;\n  if (!sizes) return;\n  const photoSize = getPhotoSize(sizes, displaySize);\n  if (!photoSize) return;\n  let file = photoSize.photo;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n  const _file10 = file,\n        id = _file10.id;\n  const blob = FileStore.getBlob(id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updatePhotoBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo));\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n  if (!photo) return false;\n  if (!message) return false;\n  const photoSize = getPhotoThumbnailSize(photo.sizes);\n  if (!photoSize) return false;\n  let file = photoSize.photo;\n  if (!file) return false;\n  file = FileStore.get(file.id) || file;\n  const _file11 = file,\n        id = _file11.id;\n  const blob = FileStore.getBlob(id);\n  if (blob) return true;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updatePhotoBlob(message.chat_id, message.id, id), () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message));\n  return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n  if (!sticker) return;\n  let file = sticker.sticker;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n  const _file12 = file,\n        id = _file12.id,\n        size = _file12.size;\n  const blob = FileStore.getBlob(id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateStickerBlob(chatId, messageId, id), () => {\n    if (!useFileSize || size && size < PRELOAD_STICKER_SIZE) {\n      FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n    }\n  });\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n  if (!sticker) return false;\n  const photoSize = sticker.thumbnail;\n  if (!photoSize) return false;\n  let file = photoSize.photo;\n  if (!file) return false;\n  file = FileStore.get(file.id) || file;\n  const _file13 = file,\n        id = _file13.id;\n  const blob = FileStore.getBlob(id);\n  if (blob) return true;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker));\n  return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n  if (!video) return;\n  let file = video.video;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n  const _file14 = file,\n        id = _file14.id,\n        size = _file14.size;\n  const blob = FileStore.getBlob(id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateVideoBlob(chatId, messageId, id), () => {\n    if (!useFileSize || size && size < PRELOAD_VIDEO_SIZE) {\n      FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n    }\n  });\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n  if (!video) return false;\n  const photoSize = video.thumbnail;\n  if (!photoSize) return false;\n  let file = photoSize.photo;\n  if (!file) return false;\n  file = FileStore.get(file.id) || file;\n  const _file15 = file,\n        id = _file15.id;\n  const blob = FileStore.getBlob(id);\n  if (blob) return true;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video));\n  return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n  if (!videoNote) return;\n  let file = videoNote.video;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n  const _file16 = file,\n        id = _file16.id,\n        size = _file16.size;\n  const blob = FileStore.getBlob(id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateVideoNoteBlob(chatId, messageId, id), () => {\n    if (!useFileSize || size && size < PRELOAD_VIDEONOTE_SIZE) {\n      FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n    }\n  });\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n  if (!videoNote) return false;\n  const photoSize = videoNote.thumbnail;\n  if (!photoSize) return false;\n  let file = photoSize.photo;\n  if (!file) return false;\n  file = FileStore.get(file.id) || file;\n  const _file17 = file,\n        id = _file17.id;\n  const blob = FileStore.getBlob(id);\n  if (blob) return true;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id), () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote));\n  return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n  if (!voiceNote) return;\n  let file = voiceNote.voice;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n  const _file18 = file,\n        id = _file18.id,\n        size = _file18.size;\n  const blob = FileStore.getBlob(id);\n  if (blob) return;\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateVoiceNoteBlob(chatId, messageId, id), () => {\n    if (!useFileSize || size && size < PRELOAD_VOICENOTE_SIZE) {\n      FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n    }\n  });\n}\n\nfunction loadMessageContents(store, messages) {\n  const users = new Map();\n  let chatId = 0;\n  const replies = new Map();\n\n  for (let i = messages.length - 1; i >= 0; i--) {\n    const message = messages[i];\n\n    if (!message) {\n      continue;\n    }\n\n    const chat_id = message.chat_id,\n          content = message.content,\n          sender_user_id = message.sender_user_id,\n          reply_to_message_id = message.reply_to_message_id;\n\n    if (sender_user_id) {\n      users.set(sender_user_id, sender_user_id);\n    }\n\n    if (reply_to_message_id) {\n      chatId = chat_id;\n      replies.set(reply_to_message_id, reply_to_message_id);\n    }\n\n    if (content) {\n      switch (content['@type']) {\n        case 'messageAnimation':\n          {\n            const animation = content.animation;\n            loadAnimationContent(store, animation, message);\n            loadAnimationThumbnailContent(store, animation, message);\n            break;\n          }\n\n        case 'messageAudio':\n          {\n            const audio = content.audio;\n            loadAudioContent(store, audio, message);\n            loadAudioThumbnailContent(store, audio, message);\n            break;\n          }\n\n        case 'messageChatChangePhoto':\n          {\n            const photo = content.photo;\n            loadPhotoContent(store, photo, message);\n            break;\n          }\n\n        case 'messageContact':\n          {\n            const contact = content.contact;\n            loadContactContent(store, contact, message);\n            break;\n          }\n\n        case 'messageDocument':\n          {\n            const document = content.document;\n            loadDocumentContent(store, document, message);\n            loadDocumentThumbnailContent(store, document, message);\n            break;\n          }\n\n        case 'messageGame':\n          {\n            const game = content.game;\n            loadGameContent(store, game, message);\n            loadGameThumbnailContent(store, game, message);\n            break;\n          }\n\n        case 'messageLocation':\n          {\n            const location = content.location;\n            loadLocationContent(store, location, message);\n            break;\n          }\n\n        case 'messageText':\n          {\n            const web_page = content.web_page;\n\n            if (!web_page) {\n              break;\n            }\n\n            const animation = web_page.animation,\n                  audio = web_page.audio,\n                  document = web_page.document,\n                  photo = web_page.photo,\n                  sticker = web_page.sticker,\n                  video = web_page.video,\n                  video_note = web_page.video_note,\n                  voice_note = web_page.voice_note;\n            let loadPhoto = true;\n\n            if (animation) {\n              loadAnimationContent(store, animation, message);\n              loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n            }\n\n            if (audio) {\n              loadAudioContent(store, audio, message);\n              loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n            }\n\n            if (document) {\n              loadDocumentContent(store, document, message);\n              loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n            }\n\n            if (sticker) {\n              loadStickerContent(store, sticker, message);\n              loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n            }\n\n            if (video) {\n              // loadVideoContent(store, video, message); // start loading only on video click event\n              loadPhoto = !loadVideoThumbnailContent(store, video, message);\n            }\n\n            if (video_note) {\n              loadVideoNoteContent(store, video_note, message);\n              loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n            }\n\n            if (voice_note) {\n              loadVoiceNoteContent(store, voice_note, message);\n            }\n\n            if (loadPhoto) {\n              loadBigPhotoContent(store, photo, message);\n              loadPhotoContent(store, photo, message);\n              loadPhotoThumbnailContent(store, photo, message);\n            }\n\n            break;\n          }\n\n        case 'messagePhoto':\n          {\n            const photo = content.photo;\n            loadBigPhotoContent(store, photo, message);\n            loadPhotoContent(store, photo, message);\n            loadPhotoThumbnailContent(store, photo, message);\n            break;\n          }\n\n        case 'messageSticker':\n          {\n            const sticker = content.sticker;\n            loadStickerContent(store, sticker, message);\n            loadStickerThumbnailContent(store, sticker, message);\n            break;\n          }\n\n        case 'messageVenue':\n          {\n            const venue = content.venue;\n            const location = venue.location;\n            loadLocationContent(store, location, message);\n            break;\n          }\n\n        case 'messageVideo':\n          {\n            const video = content.video; // loadVideoContent(store, video, message); // start loading only on video click event\n\n            loadVideoThumbnailContent(store, video, message);\n            break;\n          }\n\n        case 'messageVideoNote':\n          {\n            const video_note = content.video_note;\n            loadVideoNoteContent(store, video_note, message);\n            loadVideoNoteThumbnailContent(store, video_note, message);\n            break;\n          }\n\n        case 'messageVoiceNote':\n          {\n            const voice_note = content.voice_note;\n            loadVoiceNoteContent(store, voice_note, message);\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    }\n  }\n\n  loadUsersContent(store, [...users.keys()]);\n  loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n  if (!media) return;\n\n  switch (media['@type']) {\n    case 'animation':\n      {\n        saveAnimation(media, message);\n        break;\n      }\n\n    case 'document':\n      {\n        saveDocument(media, message);\n        break;\n      }\n\n    case 'photo':\n      {\n        savePhoto(media, message);\n        break;\n      }\n\n    case 'video':\n      {\n        saveVideo(media, message);\n        break;\n      }\n  }\n}\n\nfunction saveAnimation(animation, message) {\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  if (!animation) return;\n  const file = animation.animation,\n        file_name = animation.file_name;\n  if (!file) return;\n  const fileId = file.id;\n  saveOrDownload(file, file_name || fileId, message || animation, () => FileStore.updateAnimationBlob(chatId, messageId, fileId));\n}\n\nfunction saveDocument(document, message) {\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  if (!document) return;\n  const file = document.document,\n        file_name = document.file_name;\n  if (!file) return;\n  const fileId = file.id;\n  saveOrDownload(file, file_name || fileId, message || document, () => FileStore.updateDocumentBlob(chatId, messageId, fileId));\n}\n\nfunction saveVideo(video, message) {\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  if (!video) return;\n  const file = video.video,\n        file_name = video.file_name;\n  if (!file) return;\n  const fileId = file.id;\n  saveOrDownload(file, file_name || fileId, message || video, () => FileStore.updateVideoBlob(chatId, messageId, fileId));\n}\n\nfunction savePhoto(photo, message) {\n  const chatId = message ? message.chat_id : 0;\n  const messageId = message ? message.id : 0;\n  if (!photo) return;\n  const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n  if (!photoSize) return;\n  const file = photoSize.photo;\n  if (!file) return;\n  const fileId = file.id;\n  saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n  if (!file) return;\n  if (!fileName) return;\n\n  if (file.arr) {\n    saveData(file.arr, fileName);\n    return;\n  }\n\n  let blob = FileStore.getBlob(file.id) || file.blob;\n\n  if (blob) {\n    saveBlob(blob, fileName);\n    return;\n  }\n\n  download(file, obj, () => {\n    if (callback) callback();\n    blob = FileStore.getBlob(file.id) || file.blob;\n\n    if (blob) {\n      saveBlob(blob, fileName);\n    }\n  });\n}\n\nfunction download(file, obj, callback) {\n  if (!file) return;\n  const id = file.id,\n        local = file.local;\n  const blob = FileStore.getBlob(id);\n\n  if (blob) {\n    return;\n  }\n\n  if (local.is_downloading_completed) {\n    const store = FileStore.getStore();\n    FileStore.getLocalFile(store, file, null, callback, () => {\n      if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n      }\n    });\n    return;\n  }\n\n  if (local.can_be_downloaded) {\n    FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n  }\n}\n\nfunction getViewerThumbnail(media) {\n  if (!media) return [0, 0, null];\n\n  switch (media['@type']) {\n    case 'animation':\n      {\n        const thumbnail = media.thumbnail;\n\n        if (thumbnail) {\n          return [thumbnail.width, thumbnail.height, thumbnail.photo];\n        }\n\n        break;\n      }\n\n    case 'document':\n      {\n        const thumbnail = media.thumbnail;\n\n        if (thumbnail) {\n          return [thumbnail.width, thumbnail.height, thumbnail.photo];\n        }\n\n        break;\n      }\n\n    case 'photo':\n      {\n        return getViewerFile(media, PHOTO_SIZE);\n      }\n\n    case 'video':\n      {\n        const thumbnail = media.thumbnail;\n\n        if (thumbnail) {\n          return [thumbnail.width, thumbnail.height, thumbnail.photo];\n        }\n\n        break;\n      }\n\n    default:\n      {\n        return [0, 0, null];\n      }\n  }\n\n  return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return [0, 0, null];\n  const content = message.content;\n  if (!content) return [0, 0, null];\n\n  switch (content['@type']) {\n    case 'messageAnimation':\n      {\n        const animation = content.animation;\n\n        if (animation && animation.thumbnail) {\n          return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n        }\n\n        break;\n      }\n\n    case 'messageChatChangePhoto':\n      {\n        return getMediaFile(chatId, messageId, PHOTO_SIZE);\n      }\n\n    case 'messageDocument':\n      {\n        const document = content.document;\n\n        if (document) {\n          return [50, 50, document.document];\n        }\n\n        break;\n      }\n\n    case 'messagePhoto':\n      {\n        return getMediaFile(chatId, messageId, PHOTO_SIZE);\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n\n        if (web_page) {\n          const animation = web_page.animation,\n                document = web_page.document,\n                video = web_page.video,\n                photo = web_page.photo;\n\n          if (animation && animation.thumbnail) {\n            return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n          }\n\n          if (document) {\n            return [50, 50, document.document];\n          }\n\n          if (video && video.thumbnail) {\n            return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n          }\n\n          if (photo) {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n          }\n        }\n\n        break;\n      }\n\n    case 'messageVideo':\n      {\n        const video = content.video;\n\n        if (video.thumbnail) {\n          return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n        }\n\n        break;\n      }\n\n    default:\n      {\n        return [0, 0, null];\n      }\n  }\n\n  return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n  if (!size) return [0, 0, null];\n\n  switch (media['@type']) {\n    case 'animation':\n      {\n        return [media.width, media.height, media.animation];\n      }\n\n    case 'photo':\n      {\n        const photoSize = getSize(media.sizes, size);\n\n        if (photoSize) {\n          return [photoSize.width, photoSize.height, photoSize.photo];\n        }\n\n        break;\n      }\n\n    case 'document':\n      {\n        return [50, 50, document.document];\n      }\n\n    case 'video':\n      {\n        return [media.width, media.height, media.video];\n      }\n\n    default:\n      {}\n  }\n\n  return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n  if (!size) return [0, 0, null];\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return [0, 0, null];\n  const content = message.content;\n  if (!content) return [0, 0, null];\n\n  switch (content['@type']) {\n    case 'messageAnimation':\n      {\n        const animation = content.animation;\n\n        if (animation) {\n          return [animation.width, animation.height, animation.animation];\n        }\n\n        break;\n      }\n\n    case 'messageChatChangePhoto':\n      {\n        const photo = content.photo;\n\n        if (photo) {\n          const photoSize = getSize(photo.sizes, size);\n\n          if (photoSize) {\n            return [photoSize.width, photoSize.height, photoSize.photo];\n          }\n        }\n\n        break;\n      }\n\n    case 'messageDocument':\n      {\n        const document = content.document;\n\n        if (document) {\n          return [50, 50, document.document];\n        }\n\n        break;\n      }\n\n    case 'messagePhoto':\n      {\n        const photo = content.photo;\n\n        if (photo) {\n          const photoSize = getSize(photo.sizes, size);\n\n          if (photoSize) {\n            return [photoSize.width, photoSize.height, photoSize.photo];\n          }\n        }\n\n        break;\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n\n        if (web_page) {\n          const animation = web_page.animation,\n                document = web_page.document,\n                photo = web_page.photo,\n                video = web_page.video;\n\n          if (animation) {\n            return [animation.width, animation.height, animation.animation];\n          }\n\n          if (document) {\n            return [50, 50, document.document];\n          }\n\n          if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n\n            if (photoSize) {\n              return [photoSize.width, photoSize.height, photoSize.photo];\n            }\n\n            break;\n          }\n\n          if (video) {\n            return [video.width, video.height, video.video];\n          }\n        }\n\n        break;\n      }\n\n    case 'messageVideo':\n      {\n        const video = content.video;\n\n        if (video) {\n          return [video.width, video.height, video.video];\n        }\n\n        break;\n      }\n\n    default:\n      {}\n  }\n\n  return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n  if (!messages) return;\n  if (!messages.length) return;\n\n  for (let i = 0; i < messages.length; i++) {\n    let message = messages[i];\n    const content = message.content;\n\n    if (content) {\n      switch (content['@type']) {\n        case 'messagePhoto':\n          {\n            const photo = content.photo;\n            if (!photo) break; // preview\n\n            /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n            if (previewPid) {\n                let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                if (!preview.blob){\n                    FileStore.getLocalFile(store, preview, null,\n                        () => MessageStore.updateMessagePhoto(message.id),\n                        () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                        'load_contents_preview_',\n                        message.id);\n                 }\n            }*/\n\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (!photoSize) break;\n            const file = photoSize.photo;\n            const blob = file.blob || FileStore.getBlob(file.id);\n            if (blob) return;\n            FileStore.cancelGetRemoteFile(file.id);\n            break;\n          }\n\n        case 'messageVideo':\n          {\n            const video = content.video;\n            if (!video) break;\n\n            if (video.thumbnail) {\n              const file = video.thumbnail.photo;\n              const blob = file.blob || FileStore.getBlob(file.id);\n              if (blob) break;\n              FileStore.cancelGetRemoteFile(file.id);\n            }\n\n            const file = video.video;\n            if (!file) break;\n            const blob = file.blob || FileStore.getBlob(file.id);\n            if (blob) break;\n            FileStore.cancelGetRemoteFile(file.id);\n            break;\n          }\n\n        case 'messageText':\n          {\n            const web_page = message.content.web_page;\n\n            if (web_page) {\n              const video = web_page.video;\n\n              if (video) {\n                if (video.thumbnail) {\n                  const file = video.thumbnail.photo;\n                  const blob = file.blob || FileStore.getBlob(file.id);\n                  if (blob) break;\n                  FileStore.cancelGetRemoteFile(file.id);\n                }\n\n                const file = video.video;\n                if (!file) break;\n                const blob = file.blob || FileStore.getBlob(file.id);\n                if (blob) break;\n                FileStore.cancelGetRemoteFile(file.id);\n              }\n            }\n\n            break;\n          }\n      }\n    }\n  }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n  if (!messages) return;\n  if (!messages.length) return;\n  const store = FileStore.getStore();\n\n  for (let i = 0; i < messages.length; i++) {\n    let message = messages[i];\n    const content = message.content;\n\n    if (content) {\n      switch (content['@type']) {\n        case 'messageAnimation':\n          {\n            const animation = content.animation;\n            loadAnimationContent(store, animation, message, useSizeLimit);\n            loadAnimationThumbnailContent(store, animation, message);\n            break;\n          }\n\n        case 'messageChatChangePhoto':\n          {\n            const photo = content.photo;\n            loadBigPhotoContent(store, photo, message);\n            break;\n          }\n\n        case 'messageDocument':\n          {\n            const document = content.document;\n            loadDocumentContent(store, document, message, useSizeLimit);\n            break;\n          }\n\n        case 'messagePhoto':\n          {\n            const photo = content.photo;\n            loadBigPhotoContent(store, photo, message);\n            break;\n          }\n\n        case 'messageText':\n          {\n            const web_page = message.content.web_page;\n\n            if (!web_page) {\n              break;\n            }\n\n            const animation = web_page.animation,\n                  document = web_page.document,\n                  photo = web_page.photo,\n                  video = web_page.video;\n            let loadPhoto = true;\n\n            if (animation) {\n              loadAnimationContent(store, animation, message, useSizeLimit);\n              loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n            }\n\n            if (document) {\n              loadDocumentContent(store, document, message, useSizeLimit);\n              loadPhoto = false;\n            }\n\n            if (video) {\n              loadVideoContent(store, video, message, useSizeLimit);\n              loadPhoto = !loadVideoThumbnailContent(store, video, message);\n            }\n\n            if (loadPhoto) {\n              loadBigPhotoContent(store, photo, message);\n            }\n\n            break;\n          }\n\n        case 'messageVideo':\n          {\n            const video = content.video;\n            loadVideoThumbnailContent(store, video, message);\n            loadVideoContent(store, video, message, useSizeLimit);\n            break;\n          }\n      }\n    }\n  }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n  if (!history.length) return;\n  const messages = [];\n\n  if (index > 0) {\n    messages.push(history[index - 1]);\n  }\n\n  if (index < history.length - 1) {\n    messages.push(history[index + 1]);\n  }\n\n  cancelLoadMediaViewerContent([history[index]]);\n  cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n  if (!history.length) return;\n  const messages = [];\n\n  if (index > 0) {\n    messages.push(history[index - 1]);\n  }\n\n  if (index < history.length - 1) {\n    messages.push(history[index + 1]);\n  }\n\n  loadMediaViewerContent([history[index]], false);\n  loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n  if (!file) return;\n  const _file19 = file,\n        id = _file19.id;\n  file = FileStore.get(id) || file;\n  const user = UserStore.get(userId);\n  if (!user) return;\n  const blob = file.blob || FileStore.getBlob(id);\n  if (blob) return;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateUserPhotoBlob(userId, id), () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user));\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n  if (!file) return;\n  const _file20 = file,\n        id = _file20.id;\n  file = FileStore.get(id) || file;\n  const chat = ChatStore.get(chatId);\n  if (!chat) return;\n  const blob = file.blob || FileStore.getBlob(id);\n  if (blob) return;\n  FileStore.getLocalFile(store, file, null, () => FileStore.updateChatPhotoBlob(chatId, id), () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat));\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n  if (!photos) return;\n  const store = FileStore.getStore();\n  photos.forEach(photo => {\n    switch (photo['@type']) {\n      case 'chatPhoto':\n        {\n          const _photo = photo,\n                small = _photo.small,\n                big = _photo.big;\n          loadChatFileContent(store, small, chatId);\n          loadChatFileContent(store, big, chatId);\n          break;\n        }\n\n      case 'profilePhoto':\n        {\n          const userId = getChatUserId(chatId);\n          const _photo2 = photo,\n                small = _photo2.small,\n                big = _photo2.big;\n          loadUserFileContent(store, small, userId);\n          loadUserFileContent(store, big, userId);\n          break;\n        }\n\n      case 'userProfilePhoto':\n        {\n          photo = getProfilePhoto(photo);\n          if (!photo) break;\n          const userId = getChatUserId(chatId);\n          const _photo3 = photo,\n                small = _photo3.small,\n                big = _photo3.big;\n          loadUserFileContent(store, small, userId);\n          loadUserFileContent(store, big, userId);\n          break;\n        }\n    }\n  });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n  if (!history.length) return;\n  const items = [];\n\n  if (index > 0) {\n    items.push(history[index - 1]);\n  }\n\n  if (index < history.length - 1) {\n    items.push(history[index + 1]);\n  }\n\n  if (index >= 0 && index < history.length) {\n    items.push(history[index]);\n  }\n\n  loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n  const user = UserStore.get(userId);\n  if (!user) return;\n  const profile_photo = user.profile_photo;\n  if (!profile_photo) return;\n  const file = profile_photo.small;\n  loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n  if (!ids) return;\n  ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n  const chat = ChatStore.get(chatId);\n  if (!chat) return;\n  const photo = chat.photo;\n  loadChatPhotoContent(store, photo, chat.id);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId) {\n  if (!photo) return;\n  const file = photo.small;\n  loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n  if (!ids) return;\n  ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n  const chat = ChatStore.get(chatId);\n  if (!chat) return;\n  const draft_message = chat.draft_message;\n  if (!draft_message) return;\n  const reply_to_message_id = draft_message.reply_to_message_id;\n  if (!reply_to_message_id) return;\n  loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n  console.log('Lottie.loadStickerSetContent');\n  if (!stickerSet) return;\n  const stickers = stickerSet.stickers;\n  loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n  if (!stickers) return;\n  stickers.forEach(sticker => {\n    console.log('Lottie.loadStickerThumbnailContent', sticker.sticker.id);\n    loadStickerThumbnailContent(store, sticker, null);\n\n    if (sticker.is_animated) {\n      console.log('Lottie.loadStickerContent', sticker.sticker.id);\n      loadStickerContent(store, sticker, null);\n    }\n  });\n}\n\nfunction isGifMimeType(mimeType) {\n  return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n  const blob = getBlob(file);\n  return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n  return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n  if (!file) return '0';\n  if (!file.local) return '0';\n  if (!file.local.is_downloading_active) return '0';\n  return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n  if (!file) return '0';\n  if (!file.remote) return '0';\n  if (!file.remote.is_uploading_active) return '0';\n  return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n  if (!fileName) {\n    return '';\n  }\n\n  const parts = fileName.split('.');\n\n  if (parts.length === 1 || parts[0] === '' && parts.length === 2) {\n    return '';\n  }\n\n  return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n  if (!instantView) return;\n  const page_blocks = instantView.page_blocks;\n  if (!page_blocks) return;\n  const store = FileStore.getStore();\n  page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n  if (!b) return;\n\n  switch (b['@type']) {\n    case 'pageBlockAnchor':\n      {\n        break;\n      }\n\n    case 'pageBlockAnimation':\n      {\n        const animation = b.animation,\n              caption = b.caption;\n        loadAnimationThumbnailContent(store, animation, null);\n        loadAnimationContent(store, animation, null);\n        loadPageBlockContent(store, caption);\n        break;\n      }\n\n    case 'pageBlockAudio':\n      {\n        const audio = b.audio,\n              caption = b.caption;\n        loadAudioThumbnailContent(store, audio, null);\n        loadAudioContent(store, audio, null);\n        loadPageBlockContent(store, caption);\n        break;\n      }\n\n    case 'pageBlockAuthorDate':\n      {\n        const author = b.author;\n        loadRichTextContent(store, author);\n        break;\n      }\n\n    case 'pageBlockBlockQuote':\n      {\n        const text = b.text,\n              credit = b.credit;\n        loadRichTextContent(store, text);\n        loadRichTextContent(store, credit);\n        break;\n      }\n    // actually not a pageBlock child but load content in the same way\n\n    case 'pageBlockCaption':\n      {\n        const text = b.text,\n              credit = b.credit;\n        loadRichTextContent(store, text);\n        loadRichTextContent(store, credit);\n        break;\n      }\n\n    case 'pageBlockChatLink':\n      {\n        const photo = b.photo;\n        loadChatPhotoContent(store, photo, 0);\n        break;\n      }\n\n    case 'pageBlockCollage':\n      {\n        const page_blocks = b.page_blocks,\n              caption = b.caption;\n        loadPageBlockContent(store, caption);\n        page_blocks.forEach(x => loadPageBlockContent(store, x));\n        break;\n      }\n\n    case 'pageBlockCover':\n      {\n        const cover = b.cover;\n        loadPageBlockContent(store, cover);\n        break;\n      }\n\n    case 'pageBlockDetails':\n      {\n        const header = b.header,\n              page_blocks = b.page_blocks;\n        loadPageBlockContent(store, header);\n        page_blocks.forEach(x => loadPageBlockContent(store, x));\n        break;\n      }\n\n    case 'pageBlockDivider':\n      {\n        break;\n      }\n\n    case 'pageBlockEmbedded':\n      {\n        const poster_photo = b.poster_photo,\n              caption = b.caption;\n        loadPhotoContent(store, poster_photo, null);\n        loadPageBlockContent(store, caption);\n        break;\n      }\n\n    case 'pageBlockEmbeddedPost':\n      {\n        const author_photo = b.author_photo,\n              page_blocks = b.page_blocks,\n              caption = b.caption;\n        loadPhotoContent(store, author_photo, null);\n        page_blocks.forEach(x => loadPageBlockContent(store, x));\n        loadPageBlockContent(store, caption);\n        break;\n      }\n\n    case 'pageBlockFooter':\n      {\n        const footer = b.footer;\n        loadRichTextContent(store, footer);\n        break;\n      }\n\n    case 'pageBlockHeader':\n      {\n        const header = b.header;\n        loadRichTextContent(store, header);\n        break;\n      }\n\n    case 'pageBlockKicker':\n      {\n        const kicker = b.kicker;\n        loadRichTextContent(store, kicker);\n        break;\n      }\n\n    case 'pageBlockList':\n      {\n        const items = b.items;\n        items.forEach(x => loadPageBlockContent(store, x));\n        break;\n      }\n    // actually not a pageBlock child but load content in the same way\n\n    case 'pageBlockListItem':\n      {\n        const page_blocks = b.page_blocks;\n        page_blocks.forEach(x => loadPageBlockContent(store, x));\n        break;\n      }\n\n    case 'pageBlockMap':\n      {\n        const caption = b.caption;\n        loadPageBlockMapContent(store, b, null);\n        loadPageBlockContent(store, caption);\n        break;\n      }\n\n    case 'pageBlockParagraph':\n      {\n        const text = b.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'pageBlockPhoto':\n      {\n        const photo = b.photo,\n              caption = b.caption;\n        loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n        loadPageBlockContent(store, caption);\n        break;\n      }\n\n    case 'pageBlockPreformatted':\n      {\n        const text = b.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'pageBlockPullQuote':\n      {\n        const text = b.text,\n              credit = b.credit;\n        loadRichTextContent(store, text);\n        loadRichTextContent(store, credit);\n        break;\n      }\n\n    case 'pageBlockRelatedArticles':\n      {\n        const header = b.header,\n              articles = b.articles;\n        loadRichTextContent(store, header);\n        articles.forEach(x => loadPageBlockContent(store, x));\n        break;\n      }\n    // actually not a pageBlock child but load content in the same way\n\n    case 'pageBlockRelatedArticle':\n      {\n        const photo = b.photo;\n        loadPhotoContent(store, photo, null);\n        break;\n      }\n\n    case 'pageBlockSlideshow':\n      {\n        const page_blocks = b.page_blocks,\n              caption = b.caption;\n        loadPageBlockContent(store, caption);\n        page_blocks.forEach(x => loadPageBlockContent(store, x));\n        break;\n      }\n\n    case 'pageBlockSubheader':\n      {\n        const subheader = b.subheader;\n        loadRichTextContent(store, subheader);\n        break;\n      }\n\n    case 'pageBlockSubtitle':\n      {\n        const subtitle = b.subtitle;\n        loadRichTextContent(store, subtitle);\n        break;\n      }\n\n    case 'pageBlockTable':\n      {\n        const caption = b.caption,\n              cells = b.cells;\n        loadRichTextContent(store, caption);\n        cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n        break;\n      }\n    // actually not a pageBlock child but load content in the same way\n\n    case 'pageBlockTableCell':\n      {\n        const text = b.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'pageBlockTitle':\n      {\n        const title = b.title;\n        loadRichTextContent(store, title);\n        break;\n      }\n\n    case 'pageBlockVideo':\n      {\n        const video = b.video,\n              caption = b.caption;\n        loadVideoThumbnailContent(store, video, null);\n        loadVideoContent(store, video, null);\n        loadPageBlockContent(store, caption);\n        break;\n      }\n  }\n}\n\nfunction loadRichTextContent(store, t) {\n  if (!t) return;\n\n  switch (t['@type']) {\n    case 'richTextAnchor':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextBold':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextEmailAddress':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextFixed':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextIcon':\n      {\n        const document = t.document;\n        loadDocumentThumbnailContent(store, document, null);\n        loadDocumentContent(store, document, null, false);\n        break;\n      }\n\n    case 'richTextItalic':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextMarked':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextPhoneNumber':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextPlain':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTexts':\n      {\n        const texts = t.texts;\n        texts.forEach(x => loadRichTextContent(store, x));\n        break;\n      }\n\n    case 'richTextStrikethrough':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextSubscript':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextSuperscript':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextUnderline':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n\n    case 'richTextUrl':\n      {\n        const text = t.text;\n        loadRichTextContent(store, text);\n        break;\n      }\n  }\n}\n\nfunction getAnimationData(file) {\n  return new Promise(resolve => {\n    if (!file) {\n      resolve(null);\n      return;\n    }\n\n    const blob = FileStore.getBlob(file.id);\n\n    if (!blob) {\n      resolve(null);\n      return;\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = event => resolve(JSON.parse(event.target.result));\n\n    fileReader.onerror = () => resolve(null);\n\n    fileReader.onabort = () => resolve(null);\n\n    fileReader.readAsText(blob);\n  });\n}\n\nexport { getFileSize, getSizeString, saveData, saveBlob, loadMessageContents, loadMediaViewerContent, preloadMediaViewerContent, cancelLoadMediaViewerContent, cancelPreloadMediaViewerContent, loadProfileMediaViewerContent, preloadProfileMediaViewerContent, loadChatContent, loadChatsContent, loadDraftContent, loadInstantViewContent, loadStickerContent, loadStickersContent, loadStickerSetContent, loadStickerThumbnailContent, loadUserContent, loadUsersContent, saveOrDownload, download, getMediaFile, getMediaPreviewFile, isGifMimeType, getSrc, getBlob, getDownloadedSize, getUploadedSize, getExtension, getViewerFile, getViewerThumbnail, getAnimationData };","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Utils/File.js"],"names":["getPhotoSize","getPhotoThumbnailSize","getSize","getChatUserId","getProfilePhoto","getLocationId","FILE_PRIORITY","IV_LOCATION_HEIGHT","IV_LOCATION_WIDTH","IV_PHOTO_SIZE","LOCATION_HEIGHT","LOCATION_SCALE","LOCATION_WIDTH","LOCATION_ZOOM","PHOTO_BIG_SIZE","PHOTO_SIZE","PRELOAD_ANIMATION_SIZE","PRELOAD_AUDIO_SIZE","PRELOAD_DOCUMENT_SIZE","PRELOAD_STICKER_SIZE","PRELOAD_VIDEO_SIZE","PRELOAD_VIDEONOTE_SIZE","PRELOAD_VOICENOTE_SIZE","THUMBNAIL_PRIORITY","ChatStore","FileStore","MessageStore","UserStore","TdLibController","getSizeString","size","toFixed","getFileSize","file","getBigPhoto","photo","big","saveData","data","filename","mime","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","saveBlob","loadReplies","store","chatId","messageIds","length","result","send","chat_id","message_ids","messages","map","message","i","id","content","setItems","emit","get","getStore","loadReplyContents","animation","loadAnimationThumbnailContent","audio","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","game","loadGameThumbnailContent","sticker","loadStickerThumbnailContent","web_page","video","video_note","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","getBlob","messageId","getLocalFile","updateAudioBlob","getRemoteFile","photoSize","album_cover_thumbnail","updateAudioThumbnailBlob","loadAnimationContent","updateAnimationBlob","thumbnail","updateAnimationThumbnailBlob","loadContactContent","contact","user_id","user","loadUserContent","loadDocumentContent","updateDocumentBlob","updateDocumentThumbnailBlob","loadGameContent","loadPageBlockMapContent","pageBlockMap","location","locationId","getLocationFile","width","height","zoom","scale","setLocationFile","updateLocationBlob","loadLocationContent","loadBigPhotoContent","sizes","updatePhotoBlob","displaySize","loadPhotoThumbnailContent","loadStickerContent","updateStickerBlob","updateStickerThumbnailBlob","loadVideoContent","updateVideoBlob","updateVideoThumbnailBlob","loadVideoNoteContent","videoNote","updateVideoNoteBlob","updateVideoNoteThumbnailBlob","loadVoiceNoteContent","voiceNote","voice","updateVoiceNoteBlob","loadMessageContents","users","Map","replies","sender_user_id","reply_to_message_id","set","voice_note","loadPhoto","venue","loadUsersContent","keys","saveMedia","media","saveAnimation","saveDocument","savePhoto","saveVideo","file_name","fileId","saveOrDownload","fileName","obj","callback","arr","local","is_downloading_completed","can_be_downloaded","getViewerThumbnail","getViewerFile","getMediaPreviewFile","getMediaFile","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","push","preloadMediaViewerContent","loadUserFileContent","userId","updateUserPhotoBlob","loadChatFileContent","chat","updateChatPhotoBlob","loadProfileMediaViewerContent","photos","forEach","small","preloadProfileMediaViewerContent","items","profile_photo","ids","loadChatContent","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","console","log","stickers","loadStickersContent","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getBlobUrl","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","remote","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","x","cover","header","poster_photo","author_photo","footer","kicker","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","Promise","resolve","fileReader","FileReader","onload","event","JSON","parse","target","onerror","onabort","readAsText"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId) {\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    console.log('Lottie.loadStickerSetContent');\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        console.log('Lottie.loadStickerThumbnailContent', sticker.sticker.id);\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            console.log('Lottie.loadStickerContent', sticker.sticker.id);\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n"]},"metadata":{},"sourceType":"module"}