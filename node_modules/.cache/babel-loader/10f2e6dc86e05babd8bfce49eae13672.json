{"ast":null,"code":"import _defineProperty from \"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/Message/Media/PollOption.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => _objectSpread({\n  progressRoot: {\n    backgroundColor: 'transparent',\n    margin: '2px 0 0 38px',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  progressBar: {\n    transition: 'transform .2s linear'\n  }\n}, borderStyle(theme));\n\nclass PollOption extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getTitleString = (count, t = key => key) => {\n      const canBeSelected = this.props.canBeSelected;\n      if (canBeSelected) return null;\n      if (!count) return t('NoVotes').toLowerCase();\n      if (count === 1) return '1 vote';\n      return count + ' votes';\n    };\n\n    this.handleClick = event => {\n      const _this$props = this.props,\n            canBeSelected = _this$props.canBeSelected,\n            onVote = _this$props.onVote;\n      if (!canBeSelected) return;\n      event.stopPropagation();\n      onVote();\n    };\n\n    this.handleCancel = event => {\n      const onUnvote = this.props.onUnvote;\n      event.stopPropagation();\n      onUnvote();\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          classes = _this$props2.classes,\n          option = _this$props2.option,\n          onChange = _this$props2.onChange,\n          canBeSelected = _this$props2.canBeSelected,\n          closed = _this$props2.closed,\n          maxVoterCount = _this$props2.maxVoterCount,\n          t = _this$props2.t;\n    if (!option) return null;\n    const text = option.text,\n          voter_count = option.voter_count,\n          vote_percentage = option.vote_percentage,\n          is_chosen = option.is_chosen,\n          is_being_chosen = option.is_being_chosen;\n    let value = 1.5;\n\n    if (voter_count) {\n      value = voter_count / maxVoterCount * 100;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"poll-option\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('poll-option-wrapper', canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"poll-option-text-wrapper\",\n      title: this.getTitleString(voter_count, t),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(PollPercentage, {\n      value: vote_percentage,\n      chosen: is_chosen,\n      closed: closed,\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(PollRadio, {\n      hidden: !canBeSelected,\n      chosen: is_chosen,\n      beingChosen: is_being_chosen,\n      onChange: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"poll-option-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, text))), React.createElement(\"div\", {\n      className: classNames('poll-option-bottom-border', {\n        [classes.borderColor]: canBeSelected\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(LinearProgress, {\n      classes: {\n        root: classes.progressRoot,\n        bar: classes.progressBar\n      },\n      color: \"primary\",\n      variant: \"determinate\",\n      value: canBeSelected ? 0 : Math.max(1.5, value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}\n\nPollOption.propTypes = {\n  option: PropTypes.object.isRequired,\n  onVote: PropTypes.func.isRequired,\n  onUnvote: PropTypes.func.isRequired,\n  canBeSelected: PropTypes.bool,\n  closed: PropTypes.bool,\n  maxVoterCount: PropTypes.number\n};\nconst enhance = compose(withStyles(styles, {\n  withTheme: true\n}), withTranslation());\nexport default enhance(PollOption);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Message/Media/PollOption.js"],"names":["React","PropTypes","classNames","compose","withStyles","withTranslation","LinearProgress","PollRadio","PollPercentage","borderStyle","styles","theme","progressRoot","backgroundColor","margin","position","left","right","bottom","progressBar","transition","PollOption","Component","getTitleString","count","t","key","canBeSelected","props","toLowerCase","handleClick","event","onVote","stopPropagation","handleCancel","onUnvote","render","classes","option","onChange","closed","maxVoterCount","text","voter_count","vote_percentage","is_chosen","is_being_chosen","value","borderColor","root","bar","Math","max","propTypes","object","isRequired","func","bool","number","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n"]},"metadata":{},"sourceType":"module"}