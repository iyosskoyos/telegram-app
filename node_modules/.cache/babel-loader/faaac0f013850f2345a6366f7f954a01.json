{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectWithoutProperties from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import IconButton from'@material-ui/core/IconButton';import MoreVertIcon from'@material-ui/icons/MoreVert';import Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';import Button from'@material-ui/core/Button';import DialogTitle from'@material-ui/core/DialogTitle';import Dialog from'@material-ui/core/Dialog';import DialogContentText from'@material-ui/core/DialogContentText';import DialogContent from'@material-ui/core/DialogContent';import DialogActions from'@material-ui/core/DialogActions';import withStyles from'@material-ui/core/styles/withStyles';import{withSnackbar}from'notistack';import{compose}from'recompose';import ChatTile from'../Tile/ChatTile';import NotificationTimer from'../Additional/NotificationTimer';import{canClearHistory,canDeleteChat,getChatShortTitle,isPrivateChat}from'../../Utils/Chat';import{NOTIFICATION_AUTO_HIDE_DURATION_MS}from'../../Constants';import ApplicationStore from'../../Stores/ApplicationStore';import ChatStore from'../../Stores/ChatStore';import SupergroupStore from'../../Stores/SupergroupStore';import TdLibController from'../../Controllers/TdLibController';import'./MainMenuButton.css';var styles=function styles(theme){return{menuIconButton:{margin:'8px 12px 8px 0'}};};var menuAnchorOrigin={vertical:'bottom',horizontal:'right'};var menuTransformOrigin={vertical:'top',horizontal:'right'};var LeaveChatDialog=/*#__PURE__*/function(_React$Component){_inherits(LeaveChatDialog,_React$Component);function LeaveChatDialog(){var _getPrototypeOf2;var _this;_classCallCheck(this,LeaveChatDialog);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(LeaveChatDialog)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.getDeleteDialogText=function(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;if(!chat.type)return null;switch(chat.type['@type']){case'chatTypeBasicGroup':{return\"Are you sure you want to leave group \".concat(chat.title,\"?\");}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(chat.type.supergroup_id);if(supergroup){return supergroup.is_channel?\"Are you sure you want to leave channel \".concat(chat.title,\"?\"):\"Are you sure you want to leave group \".concat(chat.title,\"?\");}return null;}case'chatTypePrivate':case'chatTypeSecret':{return\"Are you sure you want to delete chat with \".concat(getChatShortTitle(chatId),\"?\");}}return null;};return _this;}_createClass(LeaveChatDialog,[{key:\"render\",value:function render(){var _this$props=this.props,_onClose=_this$props.onClose,chatId=_this$props.chatId,other=_objectWithoutProperties(_this$props,[\"onClose\",\"chatId\"]);return React.createElement(Dialog,Object.assign({transitionDuration:0,onClose:function onClose(){return _onClose(false);},\"aria-labelledby\":\"delete-dialog-title\"},other),React.createElement(DialogTitle,{id:\"delete-dialog-title\"},getChatShortTitle(chatId)),React.createElement(DialogContent,null,React.createElement(\"div\",{className:\"delete-dialog-content\"},React.createElement(ChatTile,{chatId:chatId}),React.createElement(DialogContentText,{id:\"delete-dialog-description\"},this.getDeleteDialogText(chatId)))),React.createElement(DialogActions,null,React.createElement(Button,{onClick:function onClick(){return _onClose(false);},color:\"primary\"},\"Cancel\"),React.createElement(Button,{onClick:function onClick(){return _onClose(true);},color:\"primary\",autoFocus:true},\"Ok\")));}}]);return LeaveChatDialog;}(React.Component);var ClearHistoryDialog=/*#__PURE__*/function(_React$Component2){_inherits(ClearHistoryDialog,_React$Component2);function ClearHistoryDialog(){_classCallCheck(this,ClearHistoryDialog);return _possibleConstructorReturn(this,_getPrototypeOf(ClearHistoryDialog).apply(this,arguments));}_createClass(ClearHistoryDialog,[{key:\"render\",value:function render(){var _this$props2=this.props,_onClose2=_this$props2.onClose,chatId=_this$props2.chatId,other=_objectWithoutProperties(_this$props2,[\"onClose\",\"chatId\"]);return React.createElement(Dialog,Object.assign({transitionDuration:0,onClose:function onClose(){return _onClose2(false);},\"aria-labelledby\":\"delete-dialog-title\"},other),React.createElement(DialogTitle,{id:\"delete-dialog-title\"},getChatShortTitle(chatId)),React.createElement(DialogContent,null,React.createElement(\"div\",{className:\"delete-dialog-content\"},React.createElement(ChatTile,{chatId:chatId}),React.createElement(DialogContentText,{id:\"delete-dialog-description\"},\"Are you sure you want clear history?\"))),React.createElement(DialogActions,null,React.createElement(Button,{onClick:function onClick(){return _onClose2(false);},color:\"primary\"},\"Cancel\"),React.createElement(Button,{onClick:function onClick(){return _onClose2(true);},color:\"primary\",autoFocus:true},\"Ok\")));}}]);return ClearHistoryDialog;}(React.Component);var MainMenuButton=/*#__PURE__*/function(_React$Component3){_inherits(MainMenuButton,_React$Component3);function MainMenuButton(props){var _this2;_classCallCheck(this,MainMenuButton);_this2=_possibleConstructorReturn(this,_getPrototypeOf(MainMenuButton).call(this,props));_this2.handleButtonClick=function(event){_this2.setState({anchorEl:event.currentTarget});};_this2.handleMenuClose=function(){_this2.setState({anchorEl:null});};_this2.handleChatInfo=function(){_this2.handleMenuClose();setTimeout(function(){return _this2.props.openChatDetails();},150);};_this2.handleClearHistory=function(){_this2.handleMenuClose();_this2.setState({openClearHistory:true});};_this2.handleClearHistoryContinue=function(result){_this2.setState({openClearHistory:false});if(!result)return;var chatId=ApplicationStore.getChatId();var message='Messages deleted';var request={'@type':'deleteChatHistory',chat_id:chatId,remove_from_chat_list:false};_this2.handleScheduledAction(chatId,'clientUpdateClearHistory',message,request);};_this2.handleLeave=function(){_this2.handleMenuClose();_this2.setState({openDelete:true});};_this2.handleLeaveContinue=function(result){_this2.setState({openDelete:false});if(!result)return;var chatId=ApplicationStore.getChatId();var message=_this2.getLeaveChatNotification(chatId);var request=isPrivateChat(chatId)?{'@type':'deleteChatHistory',chat_id:chatId,remove_from_chat_list:true}:{'@type':'leaveChat',chat_id:chatId};_this2.handleScheduledAction(chatId,'clientUpdateLeaveChat',message,request);};_this2.handleScheduledAction=function(chatId,clientUpdateType,message,request){if(!clientUpdateType)return;var key=\"\".concat(clientUpdateType,\" chatId=\").concat(chatId);var action=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return TdLibController.send(request);case 3:_context.prev=3;TdLibController.clientUpdate({'@type':clientUpdateType,chatId:chatId,inProgress:false});return _context.finish(3);case 6:case\"end\":return _context.stop();}}},_callee,null,[[0,,3,6]]);}));return function action(){return _ref.apply(this,arguments);};}();var cancel=function cancel(){TdLibController.clientUpdate({'@type':clientUpdateType,chatId:chatId,inProgress:false});};var _this2$props=_this2.props,enqueueSnackbar=_this2$props.enqueueSnackbar,classes=_this2$props.classes;if(!enqueueSnackbar)return;var TRANSITION_DELAY=150;if(ApplicationStore.addScheduledAction(key,NOTIFICATION_AUTO_HIDE_DURATION_MS,action,cancel)){TdLibController.clientUpdate({'@type':clientUpdateType,chatId:chatId,inProgress:true});enqueueSnackbar(message,{autoHideDuration:NOTIFICATION_AUTO_HIDE_DURATION_MS-2*TRANSITION_DELAY,action:[React.createElement(IconButton,{key:\"progress\",color:\"inherit\",className:\"progress-button\"},React.createElement(NotificationTimer,{timeout:NOTIFICATION_AUTO_HIDE_DURATION_MS})),React.createElement(Button,{key:\"undo\",color:\"primary\",size:\"small\",onClick:function onClick(){return ApplicationStore.removeScheduledAction(key);}},\"UNDO\")]});}};_this2.getLeaveChatTitle=function(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;if(!chat.type)return null;switch(chat.type['@type']){case'chatTypeBasicGroup':{return'Delete and exit';}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(chat.type.supergroup_id);if(supergroup){return supergroup.is_channel?'Leave channel':'Leave group';}return null;}case'chatTypePrivate':case'chatTypeSecret':{return'Delete conversation';}}return null;};_this2.getLeaveChatNotification=function(chatId){var chat=ChatStore.get(chatId);if(!chat)return'Chat deleted';if(!chat.type)return'Chat deleted';switch(chat.type['@type']){case'chatTypeBasicGroup':{return'Chat deleted';}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(chat.type.supergroup_id);if(supergroup){return supergroup.is_channel?'Left channel':'Left group';}return'Chat deleted';}case'chatTypePrivate':case'chatTypeSecret':{return'Chat deleted';}}return'Chat deleted';};_this2.state={anchorEl:null,openDelete:false,openClearHistory:false};return _this2;}_createClass(MainMenuButton,[{key:\"render\",value:function render(){var classes=this.props.classes;var _this$state=this.state,anchorEl=_this$state.anchorEl,openDelete=_this$state.openDelete,openClearHistory=_this$state.openClearHistory;var chatId=ApplicationStore.getChatId();var clearHistory=canClearHistory(chatId);var deleteChat=canDeleteChat(chatId);var leaveChatTitle=this.getLeaveChatTitle(chatId);return React.createElement(React.Fragment,null,React.createElement(IconButton,{\"aria-owns\":anchorEl?'simple-menu':null,\"aria-haspopup\":\"true\",className:classes.menuIconButton,\"aria-label\":\"Menu\",onClick:this.handleButtonClick},React.createElement(MoreVertIcon,null)),React.createElement(Menu,{id:\"main-menu\",anchorEl:anchorEl,open:Boolean(anchorEl),onClose:this.handleMenuClose,getContentAnchorEl:null,disableAutoFocusItem:true,disableRestoreFocus:true,anchorOrigin:menuAnchorOrigin,transformOrigin:menuTransformOrigin},React.createElement(MenuItem,{onClick:this.handleChatInfo},\"Chat info\"),clearHistory&&React.createElement(MenuItem,{onClick:this.handleClearHistory},\"Clear history\"),deleteChat&&leaveChatTitle&&React.createElement(MenuItem,{onClick:this.handleLeave},leaveChatTitle)),React.createElement(LeaveChatDialog,{chatId:chatId,open:openDelete,onClose:this.handleLeaveContinue}),React.createElement(ClearHistoryDialog,{chatId:chatId,open:openClearHistory,onClose:this.handleClearHistoryContinue}));}}]);return MainMenuButton;}(React.Component);var enhance=compose(withStyles(styles),withSnackbar);export default enhance(MainMenuButton);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnMiddle/MainMenuButton.js"],"names":["React","IconButton","MoreVertIcon","Menu","MenuItem","Button","DialogTitle","Dialog","DialogContentText","DialogContent","DialogActions","withStyles","withSnackbar","compose","ChatTile","NotificationTimer","canClearHistory","canDeleteChat","getChatShortTitle","isPrivateChat","NOTIFICATION_AUTO_HIDE_DURATION_MS","ApplicationStore","ChatStore","SupergroupStore","TdLibController","styles","theme","menuIconButton","margin","menuAnchorOrigin","vertical","horizontal","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","chatId","chat","get","type","title","supergroup","supergroup_id","is_channel","props","onClose","other","Component","ClearHistoryDialog","MainMenuButton","handleButtonClick","event","setState","anchorEl","currentTarget","handleMenuClose","handleChatInfo","setTimeout","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","result","getChatId","message","request","chat_id","remove_from_chat_list","handleScheduledAction","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","key","action","send","clientUpdate","inProgress","cancel","enqueueSnackbar","classes","TRANSITION_DELAY","addScheduledAction","autoHideDuration","removeScheduledAction","getLeaveChatTitle","state","clearHistory","deleteChat","leaveChatTitle","Boolean","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n"]},"metadata":{},"sourceType":"module"}