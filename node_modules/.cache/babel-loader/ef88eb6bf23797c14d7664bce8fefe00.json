{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import PropTypes from'prop-types';import{compose}from'recompose';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import SharedMediaBase from'./SharedMediaBase';import SharedLink from'../../Tile/SharedMedia/SharedLink';import{openMedia as _openMedia}from'../../../Utils/Message';import'./SharedLinks.css';var SharedLinks=/*#__PURE__*/function(_SharedMediaBase){_inherits(SharedLinks,_SharedMediaBase);function SharedLinks(){_classCallCheck(this,SharedLinks);return _possibleConstructorReturn(this,_getPrototypeOf(SharedLinks).apply(this,arguments));}_createClass(SharedLinks,[{key:\"isValidContent\",value:function isValidContent(content){if(!content)return false;var web_page=content.web_page,text=content.text;if(web_page)return true;if(!text)return false;var entities=text.entities;if(!entities)return false;return entities.find(function(x){return x.type['@type']==='textEntityTypeUrl'||x.type['@type']==='textEntityTypeTextUrl'||x.type['@type']==='textEntityTypeEmailAddress';});}},{key:\"getSearchFilter\",value:function getSearchFilter(){return{'@type':'searchMessagesFilterUrl'};}},{key:\"getHeader\",value:function getHeader(){var t=this.props.t;return t('LinksTitle');}},{key:\"getItemTemplate\",value:function getItemTemplate(message){var migratedChatId=this.props.migratedChatId;var chat_id=message.chat_id,content=message.content,id=message.id;return React.createElement(SharedLink,{key:\"chat_id=\".concat(chat_id,\"_message_id=\").concat(id),chatId:chat_id,messageId:id,webPage:content.web_page,openMedia:function openMedia(){return _openMedia(chat_id,id,false);},showOpenMessage:chat_id!==migratedChatId});}}]);return SharedLinks;}(SharedMediaBase);SharedLinks.propTypes={chatId:PropTypes.number.isRequired,migratedChatId:PropTypes.number,onClose:PropTypes.func.isRequired,popup:PropTypes.bool,minHeight:PropTypes.number};SharedLinks.defaultProps={popup:false,minHeight:0};var enhance=compose(withStyles(SharedMediaBase.getStyles),withTranslation());export default enhance(SharedLinks);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnRight/SharedMedia/SharedLinks.js"],"names":["React","PropTypes","compose","withStyles","withTranslation","SharedMediaBase","SharedLink","openMedia","SharedLinks","content","web_page","text","entities","find","x","type","t","props","message","migratedChatId","chat_id","id","propTypes","chatId","number","isRequired","onClose","func","popup","bool","minHeight","defaultProps","enhance","getStyles"],"mappings":"kqBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CACA,OAASC,eAAT,KAAgC,eAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,mCAAvB,CACA,OAASC,SAAS,GAATA,CAAAA,UAAT,KAA0B,wBAA1B,CACA,MAAO,mBAAP,C,GAEMC,CAAAA,W,oTACaC,O,CAAS,CACpB,GAAI,CAACA,OAAL,CAAc,MAAO,MAAP,CADM,GAGZC,CAAAA,QAHY,CAGOD,OAHP,CAGZC,QAHY,CAGFC,IAHE,CAGOF,OAHP,CAGFE,IAHE,CAIpB,GAAID,QAAJ,CAAc,MAAO,KAAP,CACd,GAAI,CAACC,IAAL,CAAW,MAAO,MAAP,CALS,GAOZC,CAAAA,QAPY,CAOCD,IAPD,CAOZC,QAPY,CAQpB,GAAI,CAACA,QAAL,CAAe,MAAO,MAAP,CAEf,MAAOA,CAAAA,QAAQ,CAACC,IAAT,CACH,SAAAC,CAAC,QACGA,CAAAA,CAAC,CAACC,IAAF,CAAO,OAAP,IAAoB,mBAApB,EACAD,CAAC,CAACC,IAAF,CAAO,OAAP,IAAoB,uBADpB,EAEAD,CAAC,CAACC,IAAF,CAAO,OAAP,IAAoB,4BAHvB,EADE,CAAP,CAMH,C,yDAEiB,CACd,MAAO,CAAE,QAAS,yBAAX,CAAP,CACH,C,6CAEW,IACAC,CAAAA,CADA,CACM,KAAKC,KADX,CACAD,CADA,CAGR,MAAOA,CAAAA,CAAC,CAAC,YAAD,CAAR,CACH,C,wDAEeE,O,CAAS,IACbC,CAAAA,cADa,CACM,KAAKF,KADX,CACbE,cADa,IAEbC,CAAAA,OAFa,CAEYF,OAFZ,CAEbE,OAFa,CAEJX,OAFI,CAEYS,OAFZ,CAEJT,OAFI,CAEKY,EAFL,CAEYH,OAFZ,CAEKG,EAFL,CAIrB,MACI,qBAAC,UAAD,EACI,GAAG,mBAAaD,OAAb,wBAAmCC,EAAnC,CADP,CAEI,MAAM,CAAED,OAFZ,CAGI,SAAS,CAAEC,EAHf,CAII,OAAO,CAAEZ,OAAO,CAACC,QAJrB,CAKI,SAAS,CAAE,2BAAMH,CAAAA,UAAS,CAACa,OAAD,CAAUC,EAAV,CAAc,KAAd,CAAf,EALf,CAMI,eAAe,CAAED,OAAO,GAAKD,cANjC,EADJ,CAUH,C,yBA3CqBd,e,EA8C1BG,WAAW,CAACc,SAAZ,CAAwB,CACpBC,MAAM,CAAEtB,SAAS,CAACuB,MAAV,CAAiBC,UADL,CAEpBN,cAAc,CAAElB,SAAS,CAACuB,MAFN,CAGpBE,OAAO,CAAEzB,SAAS,CAAC0B,IAAV,CAAeF,UAHJ,CAIpBG,KAAK,CAAE3B,SAAS,CAAC4B,IAJG,CAKpBC,SAAS,CAAE7B,SAAS,CAACuB,MALD,CAAxB,CAQAhB,WAAW,CAACuB,YAAZ,CAA2B,CACvBH,KAAK,CAAE,KADgB,CAEvBE,SAAS,CAAE,CAFY,CAA3B,CAKA,GAAME,CAAAA,OAAO,CAAG9B,OAAO,CACnBC,UAAU,CAACE,eAAe,CAAC4B,SAAjB,CADS,CAEnB7B,eAAe,EAFI,CAAvB,CAKA,cAAe4B,CAAAA,OAAO,CAACxB,WAAD,CAAtB","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedLinks);\n"]},"metadata":{},"sourceType":"module"}