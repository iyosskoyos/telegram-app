{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnRight/SharedMedia/SharedLinks.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n  isValidContent(content) {\n    if (!content) return false;\n    const web_page = content.web_page,\n          text = content.text;\n    if (web_page) return true;\n    if (!text) return false;\n    const entities = text.entities;\n    if (!entities) return false;\n    return entities.find(x => x.type['@type'] === 'textEntityTypeUrl' || x.type['@type'] === 'textEntityTypeTextUrl' || x.type['@type'] === 'textEntityTypeEmailAddress');\n  }\n\n  getSearchFilter() {\n    return {\n      '@type': 'searchMessagesFilterUrl'\n    };\n  }\n\n  getHeader() {\n    const t = this.props.t;\n    return t('LinksTitle');\n  }\n\n  getItemTemplate(message) {\n    const migratedChatId = this.props.migratedChatId;\n    const chat_id = message.chat_id,\n          content = message.content,\n          id = message.id;\n    return React.createElement(SharedLink, {\n      key: \"chat_id=\".concat(chat_id, \"_message_id=\").concat(id),\n      chatId: chat_id,\n      messageId: id,\n      webPage: content.web_page,\n      openMedia: () => openMedia(chat_id, id, false),\n      showOpenMessage: chat_id !== migratedChatId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nSharedLinks.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  migratedChatId: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n  popup: PropTypes.bool,\n  minHeight: PropTypes.number\n};\nSharedLinks.defaultProps = {\n  popup: false,\n  minHeight: 0\n};\nconst enhance = compose(withStyles(SharedMediaBase.getStyles), withTranslation());\nexport default enhance(SharedLinks);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnRight/SharedMedia/SharedLinks.js"],"names":["React","PropTypes","compose","withStyles","withTranslation","SharedMediaBase","SharedLink","openMedia","SharedLinks","isValidContent","content","web_page","text","entities","find","x","type","getSearchFilter","getHeader","t","props","getItemTemplate","message","migratedChatId","chat_id","id","propTypes","chatId","number","isRequired","onClose","func","popup","bool","minHeight","defaultProps","enhance","getStyles"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BH,eAA1B,CAA0C;AACtCI,EAAAA,cAAc,CAACC,OAAD,EAAU;AACpB,QAAI,CAACA,OAAL,EAAc,OAAO,KAAP;AADM,UAGZC,QAHY,GAGOD,OAHP,CAGZC,QAHY;AAAA,UAGFC,IAHE,GAGOF,OAHP,CAGFE,IAHE;AAIpB,QAAID,QAAJ,EAAc,OAAO,IAAP;AACd,QAAI,CAACC,IAAL,EAAW,OAAO,KAAP;AALS,UAOZC,QAPY,GAOCD,IAPD,CAOZC,QAPY;AAQpB,QAAI,CAACA,QAAL,EAAe,OAAO,KAAP;AAEf,WAAOA,QAAQ,CAACC,IAAT,CACHC,CAAC,IACGA,CAAC,CAACC,IAAF,CAAO,OAAP,MAAoB,mBAApB,IACAD,CAAC,CAACC,IAAF,CAAO,OAAP,MAAoB,uBADpB,IAEAD,CAAC,CAACC,IAAF,CAAO,OAAP,MAAoB,4BAJrB,CAAP;AAMH;;AAEDC,EAAAA,eAAe,GAAG;AACd,WAAO;AAAE,eAAS;AAAX,KAAP;AACH;;AAEDC,EAAAA,SAAS,GAAG;AAAA,UACAC,CADA,GACM,KAAKC,KADX,CACAD,CADA;AAGR,WAAOA,CAAC,CAAC,YAAD,CAAR;AACH;;AAEDE,EAAAA,eAAe,CAACC,OAAD,EAAU;AAAA,UACbC,cADa,GACM,KAAKH,KADX,CACbG,cADa;AAAA,UAEbC,OAFa,GAEYF,OAFZ,CAEbE,OAFa;AAAA,UAEJd,OAFI,GAEYY,OAFZ,CAEJZ,OAFI;AAAA,UAEKe,EAFL,GAEYH,OAFZ,CAEKG,EAFL;AAIrB,WACI,oBAAC,UAAD;AACI,MAAA,GAAG,oBAAaD,OAAb,yBAAmCC,EAAnC,CADP;AAEI,MAAA,MAAM,EAAED,OAFZ;AAGI,MAAA,SAAS,EAAEC,EAHf;AAII,MAAA,OAAO,EAAEf,OAAO,CAACC,QAJrB;AAKI,MAAA,SAAS,EAAE,MAAMJ,SAAS,CAACiB,OAAD,EAAUC,EAAV,EAAc,KAAd,CAL9B;AAMI,MAAA,eAAe,EAAED,OAAO,KAAKD,cANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AA3CqC;;AA8C1Cf,WAAW,CAACkB,SAAZ,GAAwB;AACpBC,EAAAA,MAAM,EAAE1B,SAAS,CAAC2B,MAAV,CAAiBC,UADL;AAEpBN,EAAAA,cAAc,EAAEtB,SAAS,CAAC2B,MAFN;AAGpBE,EAAAA,OAAO,EAAE7B,SAAS,CAAC8B,IAAV,CAAeF,UAHJ;AAIpBG,EAAAA,KAAK,EAAE/B,SAAS,CAACgC,IAJG;AAKpBC,EAAAA,SAAS,EAAEjC,SAAS,CAAC2B;AALD,CAAxB;AAQApB,WAAW,CAAC2B,YAAZ,GAA2B;AACvBH,EAAAA,KAAK,EAAE,KADgB;AAEvBE,EAAAA,SAAS,EAAE;AAFY,CAA3B;AAKA,MAAME,OAAO,GAAGlC,OAAO,CACnBC,UAAU,CAACE,eAAe,CAACgC,SAAjB,CADS,EAEnBjC,eAAe,EAFI,CAAvB;AAKA,eAAegC,OAAO,CAAC5B,WAAD,CAAtB","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedLinks);\n"]},"metadata":{},"sourceType":"module"}