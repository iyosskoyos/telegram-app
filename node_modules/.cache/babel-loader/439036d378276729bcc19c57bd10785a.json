{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnRight/SharedMedia/SharedMediaHeader.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\nconst styles = {\n  headerBackButton: {\n    margin: '8px -2px 8px 12px'\n  },\n  headerSearchButton: {\n    margin: '8px 12px 8px -2px'\n  }\n};\n\nclass SharedMediaHeader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = () => {\n      if (this.searchInputRef.current) {\n        const innerText = this.searchInputRef.current.innerText;\n\n        if (innerText) {\n          this.searchInputRef.current.innerText = '';\n          const onSearch = this.props.onSearch;\n          if (!onSearch) return;\n          onSearch('');\n          return;\n        }\n      }\n\n      const onCloseSearch = this.props.onCloseSearch;\n      const openSearch = this.state.openSearch;\n      this.setState({\n        openSearch: !openSearch\n      });\n\n      if (onCloseSearch) {\n        onCloseSearch();\n      }\n    };\n\n    this.handleKeyDown = event => {\n      if (event.keyCode === 13) {\n        event.preventDefault();\n      }\n    };\n\n    this.handleKeyUp = () => {\n      const innerText = this.searchInputRef.current.innerText;\n      const innerHTML = this.searchInputRef.current.innerHTML;\n\n      if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n        this.searchInputRef.current.innerHTML = '';\n      }\n\n      const onSearch = this.props.onSearch;\n      if (!onSearch) return;\n      onSearch(innerText);\n    };\n\n    this.handlePaste = event => {\n      const plainText = event.clipboardData.getData('text/plain');\n\n      if (plainText) {\n        event.preventDefault();\n        document.execCommand('insertHTML', false, plainText);\n      }\n    };\n\n    this.searchInputRef = React.createRef();\n    this.state = {\n      openSearch: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const openSearch = this.state.openSearch;\n\n    if (openSearch && openSearch !== prevProps.openSearch) {\n      setTimeout(() => {\n        if (this.searchInputRef.current) {\n          this.searchInputRef.current.focus();\n        }\n      }, ANIMATION_DURATION_200MS);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          t = _this$props.t,\n          title = _this$props.title,\n          onClick = _this$props.onClick,\n          onClose = _this$props.onClose,\n          onSearch = _this$props.onSearch;\n    const openSearch = this.state.openSearch;\n    return React.createElement(\"div\", {\n      className: \"header-master\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, !openSearch ? React.createElement(React.Fragment, null, React.createElement(IconButton, {\n      className: classes.headerBackButton,\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(ArrowBackIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"header-status grow cursor-pointer\",\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"header-status-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, title))) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"header-search-input grow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header-search-inputbox\",\n      ref: this.searchInputRef,\n      placeholder: t('Search'),\n      contentEditable: true,\n      suppressContentEditableWarning: true,\n      onKeyDown: this.handleKeyDown,\n      onKeyUp: this.handleKeyUp,\n      onPaste: this.handlePaste,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))), Boolean(onSearch) && React.createElement(IconButton, {\n      className: classes.headerSearchButton,\n      onMouseDown: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(SpeedDialIcon, {\n      open: openSearch,\n      icon: React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }),\n      openIcon: React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  }\n\n}\n\nSharedMediaHeader.propTypes = {\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n  onClose: PropTypes.func,\n  onCloseSearch: PropTypes.func,\n  onSearch: PropTypes.func\n};\nconst enhance = compose(withStyles(styles, {\n  withTheme: true\n}), withTranslation());\nexport default enhance(SharedMediaHeader);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnRight/SharedMedia/SharedMediaHeader.js"],"names":["React","PropTypes","compose","withStyles","withTranslation","ArrowBackIcon","CloseIcon","IconButton","SearchIcon","SpeedDialIcon","ANIMATION_DURATION_200MS","styles","headerBackButton","margin","headerSearchButton","SharedMediaHeader","Component","constructor","props","handleSearch","searchInputRef","current","innerText","onSearch","onCloseSearch","openSearch","state","setState","handleKeyDown","event","keyCode","preventDefault","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","document","execCommand","createRef","componentDidUpdate","prevProps","prevState","snapshot","setTimeout","focus","render","classes","t","title","onClick","onClose","Boolean","propTypes","string","func","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInputRef.current.innerText;\n        const innerHTML = this.searchInputRef.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInputRef.current.innerHTML = '';\n        }\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n"]},"metadata":{},"sourceType":"module"}