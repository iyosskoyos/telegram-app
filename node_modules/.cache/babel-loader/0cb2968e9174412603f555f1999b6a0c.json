{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import Typography from'@material-ui/core/es/Typography/Typography';import CircularProgress from'@material-ui/core/CircularProgress';import'./NotificationTimer.css';var NotificationTimer=/*#__PURE__*/function(_React$Component){_inherits(NotificationTimer,_React$Component);function NotificationTimer(props){var _this;_classCallCheck(this,NotificationTimer);_this=_possibleConstructorReturn(this,_getPrototypeOf(NotificationTimer).call(this,props));_this.handleTimer=function(){var now=new Date();var seconds=_this.expire-now;var value=100-seconds/_this.props.timeout*100;// console.log(`NotificationTimer ms=${seconds} value=${value}`);\n_this.setState({seconds:seconds>0?seconds:0,value:value>100?100:value});if(now>=_this.expire){if(_this.timerId){clearInterval(_this.timerId);_this.timerId=null;}}};_this.state={seconds:_this.props.timeout/1000,value:0};return _this;}_createClass(NotificationTimer,[{key:\"componentDidMount\",value:function componentDidMount(){this.startTime=new Date();this.expire=this.startTime;this.expire.setMilliseconds(this.expire.getMilliseconds()+this.props.timeout);this.timerId=setInterval(this.handleTimer,100);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.timerId){clearInterval(this.timerId);this.timerId=null;}}},{key:\"render\",value:function render(){var _this$state=this.state,value=_this$state.value,seconds=_this$state.seconds;return React.createElement(\"div\",{className:\"notification-timer\"},React.createElement(\"div\",{className:\"notification-timer-text\"},React.createElement(Typography,{color:\"inherit\"},(seconds/1000).toFixed())),React.createElement(\"div\",{className:\"notification-timer-progress\"},React.createElement(CircularProgress,{size:32,value:100-value,variant:\"static\"})));}}]);return NotificationTimer;}(React.Component);export default NotificationTimer;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Additional/NotificationTimer.js"],"names":["React","Typography","CircularProgress","NotificationTimer","props","handleTimer","now","Date","seconds","expire","value","timeout","setState","timerId","clearInterval","state","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","Component"],"mappings":"wkBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,4CAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAO,yBAAP,C,GAEMC,CAAAA,iB,uFACF,2BAAYC,KAAZ,CAAmB,mDACf,mFAAMA,KAAN,GADe,MAgBnBC,WAhBmB,CAgBL,UAAM,CAChB,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,EAAZ,CACA,GAAMC,CAAAA,OAAO,CAAG,MAAKC,MAAL,CAAcH,GAA9B,CACA,GAAMI,CAAAA,KAAK,CAAG,IAAOF,OAAO,CAAG,MAAKJ,KAAL,CAAWO,OAAtB,CAAiC,GAArD,CACA;AACA,MAAKC,QAAL,CAAc,CACVJ,OAAO,CAAEA,OAAO,CAAG,CAAV,CAAcA,OAAd,CAAwB,CADvB,CAEVE,KAAK,CAAEA,KAAK,CAAG,GAAR,CAAc,GAAd,CAAoBA,KAFjB,CAAd,EAKA,GAAIJ,GAAG,EAAI,MAAKG,MAAhB,CAAwB,CACpB,GAAI,MAAKI,OAAT,CAAkB,CACdC,aAAa,CAAC,MAAKD,OAAN,CAAb,CACA,MAAKA,OAAL,CAAe,IAAf,CACH,CACJ,CACJ,CAhCkB,CAGf,MAAKE,KAAL,CAAa,CACTP,OAAO,CAAE,MAAKJ,KAAL,CAAWO,OAAX,CAAqB,IADrB,CAETD,KAAK,CAAE,CAFE,CAAb,CAHe,aAOlB,C,2FAEmB,CAChB,KAAKM,SAAL,CAAiB,GAAIT,CAAAA,IAAJ,EAAjB,CACA,KAAKE,MAAL,CAAc,KAAKO,SAAnB,CACA,KAAKP,MAAL,CAAYQ,eAAZ,CAA4B,KAAKR,MAAL,CAAYS,eAAZ,GAAgC,KAAKd,KAAL,CAAWO,OAAvE,EACA,KAAKE,OAAL,CAAeM,WAAW,CAAC,KAAKd,WAAN,CAAmB,GAAnB,CAA1B,CACH,C,mEAoBsB,CACnB,GAAI,KAAKQ,OAAT,CAAkB,CACdC,aAAa,CAAC,KAAKD,OAAN,CAAb,CACA,KAAKA,OAAL,CAAe,IAAf,CACH,CACJ,C,uCAEQ,iBACsB,KAAKE,KAD3B,CACGL,KADH,aACGA,KADH,CACUF,OADV,aACUA,OADV,CAGL,MACI,4BAAK,SAAS,CAAC,oBAAf,EACI,2BAAK,SAAS,CAAC,yBAAf,EACI,oBAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,EAA6B,CAACA,OAAO,CAAG,IAAX,EAAiBY,OAAjB,EAA7B,CADJ,CADJ,CAII,2BAAK,SAAS,CAAC,6BAAf,EACI,oBAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,CAA4B,KAAK,CAAE,IAAMV,KAAzC,CAAgD,OAAO,CAAC,QAAxD,EADJ,CAJJ,CADJ,CAUH,C,+BAvD2BV,KAAK,CAACqB,S,EA8DtC,cAAelB,CAAAA,iBAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n"]},"metadata":{},"sourceType":"module"}