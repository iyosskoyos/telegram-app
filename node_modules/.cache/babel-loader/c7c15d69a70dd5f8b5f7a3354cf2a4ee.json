{"ast":null,"code":"import _slicedToArray from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import{TYPING_INPUT_INTERVAL_S}from'../Constants';var InputTypingManager=/*#__PURE__*/function(){function InputTypingManager(chatId,timeoutCallback){_classCallCheck(this,InputTypingManager);this.actions=new Map();this.timerId=null;this.chatId=chatId;this.timeoutCallback=timeoutCallback;this.handleTimer=this.handleTimer.bind(this);this.addAction=this.addAction.bind(this);this.clearAction=this.clearAction.bind(this);this.setActionsTimeout=this.setActionsTimeout.bind(this);}_createClass(InputTypingManager,[{key:\"handleTimer\",value:function handleTimer(){var now=new Date();var expiredActions=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=this.actions[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var _ref3=_step.value;var _ref2=_slicedToArray(_ref3,2);var key=_ref2[0];var value=_ref2[1];var actionTimeout=value.expire-now;if(actionTimeout<=0)expiredActions.push(key);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}for(var _i=0,_expiredActions=expiredActions;_i<_expiredActions.length;_i++){var _key=_expiredActions[_i];this.actions.delete(_key);}var update={'@type':'updateUserChatAction',chat_id:this.chatId,action:{'@type':'chatActionTimerUpdate'}};this.timeoutCallback(update);// ChatStore.emit('updateUserChatAction', update);\nthis.setActionsTimeout();}},{key:\"addAction\",value:function addAction(userId,action){var expire=new Date();expire.setSeconds(expire.getSeconds()+TYPING_INPUT_INTERVAL_S);this.actions.set(userId,{expire:expire,action:action});if(this.timerId){clearTimeout(this.timerId);}this.setActionsTimeout();}},{key:\"setActionsTimeout\",value:function setActionsTimeout(){var now=new Date();var timeout=1000000;var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=this.actions[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _ref6=_step2.value;var _ref5=_slicedToArray(_ref6,2);var key=_ref5[0];var value=_ref5[1];var actionTimeout=value.expire-now;if(actionTimeout<timeout)timeout=actionTimeout;if(timeout<0)timeout=0;}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}if(timeout<1000000){this.timerId=setTimeout(this.handleTimer,timeout);}}},{key:\"clearAction\",value:function clearAction(userId){this.actions.delete(userId);if(this.timerId){clearTimeout(this.timerId);}this.setActionsTimeout();}}]);return InputTypingManager;}();export default InputTypingManager;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Utils/InputTypingManager.js"],"names":["TYPING_INPUT_INTERVAL_S","InputTypingManager","chatId","timeoutCallback","actions","Map","timerId","handleTimer","bind","addAction","clearAction","setActionsTimeout","now","Date","expiredActions","key","value","actionTimeout","expire","push","delete","update","chat_id","action","userId","setSeconds","getSeconds","set","clearTimeout","timeout","setTimeout"],"mappings":"oVAAA;;;;;GAOA,OAASA,uBAAT,KAAwC,cAAxC,C,GAEMC,CAAAA,kB,yBACF,4BAAYC,MAAZ,CAAoBC,eAApB,CAAqC,0CACjC,KAAKC,OAAL,CAAe,GAAIC,CAAAA,GAAJ,EAAf,CACA,KAAKC,OAAL,CAAe,IAAf,CACA,KAAKJ,MAAL,CAAcA,MAAd,CACA,KAAKC,eAAL,CAAuBA,eAAvB,CAEA,KAAKI,WAAL,CAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB,CACA,KAAKC,SAAL,CAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB,CACA,KAAKE,WAAL,CAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB,CACA,KAAKG,iBAAL,CAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB,CACH,C,gFAEa,CACV,GAAII,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,EAAV,CACA,GAAIC,CAAAA,cAAc,CAAG,EAArB,CAFU,gGAGV,kBAAyB,KAAKV,OAA9B,oHAAuC,4DAA7BW,CAAAA,GAA6B,aAAxBC,CAAAA,KAAwB,UACnC,GAAIC,CAAAA,aAAa,CAAGD,KAAK,CAACE,MAAN,CAAeN,GAAnC,CACA,GAAIK,aAAa,EAAI,CAArB,CAAwBH,cAAc,CAACK,IAAf,CAAoBJ,GAApB,EAC3B,CANS,qMAQV,6BAAgBD,cAAhB,gCAAgC,CAA3B,GAAIC,CAAAA,IAAG,oBAAP,CACD,KAAKX,OAAL,CAAagB,MAAb,CAAoBL,IAApB,EACH,CAED,GAAIM,CAAAA,MAAM,CAAG,CACT,QAAS,sBADA,CAETC,OAAO,CAAE,KAAKpB,MAFL,CAGTqB,MAAM,CAAE,CAAE,QAAS,uBAAX,CAHC,CAAb,CAMA,KAAKpB,eAAL,CAAqBkB,MAArB,EACA;AAEA,KAAKV,iBAAL,GACH,C,4CAESa,M,CAAQD,M,CAAQ,CACtB,GAAIL,CAAAA,MAAM,CAAG,GAAIL,CAAAA,IAAJ,EAAb,CACAK,MAAM,CAACO,UAAP,CAAkBP,MAAM,CAACQ,UAAP,GAAsB1B,uBAAxC,EAEA,KAAKI,OAAL,CAAauB,GAAb,CAAiBH,MAAjB,CAAyB,CAAEN,MAAM,CAAEA,MAAV,CAAkBK,MAAM,CAAEA,MAA1B,CAAzB,EAEA,GAAI,KAAKjB,OAAT,CAAkB,CACdsB,YAAY,CAAC,KAAKtB,OAAN,CAAZ,CACH,CAED,KAAKK,iBAAL,GACH,C,6DAEmB,CAChB,GAAIC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,EAAV,CACA,GAAIgB,CAAAA,OAAO,CAAG,OAAd,CAFgB,mGAGhB,mBAAyB,KAAKzB,OAA9B,yHAAuC,6DAA7BW,CAAAA,GAA6B,aAAxBC,CAAAA,KAAwB,UACnC,GAAIC,CAAAA,aAAa,CAAGD,KAAK,CAACE,MAAN,CAAeN,GAAnC,CACA,GAAIK,aAAa,CAAGY,OAApB,CAA6BA,OAAO,CAAGZ,aAAV,CAC7B,GAAIY,OAAO,CAAG,CAAd,CAAiBA,OAAO,CAAG,CAAV,CACpB,CAPe,4MAShB,GAAIA,OAAO,CAAG,OAAd,CAAuB,CACnB,KAAKvB,OAAL,CAAewB,UAAU,CAAC,KAAKvB,WAAN,CAAmBsB,OAAnB,CAAzB,CACH,CACJ,C,gDAEWL,M,CAAQ,CAChB,KAAKpB,OAAL,CAAagB,MAAb,CAAoBI,MAApB,EAEA,GAAI,KAAKlB,OAAT,CAAkB,CACdsB,YAAY,CAAC,KAAKtB,OAAN,CAAZ,CACH,CAED,KAAKK,iBAAL,GACH,C,kCAGL,cAAeV,CAAAA,kBAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_INPUT_INTERVAL_S } from '../Constants';\n\nclass InputTypingManager {\n    constructor(chatId, timeoutCallback) {\n        this.actions = new Map();\n        this.timerId = null;\n        this.chatId = chatId;\n        this.timeoutCallback = timeoutCallback;\n\n        this.handleTimer = this.handleTimer.bind(this);\n        this.addAction = this.addAction.bind(this);\n        this.clearAction = this.clearAction.bind(this);\n        this.setActionsTimeout = this.setActionsTimeout.bind(this);\n    }\n\n    handleTimer() {\n        let now = new Date();\n        let expiredActions = [];\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout <= 0) expiredActions.push(key);\n        }\n\n        for (let key of expiredActions) {\n            this.actions.delete(key);\n        }\n\n        let update = {\n            '@type': 'updateUserChatAction',\n            chat_id: this.chatId,\n            action: { '@type': 'chatActionTimerUpdate' }\n        };\n\n        this.timeoutCallback(update);\n        // ChatStore.emit('updateUserChatAction', update);\n\n        this.setActionsTimeout();\n    }\n\n    addAction(userId, action) {\n        let expire = new Date();\n        expire.setSeconds(expire.getSeconds() + TYPING_INPUT_INTERVAL_S);\n\n        this.actions.set(userId, { expire: expire, action: action });\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setActionsTimeout();\n    }\n\n    setActionsTimeout() {\n        let now = new Date();\n        let timeout = 1000000;\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout < timeout) timeout = actionTimeout;\n            if (timeout < 0) timeout = 0;\n        }\n\n        if (timeout < 1000000) {\n            this.timerId = setTimeout(this.handleTimer, timeout);\n        }\n    }\n\n    clearAction(userId) {\n        this.actions.delete(userId);\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setActionsTimeout();\n    }\n}\n\nexport default InputTypingManager;\n"]},"metadata":{},"sourceType":"module"}