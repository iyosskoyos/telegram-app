{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/InstantView/Blocks/EmbeddedPost.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n  const url = props.url,\n        author = props.author,\n        authorPhoto = props.authorPhoto,\n        date = props.date,\n        pageBlocks = props.pageBlocks,\n        caption = props.caption,\n        iv = props.iv;\n  return React.createElement(\"blockquote\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, Boolean(author) && React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, author), React.createElement(AuthorDate, {\n    author: null,\n    publishDate: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), pageBlocks.map((x, index) => getPageBlock(x, iv, index)), React.createElement(Caption, {\n    text: caption.text,\n    credit: caption.credit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n}\n\nEmbeddedPost.propTypes = {\n  url: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  authorPhoto: PropTypes.object,\n  date: PropTypes.number.isRequired,\n  pageBlocks: PropTypes.array.isRequired,\n  caption: PropTypes.object.isRequired\n};\nexport default withIV(EmbeddedPost);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/InstantView/Blocks/EmbeddedPost.js"],"names":["React","PropTypes","withIV","Caption","getPageBlock","AuthorDate","RichText","EmbeddedPost","props","url","author","authorPhoto","date","pageBlocks","caption","iv","Boolean","map","x","index","text","credit","propTypes","string","isRequired","object","number","array"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,QACjBC,GADiB,GAC2CD,KAD3C,CACjBC,GADiB;AAAA,QACZC,MADY,GAC2CF,KAD3C,CACZE,MADY;AAAA,QACJC,WADI,GAC2CH,KAD3C,CACJG,WADI;AAAA,QACSC,IADT,GAC2CJ,KAD3C,CACSI,IADT;AAAA,QACeC,UADf,GAC2CL,KAD3C,CACeK,UADf;AAAA,QAC2BC,OAD3B,GAC2CN,KAD3C,CAC2BM,OAD3B;AAAA,QACoCC,EADpC,GAC2CP,KAD3C,CACoCO,EADpC;AAGzB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OAAO,CAACN,MAAD,CAAP,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAL,CADxB,EAEI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAE,IAApB;AAA0B,IAAA,WAAW,EAAEE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKC,UAAU,CAACI,GAAX,CAAe,CAACC,CAAD,EAAIC,KAAJ,KAAcf,YAAY,CAACc,CAAD,EAAIH,EAAJ,EAAQI,KAAR,CAAzC,CAHL,EAII,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEL,OAAO,CAACM,IAAvB;AAA6B,IAAA,MAAM,EAAEN,OAAO,CAACO,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ;AAUH;;AAEDd,YAAY,CAACe,SAAb,GAAyB;AACrBb,EAAAA,GAAG,EAAER,SAAS,CAACsB,MAAV,CAAiBC,UADD;AAErBd,EAAAA,MAAM,EAAET,SAAS,CAACsB,MAAV,CAAiBC,UAFJ;AAGrBb,EAAAA,WAAW,EAAEV,SAAS,CAACwB,MAHF;AAIrBb,EAAAA,IAAI,EAAEX,SAAS,CAACyB,MAAV,CAAiBF,UAJF;AAKrBX,EAAAA,UAAU,EAAEZ,SAAS,CAAC0B,KAAV,CAAgBH,UALP;AAMrBV,EAAAA,OAAO,EAAEb,SAAS,CAACwB,MAAV,CAAiBD;AANL,CAAzB;AASA,eAAetB,MAAM,CAACK,YAAD,CAArB","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n"]},"metadata":{},"sourceType":"module"}