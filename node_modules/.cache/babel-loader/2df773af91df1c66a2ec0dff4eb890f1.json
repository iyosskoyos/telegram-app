{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import{EventEmitter}from'events';import TdLibController from'../Controllers/TdLibController';var StickerStore=/*#__PURE__*/function(_EventEmitter){_inherits(StickerStore,_EventEmitter);function StickerStore(){var _this;_classCallCheck(this,StickerStore);_this=_possibleConstructorReturn(this,_getPrototypeOf(StickerStore).call(this));_this.reset=function(){_this.stickerSet=null;_this.hint=null;_this.animationData=new WeakMap();};_this.onUpdate=function(update){switch(update['@type']){case'updateAuthorizationState':{var authorization_state=update.authorization_state;if(!authorization_state)break;switch(authorization_state['@type']){case'authorizationStateClosed':{_this.reset();break;}}break;}case'updateInstalledStickerSets':{var sticker_set_ids=update.sticker_set_ids;if(_this.stickerSet){var _this$stickerSet=_this.stickerSet,id=_this$stickerSet.id,is_installed=_this$stickerSet.is_installed;if(is_installed!==sticker_set_ids.some(function(x){return x===id;})){_this.stickerSet=Object.assign({},_this.stickerSet,{is_installed:!is_installed});}}_this.emit('updateInstalledStickerSets',update);break;}default:break;}};_this.onClientUpdate=function(update){switch(update['@type']){case'clientUpdateStickerSend':{_this.emit('clientUpdateStickerSend',update);break;}case'clientUpdateLocalStickersHint':{var hint=update.hint;_this.hint=hint;_this.emit('clientUpdateLocalStickersHint',update);break;}case'clientUpdateRemoteStickersHint':{var _hint=update.hint;if(_this.hint&&_this.hint.timestamp===_hint.timestamp){_this.hint=Object.assign({},_this.hint,{foundStickers:_hint.stickers});}_this.emit('clientUpdateRemoteStickersHint',update);break;}case'clientUpdateStickerSet':{var stickerSet=update.stickerSet;_this.stickerSet=stickerSet;_this.emit('clientUpdateStickerSet',update);break;}case'clientUpdateStickerSetPosition':{_this.emit('clientUpdateStickerSetPosition',update);break;}case'clientUpdateStickerPreview':{_this.emit('clientUpdateStickerPreview',update);break;}default:break;}};_this.addTdLibListener=function(){TdLibController.addListener('update',_this.onUpdate);TdLibController.addListener('clientUpdate',_this.onClientUpdate);};_this.removeTdLibListener=function(){TdLibController.removeListener('update',_this.onUpdate);TdLibController.removeListener('clientUpdate',_this.onClientUpdate);};_this.reset();_this.addTdLibListener();_this.setMaxListeners(Infinity);return _this;}_createClass(StickerStore,[{key:\"getAnimationData\",value:function getAnimationData(key){return this.animationData.get(key);}},{key:\"setAnimationData\",value:function setAnimationData(key,data){this.animationData.set(key,data);}}]);return StickerStore;}(EventEmitter);var store=new StickerStore();window.sticker=store;export default store;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Stores/StickerStore.js"],"names":["EventEmitter","TdLibController","StickerStore","reset","stickerSet","hint","animationData","WeakMap","onUpdate","update","authorization_state","sticker_set_ids","id","is_installed","some","x","Object","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","key","get","data","set","store","window","sticker"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}