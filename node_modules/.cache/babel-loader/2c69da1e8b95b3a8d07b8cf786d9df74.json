{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/Message/Media/Contact.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nconst styles = theme => ({\n  contactPhone: {\n    color: theme.palette.text.secondary\n  }\n});\n\nclass Contact extends React.Component {\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          contact = _this$props.contact,\n          openMedia = _this$props.openMedia;\n    if (!contact) return null;\n    const user_id = contact.user_id,\n          first_name = contact.first_name,\n          last_name = contact.last_name,\n          phone_number = contact.phone_number;\n    const user = UserStore.get(user_id) || {\n      '@type': 'user',\n      type: {\n        '@type': 'userTypeRegular'\n      },\n      id: user_id,\n      first_name,\n      last_name\n    };\n    const fullName = getUserFullName(user);\n    const number = formatPhoneNumber(phone_number);\n    return React.createElement(\"div\", {\n      className: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contact-tile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(UserTile, {\n      userId: user_id,\n      firstName: first_name,\n      lastName: last_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"contact-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contact-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, user_id > 0 ? React.createElement(\"a\", {\n      onClick: openMedia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, fullName) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, fullName)), React.createElement(\"div\", {\n      className: classNames('contact-phone', classes.contactPhone),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, number)));\n  }\n\n}\n\nContact.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  contact: PropTypes.object.isRequired,\n  openMedia: PropTypes.func\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(Contact);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/Message/Media/Contact.js"],"names":["React","classNames","PropTypes","withStyles","UserTile","formatPhoneNumber","getUserFullName","UserStore","styles","theme","contactPhone","color","palette","text","secondary","Contact","Component","render","props","classes","contact","openMedia","user_id","first_name","last_name","phone_number","user","get","type","id","fullName","number","propTypes","chatId","isRequired","messageId","object","func","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nconst styles = theme => ({\n    contactPhone: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass Contact extends React.Component {\n    render() {\n        const { classes, contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTile userId={user_id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className={classNames('contact-phone', classes.contactPhone)}>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(Contact);\n"]},"metadata":{},"sourceType":"module"}