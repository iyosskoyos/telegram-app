{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnMiddle/Placeholder.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../Assets/Bubbles.svg\";\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateChatId = update => {\n      const chatId = update.nextChatId;\n      this.setState({\n        chatId\n      });\n    };\n\n    this.onClientUpdateDialogsReady = update => {\n      const dialogsReady = ApplicationStore.dialogsReady;\n      this.setState({\n        dialogsReady\n      });\n    };\n\n    const _chatId = ApplicationStore.chatId,\n          _dialogsReady = ApplicationStore.dialogsReady;\n    this.state = {\n      chatId: _chatId,\n      dialogsReady: _dialogsReady\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    if (nextState.chatId !== this.state.chatId) {\n      return true;\n    }\n\n    if (nextState.dialogsReady !== this.state.dialogsReady) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n  }\n\n  componentWillUnmount() {\n    ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n  }\n\n  render() {\n    const t = this.props.t;\n    const _this$state = this.state,\n          chatId = _this$state.chatId,\n          dialogsReady = _this$state.dialogsReady;\n    if (chatId) return null;\n    if (!dialogsReady) return null;\n    return React.createElement(\"div\", {\n      className: \"placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"placeholder-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(BubblesLogo, {\n      className: \"placeholder-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), t('SelectChatToStartMessaging')));\n  }\n\n}\n\nPlaceholder.propTypes = {};\nexport default withTranslation()(Placeholder);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnMiddle/Placeholder.js"],"names":["React","withTranslation","ApplicationStore","Placeholder","Component","constructor","props","onClientUpdateChatId","update","chatId","nextChatId","setState","onClientUpdateDialogsReady","dialogsReady","state","shouldComponentUpdate","nextProps","nextState","nextContext","componentDidMount","on","componentWillUnmount","removeListener","render","t","propTypes"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAEA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgCnBC,oBAhCmB,GAgCIC,MAAM,IAAI;AAAA,YACTC,MADS,GACED,MADF,CACrBE,UADqB;AAG7B,WAAKC,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACH,KApCkB;;AAAA,SAsCnBG,0BAtCmB,GAsCUJ,MAAM,IAAI;AAAA,YAC3BK,YAD2B,GACVX,gBADU,CAC3BW,YAD2B;AAGnC,WAAKF,QAAL,CAAc;AAAEE,QAAAA;AAAF,OAAd;AACH,KA1CkB;;AAAA,UAGPJ,OAHO,GAGkBP,gBAHlB,CAGPO,MAHO;AAAA,UAGCI,aAHD,GAGkBX,gBAHlB,CAGCW,YAHD;AAIf,SAAKC,KAAL,GAAa;AACTL,MAAAA,MAAM,EAANA,OADS;AAETI,MAAAA,YAAY,EAAZA;AAFS,KAAb;AAIH;;AAEDE,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,WAAvB,EAAoC;AACrD,QAAID,SAAS,CAACR,MAAV,KAAqB,KAAKK,KAAL,CAAWL,MAApC,EAA4C;AACxC,aAAO,IAAP;AACH;;AAED,QAAIQ,SAAS,CAACJ,YAAV,KAA2B,KAAKC,KAAL,CAAWD,YAA1C,EAAwD;AACpD,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChBjB,IAAAA,gBAAgB,CAACkB,EAAjB,CAAoB,oBAApB,EAA0C,KAAKb,oBAA/C;AACAL,IAAAA,gBAAgB,CAACkB,EAAjB,CAAoB,0BAApB,EAAgD,KAAKR,0BAArD;AACH;;AAEDS,EAAAA,oBAAoB,GAAG;AACnBnB,IAAAA,gBAAgB,CAACoB,cAAjB,CAAgC,oBAAhC,EAAsD,KAAKf,oBAA3D;AACAL,IAAAA,gBAAgB,CAACoB,cAAjB,CAAgC,0BAAhC,EAA4D,KAAKV,0BAAjE;AACH;;AAcDW,EAAAA,MAAM,GAAG;AAAA,UACGC,CADH,GACS,KAAKlB,KADd,CACGkB,CADH;AAAA,wBAE4B,KAAKV,KAFjC;AAAA,UAEGL,MAFH,eAEGA,MAFH;AAAA,UAEWI,YAFX,eAEWA,YAFX;AAGL,QAAIJ,MAAJ,EAAY,OAAO,IAAP;AACZ,QAAI,CAACI,YAAL,EAAmB,OAAO,IAAP;AAEnB,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKW,CAAC,CAAC,4BAAD,CAFN,CADJ,CADJ;AAQH;;AA3DqC;;AA8D1CrB,WAAW,CAACsB,SAAZ,GAAwB,EAAxB;AAEA,eAAexB,eAAe,GAAGE,WAAH,CAA9B","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n"]},"metadata":{},"sourceType":"module"}