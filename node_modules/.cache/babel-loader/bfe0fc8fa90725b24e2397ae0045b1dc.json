{"ast":null,"code":"/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable */\nimport pako from 'pako';\nself.addEventListener('message', ({\n  data: {\n    key,\n    blob\n  }\n}) => {\n  const reader = new FileReader();\n\n  reader.onload = async e => {\n    try {\n      const result = pako.inflate(e.target.result, {\n        to: 'string'\n      });\n      postMessage({\n        key,\n        result: result\n      });\n    } catch (err) {\n      postMessage({\n        key,\n        error: true,\n        msg: err.toString()\n      });\n    }\n  };\n\n  reader.readAsArrayBuffer(blob);\n});\n\nfunction PakoWorker(props) {\n  this.onmessage = ({\n    data: {\n      key,\n      blob\n    }\n  }) => {\n    const reader = new FileReader();\n\n    reader.onload = async e => {\n      try {\n        const result = pako.inflate(e.target.result, {\n          to: 'string'\n        });\n        postMessage({\n          key,\n          result: result\n        });\n      } catch (err) {\n        postMessage({\n          key,\n          error: true,\n          msg: err.toString()\n        });\n      }\n    };\n\n    reader.readAsArrayBuffer(blob);\n  };\n}\n\nexport default PakoWorker;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Workers/PakoWorker.js"],"names":["pako","self","addEventListener","data","key","blob","reader","FileReader","onload","e","result","inflate","target","to","postMessage","err","error","msg","toString","readAsArrayBuffer","PakoWorker","props","onmessage"],"mappings":"AAAA;;;;;;;AAOA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP;AAAR,CAAD,KAA6B;AAC1D,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,MAAMC,CAAN,IAAW;AACvB,QAAI;AACA,YAAMC,MAAM,GAAGV,IAAI,CAACW,OAAL,CAAaF,CAAC,CAACG,MAAF,CAASF,MAAtB,EAA8B;AAAEG,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAf;AACAC,MAAAA,WAAW,CAAC;AAAEV,QAAAA,GAAF;AAAOM,QAAAA,MAAM,EAAEA;AAAf,OAAD,CAAX;AACH,KAHD,CAGE,OAAOK,GAAP,EAAY;AACVD,MAAAA,WAAW,CAAC;AAAEV,QAAAA,GAAF;AAAOY,QAAAA,KAAK,EAAE,IAAd;AAAoBC,QAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ;AAAzB,OAAD,CAAX;AACH;AACJ,GAPD;;AAQAZ,EAAAA,MAAM,CAACa,iBAAP,CAAyBd,IAAzB;AACH,CAXD;;AAaA,SAASe,UAAT,CAAoBC,KAApB,EAA2B;AAC1B,OAAKC,SAAL,GAAe,CAAC;AAAEnB,IAAAA,IAAI,EAAE;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP;AAAR,GAAD,KAA6B;AACxC,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAMC,CAAN,IAAW;AAC9B,UAAI;AACA,cAAMC,MAAM,GAAGV,IAAI,CAACW,OAAL,CAAaF,CAAC,CAACG,MAAF,CAASF,MAAtB,EAA8B;AAAEG,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAf;AACAC,QAAAA,WAAW,CAAC;AAAEV,UAAAA,GAAF;AAAOM,UAAAA,MAAM,EAAEA;AAAf,SAAD,CAAX;AACH,OAHD,CAGE,OAAOK,GAAP,EAAY;AACVD,QAAAA,WAAW,CAAC;AAAEV,UAAAA,GAAF;AAAOY,UAAAA,KAAK,EAAE,IAAd;AAAoBC,UAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ;AAAzB,SAAD,CAAX;AACH;AACG,KAPD;;AAQAZ,IAAAA,MAAM,CAACa,iBAAP,CAAyBd,IAAzB;AACH,GAXD;AAYA;;AAED,eAAee,UAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable */\nimport pako from 'pako';\n\nself.addEventListener('message', ({ data: { key, blob } }) => {\n    const reader = new FileReader();\n    reader.onload = async e => {\n        try {\n            const result = pako.inflate(e.target.result, { to: 'string' });\n            postMessage({ key, result: result });\n        } catch (err) {\n            postMessage({ key, error: true, msg: err.toString() });\n        }\n    };\n    reader.readAsArrayBuffer(blob);\n});\n\nfunction PakoWorker(props) {\n\tthis.onmessage=({ data: { key, blob } }) => {\n\t    const reader = new FileReader();\n\t    reader.onload = async e => {\n\t\ttry {\n\t\t    const result = pako.inflate(e.target.result, { to: 'string' });\n\t\t    postMessage({ key, result: result });\n\t\t} catch (err) {\n\t\t    postMessage({ key, error: true, msg: err.toString() });\n\t\t}\n\t    };\n\t    reader.readAsArrayBuffer(blob);\n\t}\n}\n\nexport default PakoWorker;\n"]},"metadata":{},"sourceType":"module"}