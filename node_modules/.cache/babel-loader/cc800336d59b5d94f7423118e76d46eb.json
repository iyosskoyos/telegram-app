{"ast":null,"code":"import _slicedToArray from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import FileProgress from'./FileProgress';import MediaCaption from'./MediaCaption';import{getAnimationData,getMediaFile,getMediaPreviewFile}from'../../Utils/File';import{getText,isAnimationMessage,isLottieMessage,isVideoMessage}from'../../Utils/Message';import{isBlurredThumbnail}from'../../Utils/Media';import FileStore from'../../Stores/FileStore';import MessageStore from'../../Stores/MessageStore';import PlayerStore from'../../Stores/PlayerStore';import TdLibController from'../../Controllers/TdLibController';import'./MediaViewerContent.css';var Lottie=React.lazy(function(){return import('./Lottie');});var MediaViewerContent=/*#__PURE__*/function(_React$Component){_inherits(MediaViewerContent,_React$Component);function MediaViewerContent(props){var _this;_classCallCheck(this,MediaViewerContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MediaViewerContent).call(this,props));_this.onClientUpdateDocumentBlob=function(update){var _this$props=_this.props,chatId=_this$props.chatId,messageId=_this$props.messageId;if(chatId===update.chatId&&messageId===update.messageId){_this.updateAnimationData();}};_this.updateAnimationData=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this$props2,chatId,messageId,file,animationData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props2=_this.props,chatId=_this$props2.chatId,messageId=_this$props2.messageId;if(isLottieMessage(chatId,messageId)){_context.next=3;break;}return _context.abrupt(\"return\");case 3:file=_this.state.file;_context.next=6;return getAnimationData(file);case 6:animationData=_context.sent;_this.setState({animationData:animationData});case 8:case\"end\":return _context.stop();}}},_callee);}));_this.onClientUpdateMediaBlob=function(update){var _this$props3=_this.props,chatId=_this$props3.chatId,messageId=_this$props3.messageId,size=_this$props3.size;if(chatId===update.chatId&&messageId===update.messageId){var _getMediaFile=getMediaFile(chatId,messageId,size),_getMediaFile2=_slicedToArray(_getMediaFile,3),width=_getMediaFile2[0],height=_getMediaFile2[1],file=_getMediaFile2[2];_this.setState({width:width,height:height,file:file});}};_this.onClientUpdateMediaThumbnailBlob=function(update){var _this$props4=_this.props,chatId=_this$props4.chatId,messageId=_this$props4.messageId;if(chatId===update.chatId&&messageId===update.messageId){var _getMediaPreviewFile=getMediaPreviewFile(chatId,messageId),_getMediaPreviewFile2=_slicedToArray(_getMediaPreviewFile,3),width=_getMediaPreviewFile2[0],height=_getMediaPreviewFile2[1],file=_getMediaPreviewFile2[2];_this.setState({thumbnailWidth:width,thumbnailHeight:height,thumbnail:file});}};_this.onUpdateMessageContent=function(update){var _this$props5=_this.props,chatId=_this$props5.chatId,messageId=_this$props5.messageId,size=_this$props5.size;var chat_id=update.chat_id,message_id=update.message_id;if(chatId===chat_id&&messageId===message_id){var _getMediaFile3=getMediaFile(chatId,messageId,size),_getMediaFile4=_slicedToArray(_getMediaFile3,3),width=_getMediaFile4[0],height=_getMediaFile4[1],file=_getMediaFile4[2];var message=MessageStore.get(chatId,messageId);var text=getText(message);_this.setState({width:width,height:height,file:file,text:text});}};_this.handleContentClick=function(event){if(event)event.stopPropagation();};_this.changeSpeed=function(speed){_this.setState({speed:speed});};_this.state={};_this.videoRef=React.createRef();_this.lottieRef=React.createRef();_this.updateAnimationData();return _this;}_createClass(MediaViewerContent,[{key:\"componentDidMount\",value:function componentDidMount(){FileStore.on('clientUpdateDocumentBlob',this.onClientUpdateDocumentBlob);FileStore.on('clientUpdatePhotoBlob',this.onClientUpdateMediaBlob);FileStore.on('clientUpdateVideoBlob',this.onClientUpdateMediaBlob);FileStore.on('clientUpdateAnimationBlob',this.onClientUpdateMediaBlob);FileStore.on('clientUpdateVideoThumbnailBlob',this.onClientUpdateMediaThumbnailBlob);FileStore.on('clientUpdateAnimationThumbnailBlob',this.onClientUpdateMediaThumbnailBlob);MessageStore.on('updateMessageContent',this.onUpdateMessageContent);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){FileStore.removeListener('clientUpdateDocumentBlob',this.onClientUpdateDocumentBlob);FileStore.removeListener('clientUpdatePhotoBlob',this.onClientUpdateMediaBlob);FileStore.removeListener('clientUpdateVideoBlob',this.onClientUpdateMediaBlob);FileStore.removeListener('clientUpdateAnimationBlob',this.onClientUpdateMediaBlob);FileStore.removeListener('clientUpdateVideoThumbnailBlob',this.onClientUpdateMediaThumbnailBlob);FileStore.removeListener('clientUpdateAnimationThumbnailBlob',this.onClientUpdateMediaThumbnailBlob);MessageStore.removeListener('updateMessageContent',this.onUpdateMessageContent);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){var _this$props6=this.props,chatId=_this$props6.chatId,messageId=_this$props6.messageId;if(prevProps.chatId!==chatId||prevProps.messageId!==messageId){this.updateAnimationData();}}},{key:\"render\",value:function render(){var _this2=this;var _this$props7=this.props,chatId=_this$props7.chatId,messageId=_this$props7.messageId;var _this$state=this.state,animationData=_this$state.animationData,width=_this$state.width,height=_this$state.height,file=_this$state.file,text=_this$state.text,thumbnailWidth=_this$state.thumbnailWidth,thumbnailHeight=_this$state.thumbnailHeight,thumbnail=_this$state.thumbnail,isPlaying=_this$state.isPlaying;if(!file)return null;var blob=FileStore.getBlob(file.id)||file.blob;var src=FileStore.getBlobUrl(blob)||'';var thumbnailBlob=thumbnail?FileStore.getBlob(thumbnail.id)||thumbnail.blob:null;var thumbnailSrc=FileStore.getBlobUrl(thumbnailBlob);var isBlurred=isBlurredThumbnail({width:thumbnailWidth,height:thumbnailHeight});var isVideo=isVideoMessage(chatId,messageId);var isAnimation=isAnimationMessage(chatId,messageId);var isLottie=isLottieMessage(chatId,messageId);var videoWidth=width;var videoHeight=height;if(Math.max(videoWidth,videoHeight)>640){var scale=640/Math.max(videoWidth,videoHeight);videoWidth=videoWidth>videoHeight?640:Math.floor(videoWidth*scale);videoHeight=videoHeight>videoWidth?640:Math.floor(videoHeight*scale);}var content=null;if(isVideo){content=React.createElement(\"div\",{className:\"media-viewer-content-wrapper\"},React.createElement(\"video\",{ref:this.videoRef,className:\"media-viewer-content-video-player\",src:src,onClick:this.handleContentClick,controls:true,autoPlay:true,width:videoWidth,height:videoHeight,onPlay:function onPlay(){_this2.setState({isPlaying:true});TdLibController.clientUpdate({'@type':'clientUpdateMediaViewerPlay'});},onCanPlay:function onCanPlay(){var player=_this2.videoRef.current;if(player){player.volume=PlayerStore.volume;}},onPause:function onPause(){TdLibController.clientUpdate({'@type':'clientUpdateMediaViewerPause'});},onEnded:function onEnded(){TdLibController.clientUpdate({'@type':'clientUpdateMediaViewerEnded'});},onVolumeChange:function onVolumeChange(){var player=_this2.videoRef.current;if(player){TdLibController.clientUpdate({'@type':'clientUpdateMediaVolume',volume:player.volume});}}}),!isPlaying&&(!src&&thumbnailSrc?React.createElement(\"img\",{className:classNames('media-viewer-content-video-thumbnail',{'media-blurred':isBlurred}),src:thumbnailSrc,alt:\"\",width:videoWidth,height:videoHeight}):React.createElement(\"div\",{className:\"media-viewer-content-video-thumbnail\",style:{width:videoWidth,height:videoHeight}})));}else if(isAnimation){content=React.createElement(\"div\",{className:\"media-viewer-content-wrapper\"},React.createElement(\"video\",{className:\"media-viewer-content-video-player\",src:src,onClick:this.handleContentClick,loop:true,autoPlay:true,width:videoWidth,height:videoHeight,onPlay:function onPlay(){_this2.setState({isPlaying:true});}}),!isPlaying&&(!src&&thumbnailSrc?React.createElement(\"img\",{className:classNames('media-viewer-content-video-thumbnail',{'media-blurred':isBlurred}),src:thumbnailSrc,alt:\"\",width:videoWidth,height:videoHeight}):React.createElement(\"div\",{className:\"media-viewer-content-video-thumbnail\",style:{width:videoWidth,height:videoHeight}})));}else if(isLottie){var defaultOptions={loop:true,autoplay:true,//path: src,\nanimationData:animationData,rendererSettings:{preserveAspectRatio:'xMidYMid slice'}};var speed=this.state.speed;content=React.createElement(Lottie,{ref:this.lottieRef,speed:speed,options:defaultOptions,height:\"auto\",width:400,isStopped:false,isPaused:false});}else{content=React.createElement(\"img\",{className:\"media-viewer-content-image\",src:src,alt:\"\",onClick:this.handleContentClick});}return React.createElement(\"div\",{className:\"media-viewer-content\"},React.createElement(React.Suspense,{fallback:\"\"},content),React.createElement(FileProgress,{file:file,zIndex:2}),text&&text.length>0&&React.createElement(MediaCaption,{text:text}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){var chatId=props.chatId,messageId=props.messageId,size=props.size;if(chatId!==state.prevChatId||messageId!==state.prevMessageId){var _getMediaFile5=getMediaFile(chatId,messageId,size),_getMediaFile6=_slicedToArray(_getMediaFile5,3),width=_getMediaFile6[0],height=_getMediaFile6[1],file=_getMediaFile6[2];file=FileStore.get(file.id)||file;var _getMediaPreviewFile3=getMediaPreviewFile(chatId,messageId),_getMediaPreviewFile4=_slicedToArray(_getMediaPreviewFile3,3),thumbnailWidth=_getMediaPreviewFile4[0],thumbnailHeight=_getMediaPreviewFile4[1],thumbnail=_getMediaPreviewFile4[2];thumbnail=FileStore.get(thumbnail.id)||thumbnail;var message=MessageStore.get(chatId,messageId);var text=getText(message);return{prevChatId:chatId,prevMessageId:messageId,speed:1,isPlaying:false,width:width,height:height,file:file,text:text,thumbnailWidth:thumbnailWidth,thumbnailHeight:thumbnailHeight,thumbnail:thumbnail};}return null;}}]);return MediaViewerContent;}(React.Component);export default MediaViewerContent;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Viewer/MediaViewerContent.js"],"names":["React","classNames","FileProgress","MediaCaption","getAnimationData","getMediaFile","getMediaPreviewFile","getText","isAnimationMessage","isLottieMessage","isVideoMessage","isBlurredThumbnail","FileStore","MessageStore","PlayerStore","TdLibController","Lottie","lazy","MediaViewerContent","props","onClientUpdateDocumentBlob","update","chatId","messageId","updateAnimationData","file","state","animationData","setState","onClientUpdateMediaBlob","size","width","height","onClientUpdateMediaThumbnailBlob","thumbnailWidth","thumbnailHeight","thumbnail","onUpdateMessageContent","chat_id","message_id","message","get","text","handleContentClick","event","stopPropagation","changeSpeed","speed","videoRef","createRef","lottieRef","on","removeListener","prevProps","prevState","snapshot","isPlaying","blob","getBlob","id","src","getBlobUrl","thumbnailBlob","thumbnailSrc","isBlurred","isVideo","isAnimation","isLottie","videoWidth","videoHeight","Math","max","scale","floor","content","clientUpdate","player","current","volume","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","length","prevChatId","prevMessageId","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n"]},"metadata":{},"sourceType":"module"}