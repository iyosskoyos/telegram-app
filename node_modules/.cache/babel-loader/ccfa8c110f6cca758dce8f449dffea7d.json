{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import blue from'@material-ui/core/colors/blue';import createMuiTheme from'@material-ui/core/styles/createMuiTheme';import MuiThemeProvider from'@material-ui/core/styles/MuiThemeProvider';import StylesProvider from'@material-ui/styles/StylesProvider';import{getDisplayName}from'./Utils/HOC';import Cookies from'universal-cookie';import ApplicationStore from'./Stores/ApplicationStore';function withTheme(WrappedComponent){var ThemeWrapper=/*#__PURE__*/function(_React$Component){_inherits(ThemeWrapper,_React$Component);function ThemeWrapper(props){var _this;_classCallCheck(this,ThemeWrapper);_this=_possibleConstructorReturn(this,_getPrototypeOf(ThemeWrapper).call(this,props));_this.onClientUpdateThemeChanging=function(update){var type=update.type,primary=update.primary;var theme=createMuiTheme({palette:{type:type,primary:primary,secondary:{main:'#FF5555'},typography:{useNextVariants:true}}});var cookies=new Cookies();cookies.set('themeOptions',{type:type,primary:primary});_this.setState({theme:theme},function(){return ApplicationStore.emit('clientUpdateThemeChange');});};var _cookies=new Cookies();var _ref=_cookies.get('themeOptions')||{type:'light',primary:blue},_type=_ref.type,_primary=_ref.primary;var _theme=createMuiTheme({palette:{type:_type,primary:_primary,secondary:{main:'#FF5555'}},typography:{useNextVariants:true}});_this.state={theme:_theme};return _this;}_createClass(ThemeWrapper,[{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('clientUpdateThemeChanging',this.onClientUpdateThemeChanging);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('clientUpdateThemeChanging',this.onClientUpdateThemeChanging);}},{key:\"render\",value:function render(){var theme=this.state.theme;return React.createElement(StylesProvider,{injectFirst:true},React.createElement(MuiThemeProvider,{theme:theme},React.createElement(WrappedComponent,this.props)));}}]);return ThemeWrapper;}(React.Component);ThemeWrapper.displayName=\"WithTheme(\".concat(getDisplayName(WrappedComponent),\")\");return ThemeWrapper;}export default withTheme;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Theme.js"],"names":["React","blue","createMuiTheme","MuiThemeProvider","StylesProvider","getDisplayName","Cookies","ApplicationStore","withTheme","WrappedComponent","ThemeWrapper","props","onClientUpdateThemeChanging","update","type","primary","theme","palette","secondary","main","typography","useNextVariants","cookies","set","setState","emit","get","state","on","removeListener","Component","displayName"],"mappings":"kqBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,+BAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,yCAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2CAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CAEA,QAASC,CAAAA,SAAT,CAAmBC,gBAAnB,CAAqC,IAC3BC,CAAAA,YAD2B,kFAE7B,sBAAYC,KAAZ,CAAmB,8CACf,8EAAMA,KAAN,GADe,MA8BnBC,2BA9BmB,CA8BW,SAAAC,MAAM,CAAI,IAC5BC,CAAAA,IAD4B,CACVD,MADU,CAC5BC,IAD4B,CACtBC,OADsB,CACVF,MADU,CACtBE,OADsB,CAGpC,GAAMC,CAAAA,KAAK,CAAGd,cAAc,CAAC,CACzBe,OAAO,CAAE,CACLH,IAAI,CAAEA,IADD,CAELC,OAAO,CAAEA,OAFJ,CAGLG,SAAS,CAAE,CAAEC,IAAI,CAAE,SAAR,CAHN,CAILC,UAAU,CAAE,CACRC,eAAe,CAAE,IADT,CAJP,CADgB,CAAD,CAA5B,CAWA,GAAMC,CAAAA,OAAO,CAAG,GAAIhB,CAAAA,OAAJ,EAAhB,CACAgB,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4B,CAAET,IAAI,CAAEA,IAAR,CAAcC,OAAO,CAAEA,OAAvB,CAA5B,EAEA,MAAKS,QAAL,CAAc,CAAER,KAAK,CAAEA,KAAT,CAAd,CAAgC,iBAAMT,CAAAA,gBAAgB,CAACkB,IAAjB,CAAsB,yBAAtB,CAAN,EAAhC,EACH,CAhDkB,CAGf,GAAMH,CAAAA,QAAO,CAAG,GAAIhB,CAAAA,OAAJ,EAAhB,CAHe,SAIWgB,QAAO,CAACI,GAAR,CAAY,cAAZ,GAA+B,CAAEZ,IAAI,CAAE,OAAR,CAAiBC,OAAO,CAAEd,IAA1B,CAJ1C,CAIPa,KAJO,MAIPA,IAJO,CAIDC,QAJC,MAIDA,OAJC,CAMf,GAAIC,CAAAA,MAAK,CAAGd,cAAc,CAAC,CACvBe,OAAO,CAAE,CACLH,IAAI,CAAEA,KADD,CAELC,OAAO,CAAEA,QAFJ,CAGLG,SAAS,CAAE,CAAEC,IAAI,CAAE,SAAR,CAHN,CADc,CAMvBC,UAAU,CAAE,CACRC,eAAe,CAAE,IADT,CANW,CAAD,CAA1B,CAWA,MAAKM,KAAL,CAAa,CACTX,KAAK,CAAEA,MADE,CAAb,CAjBe,aAoBlB,CAtB4B,sFAwBT,CAChBT,gBAAgB,CAACqB,EAAjB,CAAoB,2BAApB,CAAiD,KAAKhB,2BAAtD,EACH,CA1B4B,mEA4BN,CACnBL,gBAAgB,CAACsB,cAAjB,CAAgC,2BAAhC,CAA6D,KAAKjB,2BAAlE,EACH,CA9B4B,uCAoDpB,IACGI,CAAAA,KADH,CACa,KAAKW,KADlB,CACGX,KADH,CAGL,MACI,qBAAC,cAAD,EAAgB,WAAW,KAA3B,EACI,oBAAC,gBAAD,EAAkB,KAAK,CAAEA,KAAzB,EACI,oBAAC,gBAAD,CAAsB,KAAKL,KAA3B,CADJ,CADJ,CADJ,CAOH,CA9D4B,0BACNX,KAAK,CAAC8B,SADA,EAgEjCpB,YAAY,CAACqB,WAAb,qBAAwC1B,cAAc,CAACI,gBAAD,CAAtD,MAEA,MAAOC,CAAAA,YAAP,CACH,CAED,cAAeF,CAAAA,SAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport blue from '@material-ui/core/colors/blue';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport StylesProvider from '@material-ui/styles/StylesProvider';\nimport { getDisplayName } from './Utils/HOC';\nimport Cookies from 'universal-cookie';\nimport ApplicationStore from './Stores/ApplicationStore';\n\nfunction withTheme(WrappedComponent) {\n    class ThemeWrapper extends React.Component {\n        constructor(props) {\n            super(props);\n\n            const cookies = new Cookies();\n            const { type, primary } = cookies.get('themeOptions') || { type: 'light', primary: blue };\n\n            let theme = createMuiTheme({\n                palette: {\n                    type: type,\n                    primary: primary,\n                    secondary: { main: '#FF5555' }\n                },\n                typography: {\n                    useNextVariants: true\n                }\n            });\n\n            this.state = {\n                theme: theme\n            };\n        }\n\n        componentDidMount() {\n            ApplicationStore.on('clientUpdateThemeChanging', this.onClientUpdateThemeChanging);\n        }\n\n        componentWillUnmount() {\n            ApplicationStore.removeListener('clientUpdateThemeChanging', this.onClientUpdateThemeChanging);\n        }\n\n        onClientUpdateThemeChanging = update => {\n            const { type, primary } = update;\n\n            const theme = createMuiTheme({\n                palette: {\n                    type: type,\n                    primary: primary,\n                    secondary: { main: '#FF5555' },\n                    typography: {\n                        useNextVariants: true\n                    }\n                }\n            });\n\n            const cookies = new Cookies();\n            cookies.set('themeOptions', { type: type, primary: primary });\n\n            this.setState({ theme: theme }, () => ApplicationStore.emit('clientUpdateThemeChange'));\n        };\n\n        render() {\n            const { theme } = this.state;\n\n            return (\n                <StylesProvider injectFirst>\n                    <MuiThemeProvider theme={theme}>\n                        <WrappedComponent {...this.props} />\n                    </MuiThemeProvider>\n                </StylesProvider>\n            );\n        }\n    }\n    ThemeWrapper.displayName = `WithTheme(${getDisplayName(WrappedComponent)})`;\n\n    return ThemeWrapper;\n}\n\nexport default withTheme;\n"]},"metadata":{},"sourceType":"module"}