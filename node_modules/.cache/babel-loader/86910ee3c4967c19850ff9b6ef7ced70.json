{"ast":null,"code":"import _defineProperty from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import{withTranslation}from'react-i18next';import FileProgress from'../../Viewer/FileProgress';import{getFitSize}from'../../../Utils/Common';import{isBlurredThumbnail}from'../../../Utils/Media';import{getFileSize,getSrc,isGifMimeType}from'../../../Utils/File';import{PHOTO_DISPLAY_SIZE,PHOTO_SIZE}from'../../../Constants';import AppStore from'../../../Stores/ApplicationStore';import FileStore from'../../../Stores/FileStore';import InstantViewStore from'../../../Stores/InstantViewStore';import MessageStore from'../../../Stores/MessageStore';import'./Animation.css';var Animation=/*#__PURE__*/function(_React$Component){_inherits(Animation,_React$Component);function Animation(props){var _this;_classCallCheck(this,Animation);_this=_possibleConstructorReturn(this,_getPrototypeOf(Animation).call(this,props));_this.startStopPlayer=function(){var player=_this.videoRef.current;if(player){if(_this.windowFocused&&(_this.inView&&!_this.openMediaViewer&&!_this.openProfileMediaViewer&&!_this.openIV||_this.ivInView&&!_this.openIVMedia)){player.play();}else{player.pause();}}};_this.onClientUpdateInstantViewContent=function(update){_this.openIV=Boolean(InstantViewStore.getCurrent());_this.startStopPlayer();};_this.onClientUpdateProfileMediaViewerContent=function(update){_this.openProfileMediaViewer=Boolean(AppStore.profileMediaViewerContent);_this.startStopPlayer();};_this.onClientUpdateMediaViewerContent=function(update){_this.openMediaViewer=Boolean(AppStore.mediaViewerContent);_this.startStopPlayer();};_this.onClientUpdateInstantViewViewerContent=function(update){_this.openIVMedia=Boolean(InstantViewStore.viewerContent);_this.startStopPlayer();};_this.onClientUpdateFocusWindow=function(update){_this.windowFocused=update.focused;_this.startStopPlayer();};_this.onClientUpdateMessagesInView=function(update){var _this$props=_this.props,chatId=_this$props.chatId,messageId=_this$props.messageId;var key=\"\".concat(chatId,\"_\").concat(messageId);_this.inView=update.messages.has(key);_this.startStopPlayer();};_this.onClientUpdateBlocksInView=function(update){var pageBlock=_this.props.pageBlock;if(!pageBlock)return;_this.ivInView=update.blocks.has(pageBlock);_this.startStopPlayer();};_this.onClientUpdateAnimationBlob=function(update){var animation=_this.props.animation.animation;var fileId=update.fileId;if(!animation)return;if(animation.id===fileId){_this.forceUpdate();}};_this.onClientUpdateAnimationThumbnailBlob=function(update){var thumbnail=_this.props.animation.thumbnail;if(!thumbnail)return;var fileId=update.fileId;if(thumbnail.photo&&thumbnail.photo.id===fileId){_this.forceUpdate();}};_this.videoRef=React.createRef();_this.setPlayerParams();return _this;}_createClass(Animation,[{key:\"setPlayerParams\",value:function setPlayerParams(){this.windowFocused=window.hasFocus;this.inView=false;this.openMediaViewer=Boolean(AppStore.mediaViewerContent);this.openProfileMediaViewer=Boolean(AppStore.profileMediaViewerContent);this.openIV=Boolean(InstantViewStore.getCurrent());this.ivInView=false;this.openIVMedia=Boolean(InstantViewStore.viewerContent);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){if(prevProps.animation!==this.props.animation){this.setPlayerParams();}}},{key:\"componentDidMount\",value:function componentDidMount(){FileStore.on('clientUpdateAnimationThumbnailBlob',this.onClientUpdateAnimationThumbnailBlob);FileStore.on('clientUpdateAnimationBlob',this.onClientUpdateAnimationBlob);AppStore.on('clientUpdateFocusWindow',this.onClientUpdateFocusWindow);AppStore.on('clientUpdateMediaViewerContent',this.onClientUpdateMediaViewerContent);AppStore.on('clientUpdateProfileMediaViewerContent',this.onClientUpdateProfileMediaViewerContent);MessageStore.on('clientUpdateMessagesInView',this.onClientUpdateMessagesInView);InstantViewStore.on('clientUpdateInstantViewContent',this.onClientUpdateInstantViewContent);InstantViewStore.on('clientUpdateInstantViewViewerContent',this.onClientUpdateInstantViewViewerContent);InstantViewStore.on('clientUpdateBlocksInView',this.onClientUpdateBlocksInView);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){FileStore.removeListener('clientUpdateAnimationThumbnailBlob',this.onClientUpdateAnimationThumbnailBlob);FileStore.removeListener('clientUpdateAnimationBlob',this.onClientUpdateAnimationBlob);AppStore.removeListener('clientUpdateFocusWindow',this.onClientUpdateFocusWindow);AppStore.removeListener('clientUpdateMediaViewerContent',this.onClientUpdateMediaViewerContent);AppStore.removeListener('clientUpdateProfileMediaViewerContent',this.onClientUpdateProfileMediaViewerContent);MessageStore.removeListener('clientUpdateMessagesInView',this.onClientUpdateMessagesInView);InstantViewStore.removeListener('clientUpdateInstantViewContent',this.onClientUpdateInstantViewContent);InstantViewStore.removeListener('clientUpdateInstantViewViewerContent',this.onClientUpdateInstantViewViewerContent);InstantViewStore.removeListener('clientUpdateBlocksInView',this.onClientUpdateBlocksInView);}},{key:\"render\",value:function render(){var _this$props2=this.props,displaySize=_this$props2.displaySize,openMedia=_this$props2.openMedia,t=_this$props2.t,style=_this$props2.style;var _this$props$animation=this.props.animation,thumbnail=_this$props$animation.thumbnail,animation=_this$props$animation.animation,mime_type=_this$props$animation.mime_type,width=_this$props$animation.width,height=_this$props$animation.height;var fitPhotoSize=getFitSize({width:width,height:height}||thumbnail,displaySize,false);if(!fitPhotoSize)return null;var animationStyle=_objectSpread({width:fitPhotoSize.width,height:fitPhotoSize.height},style);var thumbnailSrc=getSrc(thumbnail?thumbnail.photo:null);var src=getSrc(animation);var isBlurred=isBlurredThumbnail(thumbnail);var isGif=isGifMimeType(mime_type);return React.createElement(\"div\",{className:\"animation\",style:animationStyle,onClick:openMedia},src?isGif?React.createElement(\"img\",{className:\"animation-preview\",src:src,alt:\"\"}):React.createElement(\"video\",{ref:this.videoRef,className:\"media-viewer-content-animation\",src:src,poster:thumbnailSrc,muted:true,autoPlay:true,loop:true,playsInline:true,width:animationStyle.width,height:animationStyle.height}):React.createElement(React.Fragment,null,React.createElement(\"img\",{className:classNames('animation-preview',{'media-blurred':isBlurred}),src:thumbnailSrc,alt:\"\"}),React.createElement(\"div\",{className:\"animation-meta\"},getFileSize(animation))),React.createElement(FileProgress,{file:animation,download:true,upload:true,cancelButton:true,icon:React.createElement(\"div\",{className:\"animation-play\"},t('AttachGif'))}));}}]);return Animation;}(React.Component);Animation.defaultProps={size:PHOTO_SIZE,displaySize:PHOTO_DISPLAY_SIZE,iv:false};export default withTranslation()(Animation);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Message/Media/Animation.js"],"names":["React","classNames","withTranslation","FileProgress","getFitSize","isBlurredThumbnail","getFileSize","getSrc","isGifMimeType","PHOTO_DISPLAY_SIZE","PHOTO_SIZE","AppStore","FileStore","InstantViewStore","MessageStore","Animation","props","startStopPlayer","player","videoRef","current","windowFocused","inView","openMediaViewer","openProfileMediaViewer","openIV","ivInView","openIVMedia","play","pause","onClientUpdateInstantViewContent","update","Boolean","getCurrent","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateInstantViewViewerContent","viewerContent","onClientUpdateFocusWindow","focused","onClientUpdateMessagesInView","chatId","messageId","key","messages","has","onClientUpdateBlocksInView","pageBlock","blocks","onClientUpdateAnimationBlob","animation","fileId","id","forceUpdate","onClientUpdateAnimationThumbnailBlob","thumbnail","photo","createRef","setPlayerParams","window","hasFocus","prevProps","prevState","snapshot","on","removeListener","displaySize","openMedia","t","style","mime_type","width","height","fitPhotoSize","animationStyle","thumbnailSrc","src","isBlurred","isGif","Component","defaultProps","size","iv"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.removeListener('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.removeListener('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.removeListener(\n            'clientUpdateInstantViewViewerContent',\n            this.onClientUpdateInstantViewViewerContent\n        );\n        InstantViewStore.removeListener('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.windowFocused &&\n                ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                    (this.ivInView && !this.openIVMedia))\n            ) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, style } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={animationStyle} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n"]},"metadata":{},"sourceType":"module"}