{"ast":null,"code":"var _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Auth/AuthErrorDialog.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass AuthErrorDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      error: null\n    };\n    this.handleAuthError = this.handleAuthError.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    TdLibController.on('tdlib_auth_error', this.handleAuthError);\n  }\n\n  componentWillUnmount() {\n    TdLibController.removeListener('tdlib_auth_error', this.handleAuthError);\n  }\n\n  handleAuthError(error) {\n    this.setState({\n      open: true,\n      error: error\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.handleClose();\n    }\n  }\n\n  render() {\n    let errorString = null;\n\n    if (this.state.error && this.state.error['@type'] === 'error' && this.state.error.message) {\n      errorString = this.state.error.message;\n    } else {\n      errorString = JSON.stringify(this.state.error);\n    }\n\n    return React.createElement(Dialog, {\n      transitionDuration: 0,\n      open: this.state.open,\n      onKeyDown: this.handleKeyDown,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Error\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, errorString)), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Ok\")));\n  }\n\n}\n\nexport default AuthErrorDialog;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Auth/AuthErrorDialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TdLibController","AuthErrorDialog","Component","constructor","props","state","open","error","handleAuthError","bind","handleClose","handleKeyDown","componentDidMount","on","componentWillUnmount","removeListener","setState","e","key","preventDefault","render","errorString","message","JSON","stringify"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass AuthErrorDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            error: null\n        };\n\n        this.handleAuthError = this.handleAuthError.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n\n    componentDidMount() {\n        TdLibController.on('tdlib_auth_error', this.handleAuthError);\n    }\n\n    componentWillUnmount() {\n        TdLibController.removeListener('tdlib_auth_error', this.handleAuthError);\n    }\n\n    handleAuthError(error) {\n        this.setState({\n            open: true,\n            error: error\n        });\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleKeyDown(e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.handleClose();\n        }\n    }\n\n    render() {\n        let errorString = null;\n        if (this.state.error && this.state.error['@type'] === 'error' && this.state.error.message) {\n            errorString = this.state.error.message;\n        } else {\n            errorString = JSON.stringify(this.state.error);\n        }\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onKeyDown={this.handleKeyDown}\n                onClose={this.handleClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>Error</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{errorString}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default AuthErrorDialog;\n"]},"metadata":{},"sourceType":"module"}