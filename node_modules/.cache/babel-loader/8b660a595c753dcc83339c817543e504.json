{"ast":null,"code":"import _slicedToArray from \"/home/me-admin/Downloads/telegram-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { TYPING_INPUT_INTERVAL_S } from '../Constants';\n\nclass InputTypingManager {\n  constructor(chatId, timeoutCallback) {\n    this.actions = new Map();\n    this.timerId = null;\n    this.chatId = chatId;\n    this.timeoutCallback = timeoutCallback;\n    this.handleTimer = this.handleTimer.bind(this);\n    this.addAction = this.addAction.bind(this);\n    this.clearAction = this.clearAction.bind(this);\n    this.setActionsTimeout = this.setActionsTimeout.bind(this);\n  }\n\n  handleTimer() {\n    let now = new Date();\n    let expiredActions = [];\n\n    for (let _ref of this.actions) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      let key = _ref2[0];\n      let value = _ref2[1];\n      let actionTimeout = value.expire - now;\n      if (actionTimeout <= 0) expiredActions.push(key);\n    }\n\n    for (let key of expiredActions) {\n      this.actions.delete(key);\n    }\n\n    let update = {\n      '@type': 'updateUserChatAction',\n      chat_id: this.chatId,\n      action: {\n        '@type': 'chatActionTimerUpdate'\n      }\n    };\n    this.timeoutCallback(update); // ChatStore.emit('updateUserChatAction', update);\n\n    this.setActionsTimeout();\n  }\n\n  addAction(userId, action) {\n    let expire = new Date();\n    expire.setSeconds(expire.getSeconds() + TYPING_INPUT_INTERVAL_S);\n    this.actions.set(userId, {\n      expire: expire,\n      action: action\n    });\n\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n    }\n\n    this.setActionsTimeout();\n  }\n\n  setActionsTimeout() {\n    let now = new Date();\n    let timeout = 1000000;\n\n    for (let _ref3 of this.actions) {\n      var _ref4 = _slicedToArray(_ref3, 2);\n\n      let key = _ref4[0];\n      let value = _ref4[1];\n      let actionTimeout = value.expire - now;\n      if (actionTimeout < timeout) timeout = actionTimeout;\n      if (timeout < 0) timeout = 0;\n    }\n\n    if (timeout < 1000000) {\n      this.timerId = setTimeout(this.handleTimer, timeout);\n    }\n  }\n\n  clearAction(userId) {\n    this.actions.delete(userId);\n\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n    }\n\n    this.setActionsTimeout();\n  }\n\n}\n\nexport default InputTypingManager;","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Utils/InputTypingManager.js"],"names":["TYPING_INPUT_INTERVAL_S","InputTypingManager","constructor","chatId","timeoutCallback","actions","Map","timerId","handleTimer","bind","addAction","clearAction","setActionsTimeout","now","Date","expiredActions","key","value","actionTimeout","expire","push","delete","update","chat_id","action","userId","setSeconds","getSeconds","set","clearTimeout","timeout","setTimeout"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_INPUT_INTERVAL_S } from '../Constants';\n\nclass InputTypingManager {\n    constructor(chatId, timeoutCallback) {\n        this.actions = new Map();\n        this.timerId = null;\n        this.chatId = chatId;\n        this.timeoutCallback = timeoutCallback;\n\n        this.handleTimer = this.handleTimer.bind(this);\n        this.addAction = this.addAction.bind(this);\n        this.clearAction = this.clearAction.bind(this);\n        this.setActionsTimeout = this.setActionsTimeout.bind(this);\n    }\n\n    handleTimer() {\n        let now = new Date();\n        let expiredActions = [];\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout <= 0) expiredActions.push(key);\n        }\n\n        for (let key of expiredActions) {\n            this.actions.delete(key);\n        }\n\n        let update = {\n            '@type': 'updateUserChatAction',\n            chat_id: this.chatId,\n            action: { '@type': 'chatActionTimerUpdate' }\n        };\n\n        this.timeoutCallback(update);\n        // ChatStore.emit('updateUserChatAction', update);\n\n        this.setActionsTimeout();\n    }\n\n    addAction(userId, action) {\n        let expire = new Date();\n        expire.setSeconds(expire.getSeconds() + TYPING_INPUT_INTERVAL_S);\n\n        this.actions.set(userId, { expire: expire, action: action });\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setActionsTimeout();\n    }\n\n    setActionsTimeout() {\n        let now = new Date();\n        let timeout = 1000000;\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout < timeout) timeout = actionTimeout;\n            if (timeout < 0) timeout = 0;\n        }\n\n        if (timeout < 1000000) {\n            this.timerId = setTimeout(this.handleTimer, timeout);\n        }\n    }\n\n    clearAction(userId) {\n        this.actions.delete(userId);\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setActionsTimeout();\n    }\n}\n\nexport default InputTypingManager;\n"]},"metadata":{},"sourceType":"module"}