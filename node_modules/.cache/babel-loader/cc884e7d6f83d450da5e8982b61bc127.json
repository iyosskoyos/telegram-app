{"ast":null,"code":"import _defineProperty from \"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnMiddle/Header.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { borderStyle } from '../Theme';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { searchChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => _objectSpread({\n  button: {\n    margin: '14px'\n  },\n  menuIconButton: {\n    margin: '8px -2px 8px 12px'\n  },\n  searchIconButton: {\n    margin: '8px 12px 8px 0'\n  },\n  messageSearchIconButton: {\n    margin: '8px 0 8px 12px'\n  },\n  moreIconButton: {\n    margin: '8px 12px 8px 0'\n  },\n  headerStatusTitle: {\n    color: theme.palette.text.secondary\n  },\n  headerStatusAccentTitle: {\n    color: theme.palette.primary.dark + '!important'\n  }\n}, borderStyle(theme));\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateChatOnlineMemberCount = update => {\n      const chat = ChatStore.get(ApplicationStore.getChatId());\n      if (!chat) return;\n      if (chat.id !== update.chat_id) return;\n      this.forceUpdate();\n    };\n\n    this.onClientUpdateMessageSelected = update => {\n      this.setState({\n        selectionCount: MessageStore.selectedItems.size\n      });\n    };\n\n    this.onClientUpdateChatId = update => {\n      this.forceUpdate();\n    };\n\n    this.onUpdateConnectionState = update => {\n      this.setState({\n        connectionState: update.state\n      });\n    };\n\n    this.onUpdateAuthorizationState = update => {\n      this.setState({\n        authorizationState: update.authorization_state\n      });\n    };\n\n    this.onUpdateChatTitle = update => {\n      const chat = ChatStore.get(ApplicationStore.getChatId());\n      if (!chat) return;\n      if (chat.id !== update.chat_id) return;\n      this.forceUpdate();\n    };\n\n    this.onUpdateUserStatus = update => {\n      const chat = ChatStore.get(ApplicationStore.getChatId());\n      if (!chat) return;\n      if (!chat.type) return;\n\n      switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n          {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n\n            if (fullInfo && fullInfo.members) {\n              const member = fullInfo.members.find(x => x.user_id === update.user_id);\n\n              if (member) {\n                this.forceUpdate();\n              }\n            }\n\n            break;\n          }\n\n        case 'chatTypePrivate':\n          {\n            if (chat.type.user_id === update.user_id) {\n              this.forceUpdate();\n            }\n\n            break;\n          }\n\n        case 'chatTypeSecret':\n          {\n            if (chat.type.user_id === update.user_id) {\n              this.forceUpdate();\n            }\n\n            break;\n          }\n\n        case 'chatTypeSupergroup':\n          {\n            break;\n          }\n      }\n    };\n\n    this.onUpdateUserChatAction = update => {\n      const currentChatId = ApplicationStore.getChatId();\n\n      if (currentChatId === update.chat_id) {\n        this.forceUpdate();\n      }\n    };\n\n    this.onUpdateBasicGroup = update => {\n      const chat = ChatStore.get(ApplicationStore.getChatId());\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n        this.forceUpdate();\n      }\n    };\n\n    this.onUpdateSupergroup = update => {\n      const chat = ChatStore.get(ApplicationStore.getChatId());\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n        this.forceUpdate();\n      }\n    };\n\n    this.onUpdateBasicGroupFullInfo = update => {\n      const chat = ChatStore.get(ApplicationStore.getChatId());\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n        this.forceUpdate();\n      }\n    };\n\n    this.onUpdateSupergroupFullInfo = update => {\n      const chat = ChatStore.get(ApplicationStore.getChatId());\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n        this.forceUpdate();\n      }\n    };\n\n    this.onUpdateUserFullInfo = update => {\n      const chat = ChatStore.get(ApplicationStore.getChatId());\n      if (!chat) return;\n\n      if (chat.type && (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') && chat.type.user_id === update.user_id) {\n        this.forceUpdate();\n      }\n    };\n\n    this.openChatDetails = () => {\n      const chatId = ApplicationStore.getChatId();\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n      ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    this.handleSearchChat = () => {\n      const chatId = ApplicationStore.getChatId();\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n      searchChat(chatId);\n    };\n\n    this.localize = str => {\n      const t = this.props.t;\n      return t(str).replace('...', '').replace('â€¦', '');\n    };\n\n    this.state = {\n      authorizationState: ApplicationStore.getAuthorizationState(),\n      connectionState: ApplicationStore.getConnectionState()\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState !== this.state) {\n      return true;\n    }\n\n    if (nextProps.theme !== this.props.theme) {\n      return true;\n    }\n\n    if (nextProps.t !== this.props.t) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n    ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n    ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n    ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n    UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n    SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n    SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n  }\n\n  componentWillUnmount() {\n    ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n    ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n    ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n    ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n    UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n    BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n    SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n    SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          t = _this$props.t;\n    const _this$state = this.state,\n          authorizationState = _this$state.authorizationState,\n          connectionState = _this$state.connectionState,\n          selectionCount = _this$state.selectionCount;\n\n    if (selectionCount) {\n      return React.createElement(HeaderCommand, {\n        count: selectionCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      });\n    }\n\n    const chatId = ApplicationStore.getChatId();\n    const chat = ChatStore.get(chatId);\n    const isAccentSubtitle = isAccentChatSubtitle(chatId);\n    let title = getChatTitle(chatId, true, t);\n    let subtitle = getChatSubtitle(chatId, true);\n    let showProgressAnimation = false;\n\n    if (connectionState) {\n      switch (connectionState['@type']) {\n        case 'connectionStateConnecting':\n          title = this.localize('Connecting');\n          subtitle = '';\n          showProgressAnimation = true;\n          break;\n\n        case 'connectionStateConnectingToProxy':\n          title = this.localize('Connecting to proxy');\n          subtitle = '';\n          showProgressAnimation = true;\n          break;\n\n        case 'connectionStateReady':\n          break;\n\n        case 'connectionStateUpdating':\n          title = this.localize('Updating');\n          subtitle = '';\n          showProgressAnimation = true;\n          break;\n\n        case 'connectionStateWaitingForNetwork':\n          title = this.localize('Waiting for network');\n          subtitle = '';\n          showProgressAnimation = true;\n          break;\n      }\n    } else if (authorizationState) {\n      switch (authorizationState['@type']) {\n        case 'authorizationStateClosed':\n          break;\n\n        case ' authorizationStateClosing':\n          break;\n\n        case 'authorizationStateLoggingOut':\n          title = this.localize('Logging out');\n          subtitle = '';\n          showProgressAnimation = true;\n          break;\n\n        case 'authorizationStateReady':\n          break;\n\n        case 'authorizationStateWaitCode':\n          break;\n\n        case 'authorizationStateWaitEncryptionKey':\n          title = this.localize('Loading');\n          subtitle = '';\n          showProgressAnimation = true;\n          break;\n\n        case 'authorizationStateWaitPassword':\n          break;\n\n        case 'authorizationStateWaitPhoneNumber':\n          break;\n\n        case 'authorizationStateWaitTdlibParameters':\n          title = this.localize('Loading');\n          subtitle = '';\n          showProgressAnimation = true;\n          break;\n      }\n    } else {\n      title = this.localize('Loading');\n      subtitle = '';\n      showProgressAnimation = true;\n    }\n\n    return React.createElement(\"div\", {\n      className: classNames(classes.borderColor, 'header-details'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default'),\n      onClick: this.openChatDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"header-status-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, title), showProgressAnimation && React.createElement(HeaderProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: classNames('header-status-title', classes.headerStatusTitle, {\n        [classes.headerStatusAccentTitle]: isAccentSubtitle\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, subtitle), React.createElement(\"span\", {\n      className: \"header-status-tail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })), chat && React.createElement(React.Fragment, null, React.createElement(IconButton, {\n      className: classes.messageSearchIconButton,\n      \"aria-label\": \"Search\",\n      onClick: this.handleSearchChat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })), React.createElement(MainMenuButton, {\n      openChatDetails: this.openChatDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst enhance = compose(withTranslation(), withStyles(styles, {\n  withTheme: true\n}));\nexport default enhance(Header);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnMiddle/Header.js"],"names":["React","Component","classNames","IconButton","SearchIcon","withStyles","withTranslation","compose","MainMenuButton","HeaderCommand","HeaderProgress","borderStyle","getChatSubtitle","getChatTitle","isAccentChatSubtitle","isMeChat","searchChat","ChatStore","UserStore","BasicGroupStore","SupergroupStore","MessageStore","ApplicationStore","styles","theme","button","margin","menuIconButton","searchIconButton","messageSearchIconButton","moreIconButton","headerStatusTitle","color","palette","text","secondary","headerStatusAccentTitle","primary","dark","Header","constructor","props","onUpdateChatOnlineMemberCount","update","chat","get","getChatId","id","chat_id","forceUpdate","onClientUpdateMessageSelected","setState","selectionCount","selectedItems","size","onClientUpdateChatId","onUpdateConnectionState","connectionState","state","onUpdateAuthorizationState","authorizationState","authorization_state","onUpdateChatTitle","onUpdateUserStatus","type","fullInfo","getFullInfo","basic_group_id","members","member","find","x","user_id","onUpdateUserChatAction","currentChatId","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup_id","supergroup","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateUserFullInfo","openChatDetails","chatId","changeChatDetailsVisibility","handleSearchChat","localize","str","t","replace","getAuthorizationState","getConnectionState","shouldComponentUpdate","nextProps","nextState","componentDidMount","on","componentWillUnmount","removeListener","render","classes","isAccentSubtitle","title","subtitle","showProgressAnimation","borderColor","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { borderStyle } from '../Theme';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { searchChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('â€¦', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n"]},"metadata":{},"sourceType":"module"}