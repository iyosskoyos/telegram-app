{"ast":null,"code":"import _defineProperty from \"/home/me-admin/Downloads/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/ColumnLeft/Dialogs.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => _objectSpread({}, borderStyle(theme));\n\nclass Dialogs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateThemeChange = update => {\n      this.forceUpdate();\n    };\n\n    this.onClientUpdateChatDetailsVisibility = update => {\n      this.setState({\n        isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n      });\n    };\n\n    this.onClientUpdateSearchChat = update => {\n      const chatId = update.chatId,\n            query = update.query;\n      const _this$state = this.state,\n            openSearch = _this$state.openSearch,\n            searchChatId = _this$state.searchChatId,\n            searchText = _this$state.searchText;\n\n      if (openSearch && chatId === searchChatId && query === searchText) {\n        return;\n      }\n\n      const header = this.dialogsHeaderRef.current;\n      this.setState({\n        openSearch: true,\n        searchChatId: chatId,\n        searchText: null\n      }, () => {\n        if (header) {\n          header.setInitQuery(query);\n        }\n      });\n    };\n\n    this.handleHeaderClick = () => {\n      this.dialogsListRef.current.scrollToTop();\n    };\n\n    this.handleSearch = visible => {\n      this.setState({\n        openSearch: visible,\n        searchChatId: 0,\n        searchText: null\n      });\n    };\n\n    this.handleSelectMessage = (chatId, messageId, openSearch) => {\n      openChat(chatId, messageId);\n      const searchChatId = openSearch ? this.state.searchChatId : 0;\n      const searchText = openSearch ? this.state.searchText : null;\n      this.setState({\n        openSearch: openSearch,\n        searchChatId: searchChatId,\n        searchText: searchText\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        openSearch: false,\n        searchChatId: 0,\n        searchText: null\n      });\n    };\n\n    this.handleSearchTextChange = text => {\n      this.setState({\n        searchText: text,\n        query: null\n      });\n    };\n\n    this.dialogsListRef = React.createRef();\n    this.dialogsHeaderRef = React.createRef();\n    this.state = {\n      isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n      openSearch: false,\n      searchChatId: 0,\n      searchText: null,\n      query: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n      return true;\n    }\n\n    if (nextState.openSearch !== this.state.openSearch) {\n      return true;\n    }\n\n    if (nextState.searchChatId !== this.state.searchChatId) {\n      return true;\n    }\n\n    if (nextState.searchText !== this.state.searchText) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n    ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n  }\n\n  componentWillUnmount() {\n    ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n    ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          isChatDetailsVisible = _this$state2.isChatDetailsVisible,\n          openSearch = _this$state2.openSearch,\n          searchChatId = _this$state2.searchChatId,\n          searchText = _this$state2.searchText;\n    return React.createElement(\"div\", {\n      className: classNames(classes.borderColor, 'dialogs', {\n        'dialogs-third-column': isChatDetailsVisible\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(DialogsHeader, {\n      ref: this.dialogsHeaderRef,\n      openSearch: openSearch,\n      onClick: this.handleHeaderClick,\n      onSearch: this.handleSearch,\n      onSearchTextChange: this.handleSearchTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dialogs-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(DialogsList, {\n      ref: this.dialogsListRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), openSearch && React.createElement(Search, {\n      chatId: searchChatId,\n      text: searchText,\n      onSelectMessage: this.handleSelectMessage,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(UpdatePanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(Dialogs);","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/ColumnLeft/Dialogs.js"],"names":["React","Component","PropTypes","classNames","withStyles","Search","DialogsHeader","DialogsList","UpdatePanel","borderStyle","openChat","ApplicationStore","styles","theme","Dialogs","constructor","props","onClientUpdateThemeChange","update","forceUpdate","onClientUpdateChatDetailsVisibility","setState","isChatDetailsVisible","onClientUpdateSearchChat","chatId","query","state","openSearch","searchChatId","searchText","header","dialogsHeaderRef","current","setInitQuery","handleHeaderClick","dialogsListRef","scrollToTop","handleSearch","visible","handleSelectMessage","messageId","handleClose","handleSearchTextChange","text","createRef","shouldComponentUpdate","nextProps","nextState","componentDidMount","on","componentWillUnmount","removeListener","render","classes","borderColor"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,sBACbJ,WAAW,CAACI,KAAD,CADE,CAApB;;AAIA,MAAMC,OAAN,SAAsBb,SAAtB,CAAgC;AAC5Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+CnBC,yBA/CmB,GA+CSC,MAAM,IAAI;AAClC,WAAKC,WAAL;AACH,KAjDkB;;AAAA,SAmDnBC,mCAnDmB,GAmDmBF,MAAM,IAAI;AAC5C,WAAKG,QAAL,CAAc;AACVC,QAAAA,oBAAoB,EAAEX,gBAAgB,CAACW;AAD7B,OAAd;AAGH,KAvDkB;;AAAA,SAyDnBC,wBAzDmB,GAyDQL,MAAM,IAAI;AAAA,YACzBM,MADyB,GACPN,MADO,CACzBM,MADyB;AAAA,YACjBC,KADiB,GACPP,MADO,CACjBO,KADiB;AAAA,0BAEgB,KAAKC,KAFrB;AAAA,YAEzBC,UAFyB,eAEzBA,UAFyB;AAAA,YAEbC,YAFa,eAEbA,YAFa;AAAA,YAECC,UAFD,eAECA,UAFD;;AAIjC,UAAIF,UAAU,IAAIH,MAAM,KAAKI,YAAzB,IAAyCH,KAAK,KAAKI,UAAvD,EAAmE;AAC/D;AACH;;AAED,YAAMC,MAAM,GAAG,KAAKC,gBAAL,CAAsBC,OAArC;AACA,WAAKX,QAAL,CACI;AACIM,QAAAA,UAAU,EAAE,IADhB;AAEIC,QAAAA,YAAY,EAAEJ,MAFlB;AAGIK,QAAAA,UAAU,EAAE;AAHhB,OADJ,EAMI,MAAM;AACF,YAAIC,MAAJ,EAAY;AACRA,UAAAA,MAAM,CAACG,YAAP,CAAoBR,KAApB;AACH;AACJ,OAVL;AAYH,KA9EkB;;AAAA,SAgFnBS,iBAhFmB,GAgFC,MAAM;AACtB,WAAKC,cAAL,CAAoBH,OAApB,CAA4BI,WAA5B;AACH,KAlFkB;;AAAA,SAoFnBC,YApFmB,GAoFJC,OAAO,IAAI;AACtB,WAAKjB,QAAL,CAAc;AACVM,QAAAA,UAAU,EAAEW,OADF;AAEVV,QAAAA,YAAY,EAAE,CAFJ;AAGVC,QAAAA,UAAU,EAAE;AAHF,OAAd;AAKH,KA1FkB;;AAAA,SA4FnBU,mBA5FmB,GA4FG,CAACf,MAAD,EAASgB,SAAT,EAAoBb,UAApB,KAAmC;AACrDjB,MAAAA,QAAQ,CAACc,MAAD,EAASgB,SAAT,CAAR;AAEA,YAAMZ,YAAY,GAAGD,UAAU,GAAG,KAAKD,KAAL,CAAWE,YAAd,GAA6B,CAA5D;AACA,YAAMC,UAAU,GAAGF,UAAU,GAAG,KAAKD,KAAL,CAAWG,UAAd,GAA2B,IAAxD;AAEA,WAAKR,QAAL,CAAc;AACVM,QAAAA,UAAU,EAAEA,UADF;AAEVC,QAAAA,YAAY,EAAEA,YAFJ;AAGVC,QAAAA,UAAU,EAAEA;AAHF,OAAd;AAKH,KAvGkB;;AAAA,SAyGnBY,WAzGmB,GAyGL,MAAM;AAChB,WAAKpB,QAAL,CAAc;AACVM,QAAAA,UAAU,EAAE,KADF;AAEVC,QAAAA,YAAY,EAAE,CAFJ;AAGVC,QAAAA,UAAU,EAAE;AAHF,OAAd;AAKH,KA/GkB;;AAAA,SAiHnBa,sBAjHmB,GAiHMC,IAAI,IAAI;AAC7B,WAAKtB,QAAL,CAAc;AACVQ,QAAAA,UAAU,EAAEc,IADF;AAEVlB,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIH,KAtHkB;;AAGf,SAAKU,cAAL,GAAsBnC,KAAK,CAAC4C,SAAN,EAAtB;AACA,SAAKb,gBAAL,GAAwB/B,KAAK,CAAC4C,SAAN,EAAxB;AAEA,SAAKlB,KAAL,GAAa;AACTJ,MAAAA,oBAAoB,EAAEX,gBAAgB,CAACW,oBAD9B;AAETK,MAAAA,UAAU,EAAE,KAFH;AAGTC,MAAAA,YAAY,EAAE,CAHL;AAITC,MAAAA,UAAU,EAAE,IAJH;AAKTJ,MAAAA,KAAK,EAAE;AALE,KAAb;AAOH;;AAEDoB,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAIA,SAAS,CAACzB,oBAAV,KAAmC,KAAKI,KAAL,CAAWJ,oBAAlD,EAAwE;AACpE,aAAO,IAAP;AACH;;AAED,QAAIyB,SAAS,CAACpB,UAAV,KAAyB,KAAKD,KAAL,CAAWC,UAAxC,EAAoD;AAChD,aAAO,IAAP;AACH;;AAED,QAAIoB,SAAS,CAACnB,YAAV,KAA2B,KAAKF,KAAL,CAAWE,YAA1C,EAAwD;AACpD,aAAO,IAAP;AACH;;AAED,QAAImB,SAAS,CAAClB,UAAV,KAAyB,KAAKH,KAAL,CAAWG,UAAxC,EAAoD;AAChD,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAEDmB,EAAAA,iBAAiB,GAAG;AAChBrC,IAAAA,gBAAgB,CAACsC,EAAjB,CAAoB,mCAApB,EAAyD,KAAK7B,mCAA9D;AACAT,IAAAA,gBAAgB,CAACsC,EAAjB,CAAoB,wBAApB,EAA8C,KAAK1B,wBAAnD;AACAZ,IAAAA,gBAAgB,CAACsC,EAAjB,CAAoB,yBAApB,EAA+C,KAAKhC,yBAApD;AACH;;AAEDiC,EAAAA,oBAAoB,GAAG;AACnBvC,IAAAA,gBAAgB,CAACwC,cAAjB,CAAgC,mCAAhC,EAAqE,KAAK/B,mCAA1E;AACAT,IAAAA,gBAAgB,CAACwC,cAAjB,CAAgC,wBAAhC,EAA0D,KAAK5B,wBAA/D;AACAZ,IAAAA,gBAAgB,CAACwC,cAAjB,CAAgC,yBAAhC,EAA2D,KAAKlC,yBAAhE;AACH;;AA2EDmC,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKrC,KADpB,CACGqC,OADH;AAAA,yBAEkE,KAAK3B,KAFvE;AAAA,UAEGJ,oBAFH,gBAEGA,oBAFH;AAAA,UAEyBK,UAFzB,gBAEyBA,UAFzB;AAAA,UAEqCC,YAFrC,gBAEqCA,YAFrC;AAAA,UAEmDC,UAFnD,gBAEmDA,UAFnD;AAIL,WACI;AACI,MAAA,SAAS,EAAE1B,UAAU,CAACkD,OAAO,CAACC,WAAT,EAAsB,SAAtB,EAAiC;AAClD,gCAAwBhC;AAD0B,OAAjC,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,aAAD;AACI,MAAA,GAAG,EAAE,KAAKS,gBADd;AAEI,MAAA,UAAU,EAAEJ,UAFhB;AAGI,MAAA,OAAO,EAAE,KAAKO,iBAHlB;AAII,MAAA,QAAQ,EAAE,KAAKG,YAJnB;AAKI,MAAA,kBAAkB,EAAE,KAAKK,sBAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAE,KAAKP,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKR,UAAU,IACP,oBAAC,MAAD;AACI,MAAA,MAAM,EAAEC,YADZ;AAEI,MAAA,IAAI,EAAEC,UAFV;AAGI,MAAA,eAAe,EAAE,KAAKU,mBAH1B;AAII,MAAA,OAAO,EAAE,KAAKE,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,CAXJ,EAsBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,CADJ;AA0BH;;AAvJ2B;;AA0JhC,eAAerC,UAAU,CAACQ,MAAD,CAAV,CAAmBE,OAAnB,CAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsListRef.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    ref={this.dialogsHeaderRef}\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsListRef} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n"]},"metadata":{},"sourceType":"module"}