{"ast":null,"code":"import _defineProperty from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import withStyles from'@material-ui/core/styles/withStyles';import UnreadSeparator from'./UnreadSeparator';import Photo from'./Media/Photo';import{openMedia}from'../../Utils/Message';import{getServiceMessageContent}from'../../Utils/ServiceMessage';import MessageStore from'../../Stores/MessageStore';import'./ServiceMessage.css';var chatPhotoStyle={width:64,height:64,borderRadius:'50%',margin:'-8px auto 16px auto'};var styles=function styles(theme){return{'@keyframes highlighted':{from:{backgroundColor:theme.palette.primary.main+'22'},to:{backgroundColor:'transparent'}},messageHighlighted:{animation:'highlighted 4s ease-out'},serviceMessageContent:{color:theme.palette.text.secondary}};};var ServiceMessage=/*#__PURE__*/function(_React$Component){_inherits(ServiceMessage,_React$Component);function ServiceMessage(props){var _this;_classCallCheck(this,ServiceMessage);_this=_possibleConstructorReturn(this,_getPrototypeOf(ServiceMessage).call(this,props));_this.onClientUpdateMessageHighlighted=function(update){var _this$props=_this.props,chatId=_this$props.chatId,messageId=_this$props.messageId;var _this$state=_this.state,selected=_this$state.selected,highlighted=_this$state.highlighted;if(selected)return;if(chatId===update.chatId&&messageId===update.messageId){if(highlighted){_this.setState({highlighted:false},function(){setTimeout(function(){_this.setState({highlighted:true});},0);});}else{_this.setState({highlighted:true});}}else if(highlighted){_this.setState({highlighted:false});}};_this.handleAnimationEnd=function(){_this.setState({highlighted:false});};_this.openMedia=function(event){if(event){event.preventDefault();event.stopPropagation();}var _this$props2=_this.props,chatId=_this$props2.chatId,messageId=_this$props2.messageId;openMedia(chatId,messageId);};if(process.env.NODE_ENV!=='production'){var _this$props3=_this.props,chatId=_this$props3.chatId,messageId=_this$props3.messageId;_this.state={message:MessageStore.get(chatId,messageId),highlighted:false};}else{_this.state={highlighted:false};}return _this;}_createClass(ServiceMessage,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){var _this$props4=this.props,chatId=_this$props4.chatId,messageId=_this$props4.messageId,sendingState=_this$props4.sendingState,showUnreadSeparator=_this$props4.showUnreadSeparator,theme=_this$props4.theme;var highlighted=this.state.highlighted;if(nextProps.chatId!==chatId){return true;}if(nextProps.messageId!==messageId){return true;}if(nextProps.sendingState!==sendingState){return true;}if(nextProps.showUnreadSeparator!==showUnreadSeparator){return true;}if(nextProps.theme!==theme){return true;}if(nextState.highlighted!==highlighted){return true;}return false;}},{key:\"componentDidMount\",value:function componentDidMount(){MessageStore.on('clientUpdateMessageHighlighted',this.onClientUpdateMessageHighlighted);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){MessageStore.removeListener('clientUpdateMessageHighlighted',this.onClientUpdateMessageHighlighted);}},{key:\"render\",value:function render(){var _this$props5=this.props,classes=_this$props5.classes,chatId=_this$props5.chatId,messageId=_this$props5.messageId,showUnreadSeparator=_this$props5.showUnreadSeparator;var highlighted=this.state.highlighted;var message=MessageStore.get(chatId,messageId);if(!message)return React.createElement(\"div\",null,\"[empty service message]\");var content=message.content;if(!content)return React.createElement(\"div\",null,\"[empty service message]\");var photo=content.photo;var text=getServiceMessageContent(message,true);var messageClassName=classNames('service-message',_defineProperty({},classes.messageHighlighted,highlighted));return React.createElement(\"div\",{className:messageClassName,onAnimationEnd:this.handleAnimationEnd},showUnreadSeparator&&React.createElement(UnreadSeparator,null),React.createElement(\"div\",{className:\"service-message-wrapper\"},React.createElement(\"div\",{className:classNames('service-message-content',classes.serviceMessageContent)},text)),photo&&React.createElement(Photo,{chatId:chatId,messageId:messageId,photo:photo,style:chatPhotoStyle,openMedia:this.openMedia}));}}]);return ServiceMessage;}(React.Component);export default withStyles(styles,{withTheme:true})(ServiceMessage);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Message/ServiceMessage.js"],"names":["React","classNames","withStyles","UnreadSeparator","Photo","openMedia","getServiceMessageContent","MessageStore","chatPhotoStyle","width","height","borderRadius","margin","styles","theme","from","backgroundColor","palette","primary","main","to","messageHighlighted","animation","serviceMessageContent","color","text","secondary","ServiceMessage","props","onClientUpdateMessageHighlighted","update","chatId","messageId","state","selected","highlighted","setState","setTimeout","handleAnimationEnd","event","preventDefault","stopPropagation","process","env","NODE_ENV","message","get","nextProps","nextState","sendingState","showUnreadSeparator","on","removeListener","classes","content","photo","messageClassName","Component","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n"]},"metadata":{},"sourceType":"module"}