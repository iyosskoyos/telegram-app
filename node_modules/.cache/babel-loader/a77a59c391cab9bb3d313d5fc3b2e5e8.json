{"ast":null,"code":"import _slicedToArray from \"/home/chilly/Projects/Capacitor/telegram-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n  if (!sticker) return false;\n  if (!sticker.is_animated) return false;\n  const message = MessageStore.get(chatId, messageId);\n\n  if (message) {\n    const sending_state = message.sending_state;\n    if (sending_state && !sticker.set_id) return false;\n  }\n\n  return true;\n}\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE) {\n  if (!thumbnail) return false;\n  return Math.max(thumbnail.width, thumbnail.height) <= blurredSize;\n}\nexport function getAudioTitle(audio) {\n  if (!audio) return null;\n  const file_name = audio.file_name,\n        title = audio.title,\n        performer = audio.performer;\n  const trimmedTitle = title ? title.trim() : '';\n  const trimmedPerformer = performer ? performer.trim() : '';\n  return trimmedTitle || trimmedPerformer ? \"\".concat(trimmedPerformer || 'Unknown Artist', \" \\u2014 \").concat(trimmedTitle || 'Unknown Track') : file_name;\n}\nexport function getStickers(sets) {\n  return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n  const result = [];\n\n  const _toRowColumn = toRowColumn(sticker, sets, stickersPerRow),\n        _toRowColumn2 = _slicedToArray(_toRowColumn, 2),\n        row = _toRowColumn2[0],\n        column = _toRowColumn2[1];\n\n  if (row === -1) return [];\n  if (column === -1) return [];\n  const prevPrevRow = row - 2;\n  const prevRow = row - 1;\n  const nextRow = row + 1;\n  const nextNextRow = row + 2;\n  const prevColumn = column - 1;\n  const nextColumn = column + 1;\n  let skipPrevRow = prevRow < 0;\n  let skipPrePrevRow = prevPrevRow < 0;\n\n  if (!skipPrevRow) {\n    if (prevColumn >= 0) {\n      let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n\n      if (index === -1) {\n        skipPrevRow = true;\n        index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n        skipPrePrevRow = index === -1;\n      }\n\n      if (index !== -1) {\n        result.push(index);\n      }\n    }\n\n    let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n\n    if (index === -1) {\n      skipPrevRow = true;\n      index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n      skipPrePrevRow = index === -1;\n    }\n\n    if (index !== -1) {\n      result.push(index);\n    }\n\n    if (nextColumn < stickersPerRow) {\n      let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n\n      if (index === -1) {\n        index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n      }\n\n      if (index !== -1) {\n        result.push(index);\n      }\n    }\n  }\n\n  if (prevColumn >= 0) {\n    const index = toIndex(row, prevColumn, sets, stickersPerRow);\n\n    if (index !== -1) {\n      result.push(index);\n    }\n  }\n\n  if (nextColumn < stickersPerRow) {\n    const index = toIndex(row, nextColumn, sets, stickersPerRow);\n\n    if (index !== -1) {\n      result.push(index);\n    }\n  }\n\n  let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n  let skipNextRow = nextRow >= totalRows;\n  let skipNextNextRow = nextRow >= totalRows;\n\n  if (!skipNextRow) {\n    if (prevColumn >= 0) {\n      let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n\n      if (index === -1) {\n        skipNextRow = true;\n        index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n        skipNextNextRow = index === -1;\n      }\n\n      if (index !== -1) {\n        result.push(index);\n      }\n    }\n\n    let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n\n    if (index === -1) {\n      skipNextRow = true;\n      index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n      skipNextNextRow = index === -1;\n    }\n\n    if (index !== -1) {\n      result.push(index);\n    }\n\n    if (nextColumn < stickersPerRow) {\n      let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n\n      if (index === -1) {\n        index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n      }\n\n      if (index !== -1) {\n        result.push(index);\n      }\n    }\n  }\n\n  const items = getStickers(sets);\n  return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n  const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n  if (setIndex === -1) return [-1, -1];\n  const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n  if (stickerIndex === -1) return [-1, -1];\n  let prevRows = 0;\n\n  for (let i = 0; i < setIndex; i++) {\n    prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n  }\n\n  return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n  let index = -1;\n  let totalRows = 0;\n  let setIndex = -1;\n\n  for (let i = 0; i < sets.length; i++) {\n    let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n    totalRows += setRows;\n\n    if (totalRows > row) {\n      setIndex = i;\n      break;\n    }\n  }\n\n  if (setIndex === -1) return index;\n  let setRow = row;\n  let setColumn = column;\n\n  for (let i = 0; i < setIndex; i++) {\n    let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n    setRow -= setRows;\n  }\n\n  index = stickersPerRow * setRow + setColumn;\n  if (index >= sets[setIndex].stickers.length) return -1;\n\n  for (let i = 0; i < setIndex; i++) {\n    index += sets[i].stickers.length;\n  }\n\n  return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n  if (!thumbnail) return null;\n  const photo = thumbnail.photo,\n        width = thumbnail.width,\n        height = thumbnail.height;\n  if (!photo) return null;\n  return {\n    '@type': 'inputThumbnail',\n    thumbnail: {\n      '@type': 'inputFileId',\n      id: photo.id\n    },\n    width,\n    height\n  };\n}\n\nfunction getInputMediaCaption(text) {\n  if (!text) return null;\n  return {\n    '@type': 'formattedText',\n    text: text,\n    entities: null\n  };\n}\n\nexport function getInputMediaContent(media, text) {\n  if (!media) return null;\n\n  switch (media['@type']) {\n    case 'animation':\n      {\n        const file = media.animation,\n              thumbnail = media.thumbnail,\n              width = media.width,\n              height = media.height,\n              duration = media.duration;\n        return {\n          '@type': 'inputMessageAnimation',\n          animation: {\n            '@type': 'inputFileId',\n            id: file.id\n          },\n          thumbnail: getInputMediaThumbnail(thumbnail),\n          duration,\n          width,\n          height,\n          caption: getInputMediaCaption(text)\n        };\n      }\n\n    case 'audio':\n      {\n        const file = media.audio,\n              thumbnail = media.album_cover_thumbnail,\n              title = media.title,\n              performer = media.performer,\n              duration = media.duration;\n        return {\n          '@type': 'inputMessageAudio',\n          audio: {\n            '@type': 'inputFileId',\n            id: file.id\n          },\n          album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n          duration,\n          title,\n          performer,\n          caption: getInputMediaCaption(text)\n        };\n      }\n\n    case 'contact':\n      {\n        return {\n          '@type': 'inputMessageContact',\n          contact: media\n        };\n      }\n\n    case 'document':\n      {\n        const file = media.document,\n              thumbnail = media.thumbnail;\n        return {\n          '@type': 'inputMessageDocument',\n          document: {\n            '@type': 'inputFileId',\n            id: file.id\n          },\n          thumbnail: getInputMediaThumbnail(thumbnail),\n          caption: getInputMediaCaption(text)\n        };\n      }\n\n    case 'game':\n      {\n        return null;\n      }\n\n    case 'invoice':\n      {\n        return null;\n      }\n\n    case 'location':\n      {\n        return {\n          '@type': 'inputMessageLocation',\n          location: media,\n          live_period: 0\n        };\n      }\n\n    case 'photo':\n      {\n        const sizes = media.sizes;\n        if (!sizes.length) return null;\n        const thumbnail = sizes[0];\n        const photo = sizes[sizes.length - 1];\n        if (!photo) return null;\n        const file = photo.photo,\n              width = photo.width,\n              height = photo.height;\n        return {\n          '@type': 'inputMessagePhoto',\n          photo: {\n            '@type': 'inputFileId',\n            id: file.id\n          },\n          thumbnail: getInputMediaThumbnail(thumbnail),\n          added_sticker_file_ids: [],\n          width,\n          height,\n          caption: getInputMediaCaption(text),\n          ttl: 0\n        };\n      }\n\n    case 'poll':\n      {\n        return null;\n      }\n\n    case 'sticker':\n      {\n        const file = media.sticker,\n              thumbnail = media.thumbnail,\n              width = media.width,\n              height = media.height;\n        return {\n          '@type': 'inputMessageSticker',\n          sticker: {\n            '@type': 'inputFileId',\n            id: file.id\n          },\n          thumbnail: getInputMediaThumbnail(thumbnail),\n          width,\n          height,\n          caption: getInputMediaCaption(text)\n        };\n      }\n\n    case 'venue':\n      {\n        return {\n          '@type': 'inputMessageVenue',\n          venue: media\n        };\n      }\n\n    case 'video':\n      {\n        const file = media.video,\n              thumbnail = media.thumbnail,\n              width = media.width,\n              height = media.height,\n              duration = media.duration,\n              supports_streaming = media.supports_streaming;\n        return {\n          '@type': 'inputMessageVideo',\n          video: {\n            '@type': 'inputFileId',\n            id: file.id\n          },\n          thumbnail: getInputMediaThumbnail(thumbnail),\n          added_sticker_file_ids: [],\n          duration,\n          width,\n          height,\n          supports_streaming,\n          caption: getInputMediaCaption(text),\n          ttl: 0\n        };\n      }\n\n    case 'videoNote':\n      {\n        const file = media.video,\n              thumbnail = media.thumbnail,\n              duration = media.duration,\n              length = media.length;\n        return {\n          '@type': 'inputMessageVideoNote',\n          video: {\n            '@type': 'inputFileId',\n            id: file.id\n          },\n          thumbnail: getInputMediaThumbnail(thumbnail),\n          duration,\n          length,\n          ttl: 0\n        };\n      }\n\n    case 'voiceNote':\n      {\n        const file = media.voice,\n              duration = media.duration,\n              waveform = media.waveform;\n        return {\n          '@type': 'inputMessageVideoNote',\n          voice_note: {\n            '@type': 'inputFileId',\n            id: file.id\n          },\n          duration,\n          waveform\n        };\n      }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Utils/Media.js"],"names":["THUMBNAIL_BLURRED_SIZE","MessageStore","isValidAnimatedSticker","sticker","chatId","messageId","is_animated","message","get","sending_state","set_id","isBlurredThumbnail","thumbnail","blurredSize","Math","max","width","height","getAudioTitle","audio","file_name","title","performer","trimmedTitle","trim","trimmedPerformer","getStickers","sets","reduce","stickers","set","concat","getNeighborStickersFromSets","stickersPerRow","result","toRowColumn","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","index","toIndex","push","totalRows","ceil","length","skipNextRow","skipNextNextRow","items","map","x","setIndex","findIndex","id","stickerIndex","prevRows","i","floor","setRows","setRow","setColumn","getInputMediaThumbnail","photo","getInputMediaCaption","text","entities","getInputMediaContent","media","file","animation","duration","caption","album_cover_thumbnail","contact","document","location","live_period","sizes","added_sticker_file_ids","ttl","venue","video","supports_streaming","voice","waveform","voice_note"],"mappings":";;AAAA;;;;;;AAOA,SAASA,sBAAT,QAAuC,cAAvC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,OAAO,SAASC,sBAAT,CAAgCC,OAAhC,EAAyCC,MAAzC,EAAiDC,SAAjD,EAA4D;AAC/D,MAAI,CAACF,OAAL,EAAc,OAAO,KAAP;AACd,MAAI,CAACA,OAAO,CAACG,WAAb,EAA0B,OAAO,KAAP;AAE1B,QAAMC,OAAO,GAAGN,YAAY,CAACO,GAAb,CAAiBJ,MAAjB,EAAyBC,SAAzB,CAAhB;;AACA,MAAIE,OAAJ,EAAa;AAAA,UACDE,aADC,GACiBF,OADjB,CACDE,aADC;AAET,QAAIA,aAAa,IAAI,CAACN,OAAO,CAACO,MAA9B,EAAsC,OAAO,KAAP;AACzC;;AAED,SAAO,IAAP;AACH;AAED,OAAO,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,WAAW,GAAGb,sBAArD,EAA6E;AAChF,MAAI,CAACY,SAAL,EAAgB,OAAO,KAAP;AAEhB,SAAOE,IAAI,CAACC,GAAL,CAASH,SAAS,CAACI,KAAnB,EAA0BJ,SAAS,CAACK,MAApC,KAA+CJ,WAAtD;AACH;AAED,OAAO,SAASK,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,MAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AADqB,QAGzBC,SAHyB,GAGOD,KAHP,CAGzBC,SAHyB;AAAA,QAGdC,KAHc,GAGOF,KAHP,CAGdE,KAHc;AAAA,QAGPC,SAHO,GAGOH,KAHP,CAGPG,SAHO;AAIjC,QAAMC,YAAY,GAAGF,KAAK,GAAGA,KAAK,CAACG,IAAN,EAAH,GAAkB,EAA5C;AACA,QAAMC,gBAAgB,GAAGH,SAAS,GAAGA,SAAS,CAACE,IAAV,EAAH,GAAsB,EAAxD;AAEA,SAAOD,YAAY,IAAIE,gBAAhB,aACEA,gBAAgB,IAAI,gBADtB,qBAC4CF,YAAY,IAAI,eAD5D,IAEDH,SAFN;AAGH;AAED,OAAO,SAASM,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,SAAOA,IAAI,CAACC,MAAL,CAAY,CAACC,QAAD,EAAWC,GAAX,KAAmBD,QAAQ,CAACE,MAAT,CAAgBD,GAAG,CAACD,QAApB,CAA/B,EAA8D,EAA9D,CAAP;AACH;AAED,OAAO,SAASG,2BAAT,CAAqC7B,OAArC,EAA8CwB,IAA9C,EAAoDM,cAApD,EAAoE;AACvE,QAAMC,MAAM,GAAG,EAAf;;AADuE,uBAEjDC,WAAW,CAAChC,OAAD,EAAUwB,IAAV,EAAgBM,cAAhB,CAFsC;AAAA;AAAA,QAEhEG,GAFgE;AAAA,QAE3DC,MAF2D;;AAGvE,MAAID,GAAG,KAAK,CAAC,CAAb,EAAgB,OAAO,EAAP;AAChB,MAAIC,MAAM,KAAK,CAAC,CAAhB,EAAmB,OAAO,EAAP;AAEnB,QAAMC,WAAW,GAAGF,GAAG,GAAG,CAA1B;AACA,QAAMG,OAAO,GAAGH,GAAG,GAAG,CAAtB;AACA,QAAMI,OAAO,GAAGJ,GAAG,GAAG,CAAtB;AACA,QAAMK,WAAW,GAAGL,GAAG,GAAG,CAA1B;AAEA,QAAMM,UAAU,GAAGL,MAAM,GAAG,CAA5B;AACA,QAAMM,UAAU,GAAGN,MAAM,GAAG,CAA5B;AAEA,MAAIO,WAAW,GAAGL,OAAO,GAAG,CAA5B;AACA,MAAIM,cAAc,GAAGP,WAAW,GAAG,CAAnC;;AACA,MAAI,CAACM,WAAL,EAAkB;AACd,QAAIF,UAAU,IAAI,CAAlB,EAAqB;AACjB,UAAII,KAAK,GAAGC,OAAO,CAACR,OAAD,EAAUG,UAAV,EAAsBf,IAAtB,EAA4BM,cAA5B,CAAnB;;AACA,UAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdF,QAAAA,WAAW,GAAG,IAAd;AACAE,QAAAA,KAAK,GAAGD,cAAc,GAAG,CAAC,CAAJ,GAAQE,OAAO,CAACT,WAAD,EAAcI,UAAd,EAA0Bf,IAA1B,EAAgCM,cAAhC,CAArC;AACAY,QAAAA,cAAc,GAAGC,KAAK,KAAK,CAAC,CAA5B;AACH;;AACD,UAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,QAAAA,MAAM,CAACc,IAAP,CAAYF,KAAZ;AACH;AACJ;;AAED,QAAIA,KAAK,GAAGF,WAAW,GAAG,CAAC,CAAJ,GAAQG,OAAO,CAACR,OAAD,EAAUF,MAAV,EAAkBV,IAAlB,EAAwBM,cAAxB,CAAtC;;AACA,QAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdF,MAAAA,WAAW,GAAG,IAAd;AACAE,MAAAA,KAAK,GAAGD,cAAc,GAAG,CAAC,CAAJ,GAAQE,OAAO,CAACT,WAAD,EAAcD,MAAd,EAAsBV,IAAtB,EAA4BM,cAA5B,CAArC;AACAY,MAAAA,cAAc,GAAGC,KAAK,KAAK,CAAC,CAA5B;AACH;;AACD,QAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,MAAAA,MAAM,CAACc,IAAP,CAAYF,KAAZ;AACH;;AAED,QAAIH,UAAU,GAAGV,cAAjB,EAAiC;AAC7B,UAAIa,KAAK,GAAGF,WAAW,GAAG,CAAC,CAAJ,GAAQG,OAAO,CAACR,OAAD,EAAUI,UAAV,EAAsBhB,IAAtB,EAA4BM,cAA5B,CAAtC;;AACA,UAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdA,QAAAA,KAAK,GAAGD,cAAc,GAAG,CAAC,CAAJ,GAAQE,OAAO,CAACT,WAAD,EAAcK,UAAd,EAA0BhB,IAA1B,EAAgCM,cAAhC,CAArC;AACH;;AACD,UAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,QAAAA,MAAM,CAACc,IAAP,CAAYF,KAAZ;AACH;AACJ;AACJ;;AAED,MAAIJ,UAAU,IAAI,CAAlB,EAAqB;AACjB,UAAMI,KAAK,GAAGC,OAAO,CAACX,GAAD,EAAMM,UAAN,EAAkBf,IAAlB,EAAwBM,cAAxB,CAArB;;AACA,QAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,MAAAA,MAAM,CAACc,IAAP,CAAYF,KAAZ;AACH;AACJ;;AAED,MAAIH,UAAU,GAAGV,cAAjB,EAAiC;AAC7B,UAAMa,KAAK,GAAGC,OAAO,CAACX,GAAD,EAAMO,UAAN,EAAkBhB,IAAlB,EAAwBM,cAAxB,CAArB;;AACA,QAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,MAAAA,MAAM,CAACc,IAAP,CAAYF,KAAZ;AACH;AACJ;;AAED,MAAIG,SAAS,GAAGtB,IAAI,CAACC,MAAL,CAAY,CAACqB,SAAD,EAAYnB,GAAZ,KAAoBmB,SAAS,GAAGnC,IAAI,CAACoC,IAAL,CAAUpB,GAAG,CAACD,QAAJ,CAAasB,MAAb,GAAsBlB,cAAhC,CAA5C,EAA6F,CAA7F,CAAhB;AACA,MAAImB,WAAW,GAAGZ,OAAO,IAAIS,SAA7B;AACA,MAAII,eAAe,GAAGb,OAAO,IAAIS,SAAjC;;AACA,MAAI,CAACG,WAAL,EAAkB;AACd,QAAIV,UAAU,IAAI,CAAlB,EAAqB;AACjB,UAAII,KAAK,GAAGC,OAAO,CAACP,OAAD,EAAUE,UAAV,EAAsBf,IAAtB,EAA4BM,cAA5B,CAAnB;;AACA,UAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdM,QAAAA,WAAW,GAAG,IAAd;AACAN,QAAAA,KAAK,GAAGO,eAAe,GAAG,CAAC,CAAJ,GAAQN,OAAO,CAACN,WAAD,EAAcC,UAAd,EAA0Bf,IAA1B,EAAgCM,cAAhC,CAAtC;AACAoB,QAAAA,eAAe,GAAGP,KAAK,KAAK,CAAC,CAA7B;AACH;;AACD,UAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,QAAAA,MAAM,CAACc,IAAP,CAAYF,KAAZ;AACH;AACJ;;AAED,QAAIA,KAAK,GAAGM,WAAW,GAAG,CAAC,CAAJ,GAAQL,OAAO,CAACP,OAAD,EAAUH,MAAV,EAAkBV,IAAlB,EAAwBM,cAAxB,CAAtC;;AACA,QAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdM,MAAAA,WAAW,GAAG,IAAd;AACAN,MAAAA,KAAK,GAAGO,eAAe,GAAG,CAAC,CAAJ,GAAQN,OAAO,CAACN,WAAD,EAAcJ,MAAd,EAAsBV,IAAtB,EAA4BM,cAA5B,CAAtC;AACAoB,MAAAA,eAAe,GAAGP,KAAK,KAAK,CAAC,CAA7B;AACH;;AACD,QAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,MAAAA,MAAM,CAACc,IAAP,CAAYF,KAAZ;AACH;;AAED,QAAIH,UAAU,GAAGV,cAAjB,EAAiC;AAC7B,UAAIa,KAAK,GAAGM,WAAW,GAAG,CAAC,CAAJ,GAAQL,OAAO,CAACP,OAAD,EAAUG,UAAV,EAAsBhB,IAAtB,EAA4BM,cAA5B,CAAtC;;AACA,UAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdA,QAAAA,KAAK,GAAGO,eAAe,GAAG,CAAC,CAAJ,GAAQN,OAAO,CAACN,WAAD,EAAcE,UAAd,EAA0BhB,IAA1B,EAAgCM,cAAhC,CAAtC;AACH;;AACD,UAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,QAAAA,MAAM,CAACc,IAAP,CAAYF,KAAZ;AACH;AACJ;AACJ;;AAED,QAAMQ,KAAK,GAAG5B,WAAW,CAACC,IAAD,CAAzB;AACA,SAAOO,MAAM,CAACqB,GAAP,CAAWC,CAAC,IAAIF,KAAK,CAACE,CAAD,CAArB,CAAP;AACH;;AAED,SAASrB,WAAT,CAAqBhC,OAArB,EAA8BwB,IAA9B,EAAoCM,cAApC,EAAoD;AAChD,QAAMwB,QAAQ,GAAG9B,IAAI,CAAC+B,SAAL,CAAeF,CAAC,IAAIA,CAAC,CAACG,EAAF,KAASxD,OAAO,CAACO,MAArC,CAAjB;AACA,MAAI+C,QAAQ,KAAK,CAAC,CAAlB,EAAqB,OAAO,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAP;AAErB,QAAMG,YAAY,GAAGjC,IAAI,CAAC8B,QAAD,CAAJ,CAAe5B,QAAf,CAAwB6B,SAAxB,CAAkCF,CAAC,IAAIA,CAAC,CAACrD,OAAF,CAAUwD,EAAV,KAAiBxD,OAAO,CAACA,OAAR,CAAgBwD,EAAxE,CAArB;AACA,MAAIC,YAAY,KAAK,CAAC,CAAtB,EAAyB,OAAO,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAP;AAEzB,MAAIC,QAAQ,GAAG,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAApB,EAA8BK,CAAC,EAA/B,EAAmC;AAC/BD,IAAAA,QAAQ,IAAI/C,IAAI,CAACoC,IAAL,CAAUvB,IAAI,CAACmC,CAAD,CAAJ,CAAQjC,QAAR,CAAiBsB,MAAjB,GAA0BlB,cAApC,CAAZ;AACH;;AAED,SAAO,CAAC4B,QAAQ,GAAG/C,IAAI,CAACiD,KAAL,CAAWH,YAAY,GAAG3B,cAA1B,CAAZ,EAAuD2B,YAAY,GAAG3B,cAAtE,CAAP;AACH;;AAED,SAASc,OAAT,CAAiBX,GAAjB,EAAsBC,MAAtB,EAA8BV,IAA9B,EAAoCM,cAApC,EAAoD;AAChD,MAAIa,KAAK,GAAG,CAAC,CAAb;AACA,MAAIG,SAAS,GAAG,CAAhB;AACA,MAAIQ,QAAQ,GAAG,CAAC,CAAhB;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnC,IAAI,CAACwB,MAAzB,EAAiCW,CAAC,EAAlC,EAAsC;AAClC,QAAIE,OAAO,GAAGlD,IAAI,CAACoC,IAAL,CAAUvB,IAAI,CAACmC,CAAD,CAAJ,CAAQjC,QAAR,CAAiBsB,MAAjB,GAA0BlB,cAApC,CAAd;AACAgB,IAAAA,SAAS,IAAIe,OAAb;;AACA,QAAIf,SAAS,GAAGb,GAAhB,EAAqB;AACjBqB,MAAAA,QAAQ,GAAGK,CAAX;AACA;AACH;AACJ;;AACD,MAAIL,QAAQ,KAAK,CAAC,CAAlB,EAAqB,OAAOX,KAAP;AAErB,MAAImB,MAAM,GAAG7B,GAAb;AACA,MAAI8B,SAAS,GAAG7B,MAAhB;;AACA,OAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAApB,EAA8BK,CAAC,EAA/B,EAAmC;AAC/B,QAAIE,OAAO,GAAGlD,IAAI,CAACoC,IAAL,CAAUvB,IAAI,CAACmC,CAAD,CAAJ,CAAQjC,QAAR,CAAiBsB,MAAjB,GAA0BlB,cAApC,CAAd;AACAgC,IAAAA,MAAM,IAAID,OAAV;AACH;;AAEDlB,EAAAA,KAAK,GAAGb,cAAc,GAAGgC,MAAjB,GAA0BC,SAAlC;AAEA,MAAIpB,KAAK,IAAInB,IAAI,CAAC8B,QAAD,CAAJ,CAAe5B,QAAf,CAAwBsB,MAArC,EAA6C,OAAO,CAAC,CAAR;;AAE7C,OAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAApB,EAA8BK,CAAC,EAA/B,EAAmC;AAC/BhB,IAAAA,KAAK,IAAInB,IAAI,CAACmC,CAAD,CAAJ,CAAQjC,QAAR,CAAiBsB,MAA1B;AACH;;AAED,SAAOL,KAAP;AACH;;AAED,SAASqB,sBAAT,CAAgCvD,SAAhC,EAA2C;AACvC,MAAI,CAACA,SAAL,EAAgB,OAAO,IAAP;AADuB,QAG/BwD,KAH+B,GAGNxD,SAHM,CAG/BwD,KAH+B;AAAA,QAGxBpD,KAHwB,GAGNJ,SAHM,CAGxBI,KAHwB;AAAA,QAGjBC,MAHiB,GAGNL,SAHM,CAGjBK,MAHiB;AAIvC,MAAI,CAACmD,KAAL,EAAY,OAAO,IAAP;AAEZ,SAAO;AACH,aAAS,gBADN;AAEHxD,IAAAA,SAAS,EAAE;AACP,eAAS,aADF;AAEP+C,MAAAA,EAAE,EAAES,KAAK,CAACT;AAFH,KAFR;AAMH3C,IAAAA,KANG;AAOHC,IAAAA;AAPG,GAAP;AASH;;AAED,SAASoD,oBAAT,CAA8BC,IAA9B,EAAoC;AAChC,MAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AAEX,SAAO;AACH,aAAS,eADN;AAEHA,IAAAA,IAAI,EAAEA,IAFH;AAGHC,IAAAA,QAAQ,EAAE;AAHP,GAAP;AAKH;;AAED,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqCH,IAArC,EAA2C;AAC9C,MAAI,CAACG,KAAL,EAAY,OAAO,IAAP;;AAEZ,UAAQA,KAAK,CAAC,OAAD,CAAb;AACI,SAAK,WAAL;AAAkB;AAAA,cACKC,IADL,GACkDD,KADlD,CACNE,SADM;AAAA,cACW/D,SADX,GACkD6D,KADlD,CACW7D,SADX;AAAA,cACsBI,KADtB,GACkDyD,KADlD,CACsBzD,KADtB;AAAA,cAC6BC,MAD7B,GACkDwD,KADlD,CAC6BxD,MAD7B;AAAA,cACqC2D,QADrC,GACkDH,KADlD,CACqCG,QADrC;AAGd,eAAO;AACH,mBAAS,uBADN;AAEHD,UAAAA,SAAS,EAAE;AACP,qBAAS,aADF;AAEPhB,YAAAA,EAAE,EAAEe,IAAI,CAACf;AAFF,WAFR;AAMH/C,UAAAA,SAAS,EAAEuD,sBAAsB,CAACvD,SAAD,CAN9B;AAOHgE,UAAAA,QAPG;AAQH5D,UAAAA,KARG;AASHC,UAAAA,MATG;AAUH4D,UAAAA,OAAO,EAAER,oBAAoB,CAACC,IAAD;AAV1B,SAAP;AAYH;;AACD,SAAK,OAAL;AAAc;AAAA,cACKI,IADL,GAC4ED,KAD5E,CACFtD,KADE;AAAA,cACkCP,SADlC,GAC4E6D,KAD5E,CACWK,qBADX;AAAA,cAC6CzD,KAD7C,GAC4EoD,KAD5E,CAC6CpD,KAD7C;AAAA,cACoDC,SADpD,GAC4EmD,KAD5E,CACoDnD,SADpD;AAAA,cAC+DsD,QAD/D,GAC4EH,KAD5E,CAC+DG,QAD/D;AAGV,eAAO;AACH,mBAAS,mBADN;AAEHzD,UAAAA,KAAK,EAAE;AACH,qBAAS,aADN;AAEHwC,YAAAA,EAAE,EAAEe,IAAI,CAACf;AAFN,WAFJ;AAMHmB,UAAAA,qBAAqB,EAAEX,sBAAsB,CAACvD,SAAD,CAN1C;AAOHgE,UAAAA,QAPG;AAQHvD,UAAAA,KARG;AASHC,UAAAA,SATG;AAUHuD,UAAAA,OAAO,EAAER,oBAAoB,CAACC,IAAD;AAV1B,SAAP;AAYH;;AACD,SAAK,SAAL;AAAgB;AACZ,eAAO;AACH,mBAAS,qBADN;AAEHS,UAAAA,OAAO,EAAEN;AAFN,SAAP;AAIH;;AACD,SAAK,UAAL;AAAiB;AAAA,cACKC,IADL,GACyBD,KADzB,CACLO,QADK;AAAA,cACWpE,SADX,GACyB6D,KADzB,CACW7D,SADX;AAGb,eAAO;AACH,mBAAS,sBADN;AAEHoE,UAAAA,QAAQ,EAAE;AACN,qBAAS,aADH;AAENrB,YAAAA,EAAE,EAAEe,IAAI,CAACf;AAFH,WAFP;AAMH/C,UAAAA,SAAS,EAAEuD,sBAAsB,CAACvD,SAAD,CAN9B;AAOHiE,UAAAA,OAAO,EAAER,oBAAoB,CAACC,IAAD;AAP1B,SAAP;AASH;;AACD,SAAK,MAAL;AAAa;AACT,eAAO,IAAP;AACH;;AACD,SAAK,SAAL;AAAgB;AACZ,eAAO,IAAP;AACH;;AACD,SAAK,UAAL;AAAiB;AACb,eAAO;AACH,mBAAS,sBADN;AAEHW,UAAAA,QAAQ,EAAER,KAFP;AAGHS,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKH;;AACD,SAAK,OAAL;AAAc;AAAA,cACFC,KADE,GACQV,KADR,CACFU,KADE;AAEV,YAAI,CAACA,KAAK,CAAChC,MAAX,EAAmB,OAAO,IAAP;AAEnB,cAAMvC,SAAS,GAAGuE,KAAK,CAAC,CAAD,CAAvB;AACA,cAAMf,KAAK,GAAGe,KAAK,CAACA,KAAK,CAAChC,MAAN,GAAe,CAAhB,CAAnB;AACA,YAAI,CAACiB,KAAL,EAAY,OAAO,IAAP;AANF,cAQKM,IARL,GAQ6BN,KAR7B,CAQFA,KARE;AAAA,cAQWpD,KARX,GAQ6BoD,KAR7B,CAQWpD,KARX;AAAA,cAQkBC,MARlB,GAQ6BmD,KAR7B,CAQkBnD,MARlB;AAUV,eAAO;AACH,mBAAS,mBADN;AAEHmD,UAAAA,KAAK,EAAE;AACH,qBAAS,aADN;AAEHT,YAAAA,EAAE,EAAEe,IAAI,CAACf;AAFN,WAFJ;AAMH/C,UAAAA,SAAS,EAAEuD,sBAAsB,CAACvD,SAAD,CAN9B;AAOHwE,UAAAA,sBAAsB,EAAE,EAPrB;AAQHpE,UAAAA,KARG;AASHC,UAAAA,MATG;AAUH4D,UAAAA,OAAO,EAAER,oBAAoB,CAACC,IAAD,CAV1B;AAWHe,UAAAA,GAAG,EAAE;AAXF,SAAP;AAaH;;AACD,SAAK,MAAL;AAAa;AACT,eAAO,IAAP;AACH;;AACD,SAAK,SAAL;AAAgB;AAAA,cACKX,IADL,GACwCD,KADxC,CACJtE,OADI;AAAA,cACWS,SADX,GACwC6D,KADxC,CACW7D,SADX;AAAA,cACsBI,KADtB,GACwCyD,KADxC,CACsBzD,KADtB;AAAA,cAC6BC,MAD7B,GACwCwD,KADxC,CAC6BxD,MAD7B;AAGZ,eAAO;AACH,mBAAS,qBADN;AAEHd,UAAAA,OAAO,EAAE;AACL,qBAAS,aADJ;AAELwD,YAAAA,EAAE,EAAEe,IAAI,CAACf;AAFJ,WAFN;AAMH/C,UAAAA,SAAS,EAAEuD,sBAAsB,CAACvD,SAAD,CAN9B;AAOHI,UAAAA,KAPG;AAQHC,UAAAA,MARG;AASH4D,UAAAA,OAAO,EAAER,oBAAoB,CAACC,IAAD;AAT1B,SAAP;AAWH;;AACD,SAAK,OAAL;AAAc;AACV,eAAO;AACH,mBAAS,mBADN;AAEHgB,UAAAA,KAAK,EAAEb;AAFJ,SAAP;AAIH;;AACD,SAAK,OAAL;AAAc;AAAA,cACKC,IADL,GACsED,KADtE,CACFc,KADE;AAAA,cACW3E,SADX,GACsE6D,KADtE,CACW7D,SADX;AAAA,cACsBI,KADtB,GACsEyD,KADtE,CACsBzD,KADtB;AAAA,cAC6BC,MAD7B,GACsEwD,KADtE,CAC6BxD,MAD7B;AAAA,cACqC2D,QADrC,GACsEH,KADtE,CACqCG,QADrC;AAAA,cAC+CY,kBAD/C,GACsEf,KADtE,CAC+Ce,kBAD/C;AAGV,eAAO;AACH,mBAAS,mBADN;AAEHD,UAAAA,KAAK,EAAE;AACH,qBAAS,aADN;AAEH5B,YAAAA,EAAE,EAAEe,IAAI,CAACf;AAFN,WAFJ;AAMH/C,UAAAA,SAAS,EAAEuD,sBAAsB,CAACvD,SAAD,CAN9B;AAOHwE,UAAAA,sBAAsB,EAAE,EAPrB;AAQHR,UAAAA,QARG;AASH5D,UAAAA,KATG;AAUHC,UAAAA,MAVG;AAWHuE,UAAAA,kBAXG;AAYHX,UAAAA,OAAO,EAAER,oBAAoB,CAACC,IAAD,CAZ1B;AAaHe,UAAAA,GAAG,EAAE;AAbF,SAAP;AAeH;;AACD,SAAK,WAAL;AAAkB;AAAA,cACCX,IADD,GACuCD,KADvC,CACNc,KADM;AAAA,cACO3E,SADP,GACuC6D,KADvC,CACO7D,SADP;AAAA,cACkBgE,QADlB,GACuCH,KADvC,CACkBG,QADlB;AAAA,cAC4BzB,MAD5B,GACuCsB,KADvC,CAC4BtB,MAD5B;AAGd,eAAO;AACH,mBAAS,uBADN;AAEHoC,UAAAA,KAAK,EAAE;AACH,qBAAS,aADN;AAEH5B,YAAAA,EAAE,EAAEe,IAAI,CAACf;AAFN,WAFJ;AAMH/C,UAAAA,SAAS,EAAEuD,sBAAsB,CAACvD,SAAD,CAN9B;AAOHgE,UAAAA,QAPG;AAQHzB,UAAAA,MARG;AASHkC,UAAAA,GAAG,EAAE;AATF,SAAP;AAWH;;AACD,SAAK,WAAL;AAAkB;AAAA,cACCX,IADD,GAC8BD,KAD9B,CACNgB,KADM;AAAA,cACOb,QADP,GAC8BH,KAD9B,CACOG,QADP;AAAA,cACiBc,QADjB,GAC8BjB,KAD9B,CACiBiB,QADjB;AAGd,eAAO;AACH,mBAAS,uBADN;AAEHC,UAAAA,UAAU,EAAE;AACR,qBAAS,aADD;AAERhC,YAAAA,EAAE,EAAEe,IAAI,CAACf;AAFD,WAFT;AAMHiB,UAAAA,QANG;AAOHc,UAAAA;AAPG,SAAP;AASH;AA/JL;;AAkKA,SAAO,IAAP;AACH","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) <= blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n"]},"metadata":{},"sourceType":"module"}