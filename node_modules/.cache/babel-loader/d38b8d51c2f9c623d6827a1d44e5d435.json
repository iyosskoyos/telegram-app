{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import{EventEmitter}from'events';import TdLibController from'../Controllers/TdLibController';var OptionStore=/*#__PURE__*/function(_EventEmitter){_inherits(OptionStore,_EventEmitter);function OptionStore(){var _this;_classCallCheck(this,OptionStore);_this=_possibleConstructorReturn(this,_getPrototypeOf(OptionStore).call(this));_this.reset=function(){_this.items=new Map();};_this.onUpdate=function(update){switch(update['@type']){case'updateAuthorizationState':{var authorization_state=update.authorization_state;if(!authorization_state)break;switch(authorization_state['@type']){case'authorizationStateClosed':{_this.reset();break;}}break;}case'updateOption':_this.items.set(update.name,update.value);_this.emit('updateOption',update);break;default:break;}};_this.onClientUpdate=function(update){};_this.addTdLibListener=function(){TdLibController.addListener('update',_this.onUpdate);TdLibController.addListener('clientUpdate',_this.onClientUpdate);};_this.removeTdLibListener=function(){TdLibController.removeListener('update',_this.onUpdate);TdLibController.removeListener('clientUpdate',_this.onClientUpdate);};_this.reset();_this.addTdLibListener();_this.setMaxListeners(Infinity);return _this;}_createClass(OptionStore,[{key:\"get\",value:function get(name){return this.items.get(name);}}]);return OptionStore;}(EventEmitter);var store=new OptionStore();window.option=store;export default store;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Stores/OptionStore.js"],"names":["EventEmitter","TdLibController","OptionStore","reset","items","Map","onUpdate","update","authorization_state","set","name","value","emit","onClientUpdate","addTdLibListener","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","get","store","window","option"],"mappings":"wkBAAA;;;;;GAOA,OAASA,YAAT,KAA6B,QAA7B,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,C,GAEMC,CAAAA,W,2EACF,sBAAc,6CACV,+EADU,MASdC,KATc,CASN,UAAM,CACV,MAAKC,KAAL,CAAa,GAAIC,CAAAA,GAAJ,EAAb,CACH,CAXa,OAadC,QAbc,CAaH,SAAAC,MAAM,CAAI,CACjB,OAAQA,MAAM,CAAC,OAAD,CAAd,EACI,IAAK,0BAAL,CAAiC,IACrBC,CAAAA,mBADqB,CACGD,MADH,CACrBC,mBADqB,CAE7B,GAAI,CAACA,mBAAL,CAA0B,MAE1B,OAAQA,mBAAmB,CAAC,OAAD,CAA3B,EACI,IAAK,0BAAL,CAAiC,CAC7B,MAAKL,KAAL,GACA,MACH,CAJL,CAOA,MACH,CACD,IAAK,cAAL,CACI,MAAKC,KAAL,CAAWK,GAAX,CAAeF,MAAM,CAACG,IAAtB,CAA4BH,MAAM,CAACI,KAAnC,EAEA,MAAKC,IAAL,CAAU,cAAV,CAA0BL,MAA1B,EACA,MACJ,QACI,MApBR,CAsBH,CApCa,OAsCdM,cAtCc,CAsCG,SAAAN,MAAM,CAAI,CAAE,CAtCf,OAwCdO,gBAxCc,CAwCK,UAAM,CACrBb,eAAe,CAACc,WAAhB,CAA4B,QAA5B,CAAsC,MAAKT,QAA3C,EACAL,eAAe,CAACc,WAAhB,CAA4B,cAA5B,CAA4C,MAAKF,cAAjD,EACH,CA3Ca,OA6CdG,mBA7Cc,CA6CQ,UAAM,CACxBf,eAAe,CAACgB,cAAhB,CAA+B,QAA/B,CAAyC,MAAKX,QAA9C,EACAL,eAAe,CAACgB,cAAhB,CAA+B,cAA/B,CAA+C,MAAKJ,cAApD,EACH,CAhDa,CAGV,MAAKV,KAAL,GAEA,MAAKW,gBAAL,GACA,MAAKI,eAAL,CAAqBC,QAArB,EANU,aAOb,C,wDA2CGT,I,CAAM,CACN,MAAO,MAAKN,KAAL,CAAWgB,GAAX,CAAeV,IAAf,CAAP,CACH,C,yBArDqBV,Y,EAwD1B,GAAMqB,CAAAA,KAAK,CAAG,GAAInB,CAAAA,WAAJ,EAAd,CACAoB,MAAM,CAACC,MAAP,CAAgBF,KAAhB,CACA,cAAeA,CAAAA,KAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OptionStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.items = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateOption':\n                this.items.set(update.name, update.value);\n\n                this.emit('updateOption', update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(name) {\n        return this.items.get(name);\n    }\n}\n\nconst store = new OptionStore();\nwindow.option = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}