{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import{compose}from'recompose';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import Divider from'@material-ui/core/Divider';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import Typography from'@material-ui/core/Typography';import CreatePollOption from'./CreatePollOption';import{focusNode}from'../../Utils/Component';import{withRestoreRef,withSaveRef}from'../../Utils/HOC';import{utils}from'../../Utils/Key';import{hasPollData,isValidPoll}from'../../Utils/Poll';import{POLL_OPTIONS_MAX_COUNT,POLL_QUESTION_HINT_LENGTH,POLL_QUESTION_LENGTH,POLL_QUESTION_MAX_LENGTH}from'../../Constants';import PollStore from'../../Stores/PollStore';import TdLibController from'../../Controllers/TdLibController';import'./CreatePollDialog.css';var styles=function styles(theme){return{dialogRoot:{color:theme.palette.text.primary},contentRoot:{width:300},dividerRoot:{margin:'8px -24px'},listRoot:{margin:'0 -24px'},listItem:{padding:'11px 24px',color:'#8e9396',height:48},typographyRoot:{}};};var CreatePollDialog=/*#__PURE__*/function(_React$Component){_inherits(CreatePollDialog,_React$Component);function CreatePollDialog(props){var _this;_classCallCheck(this,CreatePollDialog);_this=_possibleConstructorReturn(this,_getPrototypeOf(CreatePollDialog).call(this,props));_this.handleClientUpdateNewPoll=function(update){var poll=PollStore.poll;_this.setState({confirm:false,remainLength:POLL_QUESTION_MAX_LENGTH,poll:poll});};_this.handleClientUpdatePollQuestion=function(update){var poll=PollStore.poll;var node=_this.questionRef.current;var length=node.dataset.length;var innerText=node.innerText;_this.setState({remainLength:length-innerText.length,poll:poll});};_this.handleClientUpdatePoll=function(update){var poll=PollStore.poll;_this.setState({poll:poll});};_this.handleClientUpdateNewPollOption=function(update){var poll=PollStore.poll;_this.setState({poll:poll},function(){setTimeout(function(){var node=_this.optionsRefMap.get(poll.options.length-1);node.focus(true);});});};_this.handleKeyDown=function(event){var node=_this.questionRef.current;var maxLength=node.dataset.maxLength;var innerText=node.innerText;var length=innerText.length;var hasSelection=false;var selection=window.getSelection();var isSpecial=utils.isSpecial(event);var isNavigational=utils.isNavigational(event);if(selection){hasSelection=!!selection.toString();}switch(event.key){case'Enter':{if(!event.shiftKey){_this.handleFocusNextOption(0);event.preventDefault();return false;}break;}case'ArrowDown':{var _selection=window.getSelection();if(!_selection)break;if(!_selection.isCollapsed)break;var lastChild=node.childNodes&&node.childNodes.length>0?node.childNodes[node.childNodes.length-1]:null;if(!lastChild||_selection.anchorNode===lastChild&&_selection.anchorOffset===lastChild.length){_this.handleFocusNextOption(0);event.preventDefault();return false;}break;}}if(isSpecial||isNavigational){return true;}if(length>=maxLength&&!hasSelection){event.preventDefault();return false;}return true;};_this.handlePaste=function(event){event.preventDefault();var node=_this.questionRef.current;var maxLength=node.dataset.maxLength;var selection=window.getSelection();var selectionString=selection?selection.toString():'';var innerText=node.innerText;if(innerText.length-selection.length>=maxLength)return;var pasteText=event.clipboardData.getData('text/plain');if(!pasteText)return;if(innerText.length-selectionString.length+pasteText.length>maxLength){pasteText=pasteText.substr(0,maxLength-innerText.length+selectionString.length);}document.execCommand('insertHTML',false,pasteText);};_this.handleInput=function(event){event.preventDefault();var node=_this.questionRef.current;//const length = node.dataset.length;\nvar innerText=node.innerText;var innerHtml=node.innerHTML;if(innerHtml==='<br>'){node.innerText='';}// this.setState({\n//     remainLength: length - innerText.length\n// });\nTdLibController.clientUpdate({'@type':'clientUpdatePollQuestion',question:innerText});};_this.handleAddOption=function(){var poll=_this.state.poll;if(!poll)return;var options=poll.options;if(options.length>=POLL_OPTIONS_MAX_COUNT)return;var option={id:Date.now(),text:''};TdLibController.clientUpdate({'@type':'clientUpdateNewPollOption',option:option});};_this.handleDeleteOption=function(id){var backspace=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(backspace){_this.handleDeleteByBackspace(id);}else{_this.handleDelete(id);}};_this.handleDelete=function(id){TdLibController.clientUpdate({'@type':'clientUpdateDeletePollOption',id:id});};_this.handleDeleteByBackspace=function(id){var poll=_this.state.poll;if(!poll)return;var options=poll.options;var index=options.findIndex(function(x){return x.id===id;});var prevIndex=index-1;var deleteOption=true;for(var i=index;i<options.length;i++){var text=options[i].text;if(text){deleteOption=false;break;}}if(deleteOption){_this.handleDeleteOption(id);}var prevNode=_this.optionsRefMap.get(prevIndex);if(!prevNode){var element=_this.questionRef.current;focusNode(element,true);return;}prevNode.focus(true);};_this.handleFocusPrevOption=function(id){var poll=_this.state.poll;if(!poll)return;var options=poll.options;var index=options.findIndex(function(x){return x.id===id;});var prevIndex=index-1;var prevNode=_this.optionsRefMap.get(prevIndex);if(!prevNode){var element=_this.questionRef.current;focusNode(element,false);return;}prevNode.focus(false);};_this.handleFocusNextOption=function(id){var poll=_this.state.poll;if(!poll)return;var options=poll.options;var index=options.findIndex(function(x){return x.id===id;});var nextIndex=index+1;var nextNode=_this.optionsRefMap.get(nextIndex);if(!nextNode){var text=index>=0&&index<options.length?options[index].text:'';if(options.length&&!text){return;}_this.handleAddOption();return;}nextNode.focus(nextNode,true);};_this.getHint=function(){var poll=_this.state.poll;if(!poll)return;var options=poll.options;var addCount=POLL_OPTIONS_MAX_COUNT-options.length;if(addCount<=0){return'You have added the maximum number of options.';}if(addCount===1){return'You can add 1 more option.';}return\"You can add \".concat(POLL_OPTIONS_MAX_COUNT-options.length,\" more options.\");};_this.handleClose=function(){var poll=_this.state.poll;if(hasPollData(poll)){_this.setState({confirm:true});}else{_this.handleConfirmationDone();}};_this.handleSend=function(){var onSend=_this.props.onSend;var inputMessagePoll=PollStore.getInputMessagePoll();if(!inputMessagePoll)return;onSend(inputMessagePoll);_this.handleConfirmationDone();};_this.handleConfirmationClose=function(){_this.setState({confirm:false});};_this.handleConfirmationDone=function(){_this.handleConfirmationClose();TdLibController.clientUpdate({'@type':'clientUpdateDeletePoll'});};_this.questionRef=React.createRef();_this.optionsRefMap=new Map();_this.state={poll:null,confirm:false,remainLength:POLL_QUESTION_MAX_LENGTH};return _this;}_createClass(CreatePollDialog,[{key:\"componentDidMount\",value:function componentDidMount(){PollStore.on('clientUpdateDeletePoll',this.handleClientUpdatePoll);PollStore.on('clientUpdateDeletePollOption',this.handleClientUpdatePoll);PollStore.on('clientUpdateNewPoll',this.handleClientUpdateNewPoll);PollStore.on('clientUpdateNewPollOption',this.handleClientUpdateNewPollOption);PollStore.on('clientUpdatePollOption',this.handleClientUpdatePoll);PollStore.on('clientUpdatePollQuestion',this.handleClientUpdatePollQuestion);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){PollStore.removeListener('clientUpdateDeletePoll',this.handleClientUpdatePoll);PollStore.removeListener('clientUpdateDeletePollOption',this.handleClientUpdatePoll);PollStore.removeListener('clientUpdateNewPoll',this.handleClientUpdateNewPoll);PollStore.removeListener('clientUpdateNewPollOption',this.handleClientUpdateNewPollOption);PollStore.removeListener('clientUpdatePollOption',this.handleClientUpdatePoll);PollStore.removeListener('clientUpdatePollQuestion',this.handleClientUpdatePollQuestion);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){var _this2=this;var poll=this.state.poll;if(poll&&!prevState.poll){setTimeout(function(){focusNode(_this2.questionRef.current,true);},0);}}},{key:\"render\",value:function render(){var _this3=this;var _this$props=this.props,classes=_this$props.classes,t=_this$props.t;var _this$state=this.state,remainLength=_this$state.remainLength,confirm=_this$state.confirm,poll=_this$state.poll;if(!poll)return null;var options=poll?poll.options:[];this.optionsRefMap.clear();var items=options.map(function(x,i){return React.createElement(CreatePollOption,{ref:function ref(el){return _this3.optionsRefMap.set(i,el);},key:x.id,option:x,onDelete:_this3.handleDeleteOption,onFocusPrev:_this3.handleFocusPrevOption,onFocusNext:_this3.handleFocusNextOption});});var canAddOption=POLL_OPTIONS_MAX_COUNT-options.length>0;var hint=this.getHint();return React.createElement(React.Fragment,null,React.createElement(Dialog,{className:classes.dialogRoot,open:true,transitionDuration:0,onClose:this.handleClose,\"aria-labelledby\":\"dialog-title\"},React.createElement(DialogTitle,{id:\"dialog-title\"},t('NewPoll')),React.createElement(DialogContent,{classes:{root:classes.contentRoot}},React.createElement(\"div\",{className:\"create-poll-dialog-question-title\"},React.createElement(Typography,{color:\"primary\",variant:\"subtitle1\",style:{flexGrow:1}},t('Question')),remainLength<=POLL_QUESTION_LENGTH-POLL_QUESTION_HINT_LENGTH&&React.createElement(Typography,{color:remainLength>=0?'textSecondary':'error',variant:\"subtitle1\"},remainLength)),React.createElement(\"div\",{ref:this.questionRef,id:\"create-poll-dialog-question\",contentEditable:true,suppressContentEditableWarning:true,placeholder:t('QuestionHint'),\"data-length\":POLL_QUESTION_LENGTH,\"data-max-length\":POLL_QUESTION_MAX_LENGTH,onPaste:this.handlePaste,onKeyDown:this.handleKeyDown,onInput:this.handleInput}),React.createElement(Divider,{className:classes.dividerRoot}),React.createElement(Typography,{color:\"primary\",variant:\"subtitle1\"},t('PollOptions')),React.createElement(List,{classes:{root:classes.listRoot}},items,canAddOption&&React.createElement(ListItem,{selected:false,className:classes.listItem,button:true,onClick:this.handleAddOption},React.createElement(ListItemText,{disableTypography:true,primary:t('AddAnOption')}))),React.createElement(Typography,null,hint)),React.createElement(DialogActions,null,React.createElement(Button,{color:\"primary\",onClick:this.handleClose},t('Cancel')),isValidPoll(poll)&&React.createElement(Button,{color:\"primary\",onClick:this.handleSend},t('Send')))),React.createElement(Dialog,{className:classes.dialogRoot,open:confirm,transitionDuration:0,onClose:this.handleConfirmationClose,\"aria-labelledby\":\"dialog-title\"},React.createElement(DialogTitle,{id:\"dialog-title\"},t('CancelPollAlertTitle')),React.createElement(DialogContent,{classes:{root:classes.contentRoot}},t('CancelPollAlertText')),React.createElement(DialogActions,null,React.createElement(Button,{color:\"primary\",onClick:this.handleConfirmationClose},t('Cancel')),React.createElement(Button,{color:\"primary\",onClick:this.handleConfirmationDone},t('Ok')))));}}]);return CreatePollDialog;}(React.Component);var enhance=compose(withSaveRef(),withStyles(styles),withTranslation(),withRestoreRef());export default enhance(CreatePollDialog);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Popup/CreatePollDialog.js"],"names":["React","compose","withStyles","withTranslation","Button","Dialog","DialogActions","DialogContent","DialogTitle","Divider","List","ListItem","ListItemText","Typography","CreatePollOption","focusNode","withRestoreRef","withSaveRef","utils","hasPollData","isValidPoll","POLL_OPTIONS_MAX_COUNT","POLL_QUESTION_HINT_LENGTH","POLL_QUESTION_LENGTH","POLL_QUESTION_MAX_LENGTH","PollStore","TdLibController","styles","theme","dialogRoot","color","palette","text","primary","contentRoot","width","dividerRoot","margin","listRoot","listItem","padding","height","typographyRoot","CreatePollDialog","props","handleClientUpdateNewPoll","update","poll","setState","confirm","remainLength","handleClientUpdatePollQuestion","node","questionRef","current","length","dataset","innerText","handleClientUpdatePoll","handleClientUpdateNewPollOption","setTimeout","optionsRefMap","get","options","focus","handleKeyDown","event","maxLength","hasSelection","selection","window","getSelection","isSpecial","isNavigational","toString","key","shiftKey","handleFocusNextOption","preventDefault","isCollapsed","lastChild","childNodes","anchorNode","anchorOffset","handlePaste","selectionString","pasteText","clipboardData","getData","substr","document","execCommand","handleInput","innerHtml","innerHTML","clientUpdate","question","handleAddOption","state","option","id","Date","now","handleDeleteOption","backspace","handleDeleteByBackspace","handleDelete","index","findIndex","x","prevIndex","deleteOption","i","prevNode","element","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","handleClose","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","createRef","Map","on","removeListener","prevProps","prevState","snapshot","classes","t","clear","items","map","el","set","canAddOption","hint","root","flexGrow","Component","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n"]},"metadata":{},"sourceType":"module"}