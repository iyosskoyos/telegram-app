{"ast":null,"code":"import _defineProperty from \"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/SharedMedia/SharedLink.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { accentStyles } from '../../Theme';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nconst styles = theme => _objectSpread({}, accentStyles(theme));\n\nclass SharedLink extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpenMessage = event => {\n      this.handleCloseContextMenu(event);\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            messageId = _this$props.messageId;\n      openChat(chatId, messageId);\n    };\n\n    this.handleForward = event => {\n      this.handleCloseContextMenu(event);\n      const _this$props2 = this.props,\n            chatId = _this$props2.chatId,\n            messageId = _this$props2.messageId;\n      forwardMessages(chatId, [messageId]);\n    };\n\n    this.handleDelete = event => {\n      this.handleCloseContextMenu(event);\n      const _this$props3 = this.props,\n            chatId = _this$props3.chatId,\n            messageId = _this$props3.messageId;\n      const message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      const can_be_deleted_for_all_users = message.can_be_deleted_for_all_users;\n      this.setState({\n        openDeleteDialog: true,\n        canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n        revoke: can_be_deleted_for_all_users\n      });\n    };\n\n    this.handleContextMenu = async event => {\n      if (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      const contextMenu = this.state.contextMenu;\n\n      if (contextMenu) {\n        this.setState({\n          contextMenu: false\n        });\n      } else {\n        const left = event.clientX;\n        const top = event.clientY;\n        this.setState({\n          contextMenu: true,\n          left,\n          top\n        });\n      }\n    };\n\n    this.handleCloseContextMenu = event => {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.setState({\n        contextMenu: false\n      });\n    };\n\n    this.handleRevokeChange = () => {\n      this.setState({\n        revoke: !this.state.revoke\n      });\n    };\n\n    this.handleCloseDelete = () => {\n      this.setState({\n        openDeleteDialog: false\n      });\n    };\n\n    this.handleDeleteContinue = () => {\n      const _this$props4 = this.props,\n            chatId = _this$props4.chatId,\n            messageId = _this$props4.messageId;\n      const revoke = this.state.revoke;\n      this.handleCloseDelete();\n      TdLibController.send({\n        '@type': 'deleteMessages',\n        chat_id: chatId,\n        message_ids: [messageId],\n        revoke: revoke\n      });\n    };\n\n    this.state = {\n      contextMenu: false,\n      left: 0,\n      top: 0,\n      openDeleteDialog: false,\n      revoke: false\n    };\n  }\n\n  isValidEntityType(type) {\n    if (!type) return false;\n    return type.type['@type'] === 'textEntityTypeUrl' || type.type['@type'] === 'textEntityTypeTextUrl' || type.type['@type'] === 'textEntityTypeEmailAddress';\n  }\n\n  getTitleFromUrl(url) {\n    try {\n      url = url.startsWith('http') ? url : 'http://' + url;\n      const decodedUrl = decodeURI(url);\n      const hostname = new URL(decodedUrl).hostname.split('.');\n      const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n      console.log('getTitleFromUrl', punycode);\n      return punycode.ToUnicode(domain);\n    } catch (error) {\n      console.error('url: ' + url + '\\n' + error);\n    }\n\n    return null;\n  }\n\n  render() {\n    const _this$props5 = this.props,\n          chatId = _this$props5.chatId,\n          classes = _this$props5.classes,\n          messageId = _this$props5.messageId,\n          webPage = _this$props5.webPage,\n          showOpenMessage = _this$props5.showOpenMessage,\n          t = _this$props5.t;\n    const _this$state = this.state,\n          contextMenu = _this$state.contextMenu,\n          left = _this$state.left,\n          top = _this$state.top,\n          openDeleteDialog = _this$state.openDeleteDialog,\n          revoke = _this$state.revoke;\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n    const can_be_forwarded = message.can_be_forwarded,\n          can_be_deleted_only_for_self = message.can_be_deleted_only_for_self,\n          can_be_deleted_for_all_users = message.can_be_deleted_for_all_users;\n    const count = 1;\n    let content = null;\n\n    let _ref = webPage || {\n      title: '',\n      description: '',\n      photo: null,\n      url: ''\n    },\n        display_url = _ref.display_url,\n        description = _ref.description,\n        photo = _ref.photo,\n        title = _ref.title,\n        url = _ref.url;\n\n    if (webPage) {\n      title = title || this.getTitleFromUrl(url);\n      content = React.createElement(SafeLink, {\n        className: \"shared-link-url\",\n        url: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, display_url);\n    } else {\n      const text = message.content.text;\n\n      if (text) {\n        const entities = text.entities;\n\n        if (entities && entities.length > 0) {\n          content = entities.filter(this.isValidEntityType).map(x => {\n            const entityText = substring(text.text, x.offset, x.offset + x.length);\n            let url = entityText;\n            let mail = false;\n\n            switch (x.type['@type']) {\n              case 'textEntityTypeTextUrl':\n                {\n                  const typeUrl = x.type.url;\n\n                  if (typeUrl) {\n                    url = typeUrl;\n                  }\n\n                  break;\n                }\n\n              case 'textEntityTypeUrl':\n                {\n                  break;\n                }\n\n              case 'textEntityTypeEmailAddress':\n                mail = true;\n                break;\n            }\n\n            title = title || this.getTitleFromUrl(url);\n            return React.createElement(SafeLink, {\n              className: \"shared-link-url\",\n              url: url,\n              mail: mail,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 219\n              },\n              __self: this\n            }, entityText);\n          });\n        }\n      }\n    }\n\n    const tileColor = \"tile_color_\".concat(Math.abs(title.charCodeAt(0)) % 8 + 1);\n    return React.createElement(\"div\", {\n      className: \"shared-link\",\n      onContextMenu: this.handleContextMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('shared-link-photo', tileColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, title.charAt(0), photo && React.createElement(Photo, {\n      displaySize: 90,\n      chatId: chatId,\n      messageId: messageId,\n      photo: photo,\n      openMedia: openMedia,\n      showProgress: false,\n      style: {\n        width: 48,\n        height: 48,\n        position: 'absolute',\n        top: 0,\n        left: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"shared-link-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, title && React.createElement(\"div\", {\n      className: \"web-page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, title), description && React.createElement(\"div\", {\n      className: \"web-page-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, description), content), React.createElement(Popover, {\n      open: contextMenu,\n      onClose: this.handleCloseContextMenu,\n      anchorReference: \"anchorPosition\",\n      anchorPosition: {\n        top,\n        left\n      },\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      onMouseDown: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      classes: {\n        root: classes.menuListRoot\n      },\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, showOpenMessage && React.createElement(MenuItem, {\n      onClick: this.handleOpenMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, t('GoToMessage')), can_be_forwarded && React.createElement(MenuItem, {\n      onClick: this.handleForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, t('Forward')), (can_be_deleted_only_for_self || can_be_deleted_for_all_users) && React.createElement(MenuItem, {\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, t('Delete')))), React.createElement(Dialog, {\n      transitionDuration: 0,\n      open: openDeleteDialog,\n      onClose: this.handleCloseDelete,\n      \"aria-labelledby\": \"delete-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"delete-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Confirm\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, count === 1 ? 'Are you sure you want to delete 1 message?' : \"Are you sure you want to delete \".concat(count, \" messages?\")), can_be_deleted_for_all_users && React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: revoke,\n        onChange: this.handleRevokeChange,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }),\n      label: isPrivateChat(chatId) ? \"Delete for \".concat(getChatShortTitle(chatId)) : 'Delete for all',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseDelete,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleDeleteContinue,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Ok\"))));\n  }\n\n}\n\nSharedLink.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  webPage: PropTypes.object,\n  openMedia: PropTypes.func\n};\nconst enhance = compose(withStyles(styles, {\n  withTheme: true\n}), withTranslation());\nexport default enhance(SharedLink);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/SharedMedia/SharedLink.js"],"names":["React","PropTypes","classNames","compose","withStyles","withTranslation","Button","Checkbox","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControlLabel","MenuItem","MenuList","Popover","Photo","SafeLink","accentStyles","openMedia","substring","getChatShortTitle","isPrivateChat","forwardMessages","openChat","punycode","MessageStore","TdLibController","styles","theme","SharedLink","Component","constructor","props","handleOpenMessage","event","handleCloseContextMenu","chatId","messageId","handleForward","handleDelete","message","get","can_be_deleted_for_all_users","setState","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","preventDefault","stopPropagation","contextMenu","state","left","clientX","top","clientY","handleRevokeChange","handleCloseDelete","handleDeleteContinue","send","chat_id","message_ids","isValidEntityType","type","getTitleFromUrl","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","length","console","log","ToUnicode","error","render","classes","webPage","showOpenMessage","t","can_be_forwarded","can_be_deleted_only_for_self","count","content","title","description","photo","display_url","text","entities","filter","map","x","entityText","offset","mail","typeUrl","tileColor","Math","abs","charCodeAt","charAt","width","height","position","vertical","horizontal","e","root","menuListRoot","propTypes","number","isRequired","object","func","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { accentStyles } from '../../Theme';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            console.log('getTitleFromUrl', punycode);\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, classes, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url);\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedLink);\n"]},"metadata":{},"sourceType":"module"}