{"ast":null,"code":"import _defineProperty from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React,{Component}from'react';import classNames from'classnames';import{getUserLetters}from'../../Utils/User';import{getSrc,loadChatContent}from'../../Utils/File';import UserStore from'../../Stores/UserStore';import ChatStore from'../../Stores/ChatStore';import FileStore from'../../Stores/FileStore';import'./UserTile.css';var UserTile=/*#__PURE__*/function(_Component){_inherits(UserTile,_Component);function UserTile(props){var _this;_classCallCheck(this,UserTile);_this=_possibleConstructorReturn(this,_getPrototypeOf(UserTile).call(this,props));_this.onClientUpdateUserBlob=function(update){var userId=_this.props.userId;if(userId!==update.userId)return;if(_this.state.loaded){_this.setState({loaded:false});}else{_this.forceUpdate();}};_this.onClientUpdateChatBlob=function(update){var userId=_this.props.userId;var chatId=update.chatId;var chat=ChatStore.get(chatId);if(!chat)return;if(!chat.type)return;switch(chat.type['@type']){case'chatTypeBasicGroup':case'chatTypeSupergroup':{return;}case'chatTypePrivate':case'chatTypeSecret':{if(chat.type.user_id!==userId)return;if(_this.state.loaded){_this.setState({loaded:false});}else{_this.forceUpdate();}}}};_this.onUpdateChatPhoto=function(update){var userId=_this.props.userId;var chat_id=update.chat_id,photo=update.photo;var chat=ChatStore.get(chat_id);if(!chat)return;if(!chat.type)return;switch(chat.type['@type']){case'chatTypeBasicGroup':case'chatTypeSupergroup':{return;}case'chatTypePrivate':case'chatTypeSecret':{if(chat.type.user_id!==userId)return;if(_this.state.loaded){_this.setState({loaded:false});}else{_this.forceUpdate();}if(photo){var store=FileStore.getStore();loadChatContent(store,chat);}}}};_this.onUpdateChatTitle=function(update){var userId=_this.props.userId;var chat=ChatStore.get(update.chat_id);if(!chat)return;if(!chat.type)return;switch(chat.type['@type']){case'chatTypeBasicGroup':case'chatTypeSupergroup':{return;}case'chatTypePrivate':case'chatTypeSecret':{if(chat.type.user_id!==userId&&!chat.photo)return;_this.forceUpdate();}}};_this.handleSelect=function(event){var _this$props=_this.props,userId=_this$props.userId,onSelect=_this$props.onSelect;if(!onSelect)return;event.stopPropagation();onSelect(userId);};_this.handleLoad=function(){_this.setState({loaded:true});};if(process.env.NODE_ENV!=='production'){_this.state={user:UserStore.get(_this.props.userId),loaded:false};}else{_this.state={loaded:false};}return _this;}_createClass(UserTile,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextProps.userId!==this.props.userId){return true;}if(nextState.loaded!==this.state.loaded){return true;}return false;}},{key:\"componentDidMount\",value:function componentDidMount(){FileStore.on('clientUpdateUserBlob',this.onClientUpdateUserBlob);FileStore.on('clientUpdateChatBlob',this.onClientUpdateChatBlob);ChatStore.on('updateChatPhoto',this.onUpdateChatPhoto);ChatStore.on('updateChatTitle',this.onUpdateChatTitle);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){FileStore.removeListener('clientUpdateUserBlob',this.onClientUpdateUserBlob);FileStore.removeListener('clientUpdateChatBlob',this.onClientUpdateChatBlob);ChatStore.removeListener('updateChatPhoto',this.onUpdateChatPhoto);ChatStore.removeListener('updateChatTitle',this.onUpdateChatTitle);}},{key:\"render\",value:function render(){var _this$props2=this.props,userId=_this$props2.userId,fistName=_this$props2.fistName,lastName=_this$props2.lastName,onSelect=_this$props2.onSelect;var loaded=this.state.loaded;var user=UserStore.get(userId);if(!user&&!(fistName||lastName))return null;var letters=getUserLetters(userId,fistName,lastName);var src=getSrc(user&&user.profile_photo?user.profile_photo.small:null);var tileLoaded=src&&loaded;var tileColor=\"tile_color_\".concat(Math.abs(userId)%8+1);var className=classNames('tile-photo',_defineProperty({},tileColor,!tileLoaded),{pointer:onSelect});return React.createElement(\"div\",{className:\"user-tile\",onClick:this.handleSelect},!tileLoaded&&React.createElement(\"div\",{className:className},React.createElement(\"span\",{className:\"tile-text\"},letters)),src&&React.createElement(\"img\",{className:className,src:src,onLoad:this.handleLoad,draggable:false,alt:\"\"}));}}]);return UserTile;}(Component);export default UserTile;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/UserTile.js"],"names":["React","Component","classNames","getUserLetters","getSrc","loadChatContent","UserStore","ChatStore","FileStore","UserTile","props","onClientUpdateUserBlob","update","userId","state","loaded","setState","forceUpdate","onClientUpdateChatBlob","chatId","chat","get","type","user_id","onUpdateChatPhoto","chat_id","photo","store","getStore","onUpdateChatTitle","handleSelect","event","onSelect","stopPropagation","handleLoad","process","env","NODE_ENV","user","nextProps","nextState","on","removeListener","fistName","lastName","letters","src","profile_photo","small","tileLoaded","tileColor","Math","abs","className","pointer"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { userId, fistName, lastName, onSelect } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        const letters = getUserLetters(userId, fistName, lastName);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !tileLoaded }, { pointer: onSelect });\n\n        return (\n            <div className='user-tile' onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className={className} src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func\n};\n\nexport default UserTile;\n"]},"metadata":{},"sourceType":"module"}