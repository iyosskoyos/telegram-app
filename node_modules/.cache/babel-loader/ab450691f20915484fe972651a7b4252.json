{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/ColumnMiddle/AttachButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nconst styles = {\n  iconButton: {\n    margin: '8px 0'\n  }\n};\n\nclass AttachButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleMenuClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleMenuClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleAttachPhoto = () => {\n      this.handleMenuClose();\n      const onAttachPhoto = this.props.onAttachPhoto;\n      if (!onAttachPhoto) return;\n      setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    this.handleAttachDocument = () => {\n      this.handleMenuClose();\n      const onAttachDocument = this.props.onAttachDocument;\n      if (!onAttachDocument) return;\n      setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    this.handleAttachPoll = () => {\n      this.handleMenuClose();\n      const onAttachPoll = this.props.onAttachPoll;\n      if (!onAttachPoll) return;\n      onAttachPoll();\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          t = _this$props.t,\n          chatId = _this$props.chatId;\n    const anchorEl = this.state.anchorEl;\n    return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"Attach\",\n      open: Boolean(anchorEl),\n      onClick: this.handleMenuClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(AttachFileIcon, {\n      className: \"inputbox-attach-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Menu, {\n      id: \"attach-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      getContentAnchorEl: null,\n      disableAutoFocusItem: true,\n      disableRestoreFocus: true,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      onClose: this.handleMenuClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: this.handleAttachPhoto,\n      disabled: !canSendPhotos(chatId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(PhotoIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: t('AttachPhoto'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      onClick: this.handleAttachDocument,\n      disabled: !canSendDocuments(chatId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(InsertDriveFileIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: t('AttachDocument'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), !isPrivateChat(chatId) && React.createElement(MenuItem, {\n      onClick: this.handleAttachPoll,\n      disabled: !canSendPolls(chatId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(PollIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: t('Poll'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nAttachButton.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  onAttachDocument: PropTypes.func.isRequired,\n  onAttachPhoto: PropTypes.func.isRequired,\n  onAttachPoll: PropTypes.func.isRequired\n};\nconst enhance = compose(withStyles(styles, {\n  withTheme: true\n}), withTranslation());\nexport default enhance(AttachButton);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/ColumnMiddle/AttachButton.js"],"names":["React","PropTypes","compose","withTranslation","withStyles","AttachFileIcon","IconButton","InsertDriveFileIcon","ListItemIcon","ListItemText","Menu","MenuItem","PhotoIcon","PollIcon","canSendDocuments","canSendPhotos","canSendPolls","isPrivateChat","ANIMATION_DURATION_300MS","styles","iconButton","margin","AttachButton","Component","state","anchorEl","handleMenuClick","event","setState","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","props","setTimeout","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","render","classes","t","chatId","Boolean","vertical","horizontal","propTypes","number","isRequired","func","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n"]},"metadata":{},"sourceType":"module"}