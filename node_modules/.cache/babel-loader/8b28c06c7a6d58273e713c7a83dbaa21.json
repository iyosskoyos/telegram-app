{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import{isContentOpened}from'../../../Utils/Message';import MessageStore from'../../../Stores/MessageStore';var MediaStatus=/*#__PURE__*/function(_React$Component){_inherits(MediaStatus,_React$Component);function MediaStatus(props){var _this;_classCallCheck(this,MediaStatus);_this=_possibleConstructorReturn(this,_getPrototypeOf(MediaStatus).call(this,props));_this.onUpdateMessageContentOpened=function(update){var _this$props=_this.props,chatId=_this$props.chatId,messageId=_this$props.messageId;if(chatId===update.chat_id&&messageId===update.message_id){_this.setState({isOpened:isContentOpened(chatId,messageId)});}};var _this$props2=_this.props,_chatId=_this$props2.chatId,_messageId=_this$props2.messageId;_this.state={isOpened:isContentOpened(_chatId,_messageId)};return _this;}_createClass(MediaStatus,[{key:\"componentDidMount\",value:function componentDidMount(){MessageStore.on('updateMessageContentOpened',this.onUpdateMessageContentOpened);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){MessageStore.removeListener('updateMessageContentOpened',this.onUpdateMessageContentOpened);}},{key:\"render\",value:function render(){var _this$props3=this.props,icon=_this$props3.icon,openedIcon=_this$props3.openedIcon;var isOpened=this.state.isOpened;return isOpened?openedIcon:icon;}}]);return MediaStatus;}(React.Component);MediaStatus.defaultProps={icon:null,openedIcon:null};export default MediaStatus;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Message/Media/MediaStatus.js"],"names":["React","isContentOpened","MessageStore","MediaStatus","props","onUpdateMessageContentOpened","update","chatId","messageId","chat_id","message_id","setState","isOpened","state","on","removeListener","icon","openedIcon","Component","defaultProps"],"mappings":"wkBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,eAAT,KAAgC,wBAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,C,GAEMC,CAAAA,W,iFACF,qBAAYC,KAAZ,CAAmB,6CACf,6EAAMA,KAAN,GADe,MAkBnBC,4BAlBmB,CAkBY,SAAAC,MAAM,CAAI,iBACP,MAAKF,KADE,CAC7BG,MAD6B,aAC7BA,MAD6B,CACrBC,SADqB,aACrBA,SADqB,CAGrC,GAAID,MAAM,GAAKD,MAAM,CAACG,OAAlB,EAA6BD,SAAS,GAAKF,MAAM,CAACI,UAAtD,CAAkE,CAC9D,MAAKC,QAAL,CAAc,CAAEC,QAAQ,CAAEX,eAAe,CAACM,MAAD,CAASC,SAAT,CAA3B,CAAd,EACH,CACJ,CAxBkB,kBAGe,MAAKJ,KAHpB,CAGPG,OAHO,cAGPA,MAHO,CAGCC,UAHD,cAGCA,SAHD,CAKf,MAAKK,KAAL,CAAa,CACTD,QAAQ,CAAEX,eAAe,CAACM,OAAD,CAASC,UAAT,CADhB,CAAb,CALe,aAQlB,C,qFAEmB,CAChBN,YAAY,CAACY,EAAb,CAAgB,4BAAhB,CAA8C,KAAKT,4BAAnD,EACH,C,mEAEsB,CACnBH,YAAY,CAACa,cAAb,CAA4B,4BAA5B,CAA0D,KAAKV,4BAA/D,EACH,C,uCAUQ,kBACwB,KAAKD,KAD7B,CACGY,IADH,cACGA,IADH,CACSC,UADT,cACSA,UADT,IAEGL,CAAAA,QAFH,CAEgB,KAAKC,KAFrB,CAEGD,QAFH,CAIL,MAAOA,CAAAA,QAAQ,CAAGK,UAAH,CAAgBD,IAA/B,CACH,C,yBAhCqBhB,KAAK,CAACkB,S,EA0ChCf,WAAW,CAACgB,YAAZ,CAA2B,CACvBH,IAAI,CAAE,IADiB,CAEvBC,UAAU,CAAE,IAFW,CAA3B,CAKA,cAAed,CAAAA,WAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n"]},"metadata":{},"sourceType":"module"}