{"ast":null,"code":"import _regeneratorRuntime from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import TdLibController from'../Controllers/TdLibController';import ChatStore from'../Stores/ChatStore';import{isChatMuted}from'../Utils/Chat';import{MUTED_VALUE_MAX,MUTED_VALUE_MIN}from'../Constants';export function toggleChatIsPinned(chatId,isPinned){TdLibController.send({'@type':'toggleChatIsPinned',chat_id:chatId,is_pinned:isPinned});}export function toggleChatIsMarkedAsUnread(chatId,isMarkedAsUnread){TdLibController.send({'@type':'toggleChatIsMarkedAsUnread',chat_id:chatId,is_marked_as_unread:isMarkedAsUnread});}export function toggleChatNotificationSettings(chatId,isMuted){var chat=ChatStore.get(chatId);if(!chat)return;var notification_settings=chat.notification_settings;if(!notification_settings)return;var isMutedPrev=isChatMuted(chatId);if(isMutedPrev===isMuted){return;}var muteFor=isMuted?MUTED_VALUE_MAX:MUTED_VALUE_MIN;var newNotificationSettings=_objectSpread({},chat.notification_settings,{use_default_mute_for:false,mute_for:muteFor});TdLibController.send({'@type':'setChatNotificationSettings',chat_id:chatId,notification_settings:newNotificationSettings});}export function getChatCounters(_x){return _getChatCounters.apply(this,arguments);}function _getChatCounters(){_getChatCounters=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(chatId){var chat,promises,photoCounter,videoCounter,documentCounter,audioCounter,urlCounter,voiceAndVideoNoteCounter;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:chat=ChatStore.get(chatId);if(chat){_context.next=3;break;}return _context.abrupt(\"return\");case 3:promises=[];photoCounter=TdLibController.send({'@type':'getChatMessageCount',chat_id:chatId,filter:{'@type':'searchMessagesFilterPhoto'},return_local:false}).then(function(result){return result?result.count:0;}).catch(function(){return 0;});promises.push(photoCounter);videoCounter=TdLibController.send({'@type':'getChatMessageCount',chat_id:chatId,filter:{'@type':'searchMessagesFilterVideo'},return_local:false}).then(function(result){return result?result.count:0;}).catch(function(){return 0;});promises.push(videoCounter);documentCounter=TdLibController.send({'@type':'getChatMessageCount',chat_id:chatId,filter:{'@type':'searchMessagesFilterDocument'},return_local:false}).then(function(result){return result?result.count:0;}).catch(function(){return 0;});promises.push(documentCounter);audioCounter=TdLibController.send({'@type':'getChatMessageCount',chat_id:chatId,filter:{'@type':'searchMessagesFilterAudio'},return_local:false}).then(function(result){return result?result.count:0;}).catch(function(){return 0;});promises.push(audioCounter);urlCounter=TdLibController.send({'@type':'getChatMessageCount',chat_id:chatId,filter:{'@type':'searchMessagesFilterUrl'},return_local:false}).then(function(result){return result?result.count:0;}).catch(function(){return 0;});promises.push(urlCounter);voiceAndVideoNoteCounter=TdLibController.send({'@type':'getChatMessageCount',chat_id:chatId,filter:{'@type':'searchMessagesFilterVoiceNote'},return_local:false}).then(function(result){return result?result.count:0;}).catch(function(){return 0;});promises.push(voiceAndVideoNoteCounter);_context.next=18;return Promise.all(promises);case 18:return _context.abrupt(\"return\",_context.sent);case 19:case\"end\":return _context.stop();}}},_callee);}));return _getChatCounters.apply(this,arguments);}","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Actions/Chat.js"],"names":["TdLibController","ChatStore","isChatMuted","MUTED_VALUE_MAX","MUTED_VALUE_MIN","toggleChatIsPinned","chatId","isPinned","send","chat_id","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","is_marked_as_unread","toggleChatNotificationSettings","isMuted","chat","get","notification_settings","isMutedPrev","muteFor","newNotificationSettings","use_default_mute_for","mute_for","getChatCounters","promises","photoCounter","filter","return_local","then","result","count","catch","push","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Promise","all"],"mappings":"imCAAA;;;;;GAMA,MAAOA,CAAAA,eAAP,KAA4B,gCAA5B,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,eAAT,CAA0BC,eAA1B,KAAiD,cAAjD,CAEA,MAAO,SAASC,CAAAA,kBAAT,CAA4BC,MAA5B,CAAoCC,QAApC,CAA8C,CACjDP,eAAe,CAACQ,IAAhB,CAAqB,CACjB,QAAS,oBADQ,CAEjBC,OAAO,CAAEH,MAFQ,CAGjBI,SAAS,CAAEH,QAHM,CAArB,EAKH,CAED,MAAO,SAASI,CAAAA,0BAAT,CAAoCL,MAApC,CAA4CM,gBAA5C,CAA8D,CACjEZ,eAAe,CAACQ,IAAhB,CAAqB,CACjB,QAAS,4BADQ,CAEjBC,OAAO,CAAEH,MAFQ,CAGjBO,mBAAmB,CAAED,gBAHJ,CAArB,EAKH,CAED,MAAO,SAASE,CAAAA,8BAAT,CAAwCR,MAAxC,CAAgDS,OAAhD,CAAyD,CAC5D,GAAMC,CAAAA,IAAI,CAAGf,SAAS,CAACgB,GAAV,CAAcX,MAAd,CAAb,CACA,GAAI,CAACU,IAAL,CAAW,OAFiD,GAIpDE,CAAAA,qBAJoD,CAI1BF,IAJ0B,CAIpDE,qBAJoD,CAK5D,GAAI,CAACA,qBAAL,CAA4B,OAE5B,GAAMC,CAAAA,WAAW,CAAGjB,WAAW,CAACI,MAAD,CAA/B,CACA,GAAIa,WAAW,GAAKJ,OAApB,CAA6B,CACzB,OACH,CAED,GAAMK,CAAAA,OAAO,CAAGL,OAAO,CAAGZ,eAAH,CAAqBC,eAA5C,CACA,GAAMiB,CAAAA,uBAAuB,kBACtBL,IAAI,CAACE,qBADiB,EAEzBI,oBAAoB,CAAE,KAFG,CAGzBC,QAAQ,CAAEH,OAHe,EAA7B,CAMApB,eAAe,CAACQ,IAAhB,CAAqB,CACjB,QAAS,6BADQ,CAEjBC,OAAO,CAAEH,MAFQ,CAGjBY,qBAAqB,CAAEG,uBAHN,CAArB,EAKH,CAED,eAAsBG,CAAAA,eAAtB,oD,qGAAO,iBAA+BlB,MAA/B,+NACGU,IADH,CACUf,SAAS,CAACgB,GAAV,CAAcX,MAAd,CADV,IAEEU,IAFF,iEAIGS,QAJH,CAIc,EAJd,CAMGC,YANH,CAMkB1B,eAAe,CAACQ,IAAhB,CAAqB,CACtC,QAAS,qBAD6B,CAEtCC,OAAO,CAAEH,MAF6B,CAGtCqB,MAAM,CAAE,CAAE,QAAS,2BAAX,CAH8B,CAItCC,YAAY,CAAE,KAJwB,CAArB,EAMhBC,IANgB,CAMX,SAAAC,MAAM,CAAI,CACZ,MAAOA,CAAAA,MAAM,CAAGA,MAAM,CAACC,KAAV,CAAkB,CAA/B,CACH,CARgB,EAShBC,KATgB,CASV,UAAM,CACT,MAAO,EAAP,CACH,CAXgB,CANlB,CAkBHP,QAAQ,CAACQ,IAAT,CAAcP,YAAd,EAEMQ,YApBH,CAoBkBlC,eAAe,CAACQ,IAAhB,CAAqB,CACtC,QAAS,qBAD6B,CAEtCC,OAAO,CAAEH,MAF6B,CAGtCqB,MAAM,CAAE,CAAE,QAAS,2BAAX,CAH8B,CAItCC,YAAY,CAAE,KAJwB,CAArB,EAMhBC,IANgB,CAMX,SAAAC,MAAM,CAAI,CACZ,MAAOA,CAAAA,MAAM,CAAGA,MAAM,CAACC,KAAV,CAAkB,CAA/B,CACH,CARgB,EAShBC,KATgB,CASV,UAAM,CACT,MAAO,EAAP,CACH,CAXgB,CApBlB,CAgCHP,QAAQ,CAACQ,IAAT,CAAcC,YAAd,EAEMC,eAlCH,CAkCqBnC,eAAe,CAACQ,IAAhB,CAAqB,CACzC,QAAS,qBADgC,CAEzCC,OAAO,CAAEH,MAFgC,CAGzCqB,MAAM,CAAE,CAAE,QAAS,8BAAX,CAHiC,CAIzCC,YAAY,CAAE,KAJ2B,CAArB,EAMnBC,IANmB,CAMd,SAAAC,MAAM,CAAI,CACZ,MAAOA,CAAAA,MAAM,CAAGA,MAAM,CAACC,KAAV,CAAkB,CAA/B,CACH,CARmB,EASnBC,KATmB,CASb,UAAM,CACT,MAAO,EAAP,CACH,CAXmB,CAlCrB,CA8CHP,QAAQ,CAACQ,IAAT,CAAcE,eAAd,EAEMC,YAhDH,CAgDkBpC,eAAe,CAACQ,IAAhB,CAAqB,CACtC,QAAS,qBAD6B,CAEtCC,OAAO,CAAEH,MAF6B,CAGtCqB,MAAM,CAAE,CAAE,QAAS,2BAAX,CAH8B,CAItCC,YAAY,CAAE,KAJwB,CAArB,EAMhBC,IANgB,CAMX,SAAAC,MAAM,CAAI,CACZ,MAAOA,CAAAA,MAAM,CAAGA,MAAM,CAACC,KAAV,CAAkB,CAA/B,CACH,CARgB,EAShBC,KATgB,CASV,UAAM,CACT,MAAO,EAAP,CACH,CAXgB,CAhDlB,CA4DHP,QAAQ,CAACQ,IAAT,CAAcG,YAAd,EAEMC,UA9DH,CA8DgBrC,eAAe,CAACQ,IAAhB,CAAqB,CACpC,QAAS,qBAD2B,CAEpCC,OAAO,CAAEH,MAF2B,CAGpCqB,MAAM,CAAE,CAAE,QAAS,yBAAX,CAH4B,CAIpCC,YAAY,CAAE,KAJsB,CAArB,EAMdC,IANc,CAMT,SAAAC,MAAM,CAAI,CACZ,MAAOA,CAAAA,MAAM,CAAGA,MAAM,CAACC,KAAV,CAAkB,CAA/B,CACH,CARc,EASdC,KATc,CASR,UAAM,CACT,MAAO,EAAP,CACH,CAXc,CA9DhB,CA0EHP,QAAQ,CAACQ,IAAT,CAAcI,UAAd,EAEMC,wBA5EH,CA4E8BtC,eAAe,CAACQ,IAAhB,CAAqB,CAClD,QAAS,qBADyC,CAElDC,OAAO,CAAEH,MAFyC,CAGlDqB,MAAM,CAAE,CAAE,QAAS,+BAAX,CAH0C,CAIlDC,YAAY,CAAE,KAJoC,CAArB,EAM5BC,IAN4B,CAMvB,SAAAC,MAAM,CAAI,CACZ,MAAOA,CAAAA,MAAM,CAAGA,MAAM,CAACC,KAAV,CAAkB,CAA/B,CACH,CAR4B,EAS5BC,KAT4B,CAStB,UAAM,CACT,MAAO,EAAP,CACH,CAX4B,CA5E9B,CAwFHP,QAAQ,CAACQ,IAAT,CAAcK,wBAAd,EAxFG,uBA0FUC,CAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ,CA1FV,+G","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n"]},"metadata":{},"sourceType":"module"}