{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import{compose}from'recompose';import withStyles from'@material-ui/core/styles/withStyles';import withLanguage from'../Language';import withTheme from'../Theme';import withSnackbarNotifications from'../Notifications';import ForwardDialog from'./Popup/ForwardDialog';import ChatInfo from'./ColumnRight/ChatInfo';import Dialogs from'./ColumnLeft/Dialogs';import DialogDetails from'./ColumnMiddle/DialogDetails';import Footer from'./Footer';import InstantViewer from'./InstantView/InstantViewer';import MediaViewer from'./Viewer/MediaViewer';import ProfileMediaViewer from'./Viewer/ProfileMediaViewer';import{highlightMessage}from'../Actions/Client';import ApplicationStore from'../Stores/ApplicationStore';import ChatStore from'../Stores/ChatStore';import InstantViewStore from'../Stores/InstantViewStore';import UserStore from'../Stores/UserStore';import TdLibController from'../Controllers/TdLibController';import'../TelegramApp.css';var styles=function styles(theme){return{page:{background:theme.palette.type==='dark'?theme.palette.background.default:'#FFFFFF',color:theme.palette.text.primary}};};var MainPage=/*#__PURE__*/function(_React$Component){_inherits(MainPage,_React$Component);function MainPage(props){var _this;_classCallCheck(this,MainPage);_this=_possibleConstructorReturn(this,_getPrototypeOf(MainPage).call(this,props));_this.onClientUpdateInstantViewContent=function(update){var content=update.content;_this.setState({instantViewContent:content});};_this.onClientUpdateOpenChat=function(update){var chatId=update.chatId,messageId=update.messageId,popup=update.popup;_this.handleSelectChat(chatId,messageId,popup);};_this.onClientUpdateOpenUser=function(update){var userId=update.userId,popup=update.popup;_this.handleSelectUser(userId,popup);};_this.onClientUpdateChatDetailsVisibility=function(update){_this.setState({isChatDetailsVisible:ApplicationStore.isChatDetailsVisible});};_this.onClientUpdateMediaViewerContent=function(update){_this.setState({mediaViewerContent:ApplicationStore.mediaViewerContent});};_this.onClientUpdateProfileMediaViewerContent=function(update){_this.setState({profileMediaViewerContent:ApplicationStore.profileMediaViewerContent});};_this.onClientUpdateForward=function(update){var info=update.info;_this.setState({forwardInfo:info});};_this.handleSelectChat=function(chatId){var messageId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var popup=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var currentChatId=ApplicationStore.getChatId();var currentDialogChatId=ApplicationStore.dialogChatId;var currentMessageId=ApplicationStore.getMessageId();if(popup){if(currentDialogChatId!==chatId){TdLibController.clientUpdate({'@type':'clientUpdateDialogChatId',chatId:chatId});}return;}if(currentChatId===chatId&&messageId&&currentMessageId===messageId){_this.dialogDetailsRef.current.scrollToMessage();if(messageId){highlightMessage(chatId,messageId);}}else if(currentChatId===chatId&&!messageId){_this.dialogDetailsRef.current.scrollToStart();}else{TdLibController.setChatId(chatId,messageId);}};_this.handleSelectUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId,popup){var chat;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userId){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return TdLibController.send({'@type':'createPrivateChat',user_id:userId,force:true});case 4:chat=_context.sent;_this.handleSelectChat(chat.id,null,popup);case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();_this.dialogDetailsRef=React.createRef();_this.state={isChatDetailsVisible:ApplicationStore.isChatDetailsVisible,mediaViewerContent:ApplicationStore.mediaViewerContent,profileMediaViewerContent:ApplicationStore.profileMediaViewerContent,forwardInfo:null,instantViewContent:null};/*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/ //this.initDB();\nreturn _this;}_createClass(MainPage,[{key:\"componentDidMount\",value:function componentDidMount(){UserStore.on('clientUpdateOpenUser',this.onClientUpdateOpenUser);ChatStore.on('clientUpdateOpenChat',this.onClientUpdateOpenChat);ApplicationStore.on('clientUpdateChatDetailsVisibility',this.onClientUpdateChatDetailsVisibility);ApplicationStore.on('clientUpdateMediaViewerContent',this.onClientUpdateMediaViewerContent);ApplicationStore.on('clientUpdateProfileMediaViewerContent',this.onClientUpdateProfileMediaViewerContent);ApplicationStore.on('clientUpdateForward',this.onClientUpdateForward);InstantViewStore.on('clientUpdateInstantViewContent',this.onClientUpdateInstantViewContent);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){UserStore.removeListener('clientUpdateOpenUser',this.onClientUpdateOpenUser);ChatStore.removeListener('clientUpdateOpenChat',this.onClientUpdateOpenChat);ApplicationStore.removeListener('clientUpdateChatDetailsVisibility',this.onClientUpdateChatDetailsVisibility);ApplicationStore.removeListener('clientUpdateMediaViewerContent',this.onClientUpdateMediaViewerContent);ApplicationStore.removeListener('clientUpdateProfileMediaViewerContent',this.onClientUpdateProfileMediaViewerContent);ApplicationStore.removeListener('clientUpdateForward',this.onClientUpdateForward);InstantViewStore.removeListener('clientUpdateInstantViewContent',this.onClientUpdateInstantViewContent);}},{key:\"render\",value:function render(){var classes=this.props.classes;var _this$state=this.state,instantViewContent=_this$state.instantViewContent,isChatDetailsVisible=_this$state.isChatDetailsVisible,mediaViewerContent=_this$state.mediaViewerContent,profileMediaViewerContent=_this$state.profileMediaViewerContent,forwardInfo=_this$state.forwardInfo;return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:classNames(classes.page,'page',{'page-third-column':isChatDetailsVisible})},React.createElement(Dialogs,null),React.createElement(DialogDetails,{ref:this.dialogDetailsRef}),isChatDetailsVisible&&React.createElement(ChatInfo,null)),React.createElement(Footer,null),instantViewContent&&React.createElement(InstantViewer,instantViewContent),mediaViewerContent&&React.createElement(MediaViewer,mediaViewerContent),profileMediaViewerContent&&React.createElement(ProfileMediaViewer,profileMediaViewerContent),forwardInfo&&React.createElement(ForwardDialog,forwardInfo));}}]);return MainPage;}(React.Component);var enhance=compose(withLanguage,withTheme,withStyles(styles),withSnackbarNotifications);export default enhance(MainPage);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/MainPage.js"],"names":["React","classNames","compose","withStyles","withLanguage","withTheme","withSnackbarNotifications","ForwardDialog","ChatInfo","Dialogs","DialogDetails","Footer","InstantViewer","MediaViewer","ProfileMediaViewer","highlightMessage","ApplicationStore","ChatStore","InstantViewStore","UserStore","TdLibController","styles","theme","page","background","palette","type","default","color","text","primary","MainPage","props","onClientUpdateInstantViewContent","update","content","setState","instantViewContent","onClientUpdateOpenChat","chatId","messageId","popup","handleSelectChat","onClientUpdateOpenUser","userId","handleSelectUser","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","info","forwardInfo","currentChatId","getChatId","currentDialogChatId","dialogChatId","currentMessageId","getMessageId","clientUpdate","dialogDetailsRef","current","scrollToMessage","scrollToStart","setChatId","send","user_id","force","chat","id","createRef","state","on","removeListener","classes","Component","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.removeListener('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"]},"metadata":{},"sourceType":"module"}