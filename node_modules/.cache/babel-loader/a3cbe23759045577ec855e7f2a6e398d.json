{"ast":null,"code":"/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n  constructor() {\n    super();\n\n    this.reset = () => {\n      this.callbacks = []; //this.transactionCount = 0;\n\n      this.db = null;\n      this.urls = new WeakMap();\n      this.items = new Map();\n      this.blobItems = new Map();\n      this.locationItems = new Map();\n      this.downloads = new Map();\n      this.uploads = new Map();\n    };\n\n    this.onUpdate = async update => {\n      switch (update['@type']) {\n        case 'updateAuthorizationState':\n          {\n            await this.onUpdateAuthorizationState(update);\n            break;\n          }\n\n        case 'updateFile':\n          {\n            this.set(update.file);\n            this.onUpdateFile(update);\n            this.emit(update['@type'], update);\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.onClientUpdate = update => {\n      switch (update['@type']) {\n        case 'clientUpdateAudioThumbnailBlob':\n          {\n            this.emit(update['@type'], update);\n            break;\n          }\n\n        case 'clientUpdateAudioBlob':\n          {\n            this.emit(update['@type'], update);\n            break;\n          }\n\n        case 'clientUpdateDocumentBlob':\n          {\n            this.emit(update['@type'], update);\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.addTdLibListener = () => {\n      TdLibController.addListener('update', this.onUpdate);\n      TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    this.removeTdLibListener = () => {\n      TdLibController.removeListener('update', this.onUpdate);\n      TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    this.onUpdateAuthorizationState = async update => {\n      if (!update) return;\n      const authorization_state = update.authorization_state;\n      if (!authorization_state) return;\n\n      switch (authorization_state['@type']) {\n        case 'authorizationStateWaitTdlibParameters':\n          {\n            await this.initDB();\n            break;\n          }\n\n        case 'authorizationStateClosed':\n          {\n            this.reset();\n            break;\n          }\n      }\n    };\n\n    this.onUpdateFile = update => {\n      if (!update) return;\n      const file = update.file;\n      if (!file) return;\n      this.handleDownloads(file);\n      this.handleUploads(file);\n    };\n\n    this.handleDownloads = file => {\n      const arr = file.arr,\n            id = file.id,\n            idb_key = file.idb_key,\n            local = file.local;\n      delete file.arr;\n      if (!this.downloads.has(id)) return;\n      if (!local.is_downloading_completed) return;\n      if (!useReadFile && !idb_key && !arr) return;\n      const items = this.downloads.get(id);\n      if (!items) return;\n      this.downloads.delete(id);\n      const store = this.getStore();\n      items.forEach(item => {\n        switch (item['@type']) {\n          case 'animation':\n            {\n              this.handleAnimation(store, item, file, arr, null);\n              break;\n            }\n\n          case 'audio':\n            {\n              this.handleAudio(store, item, file, arr, null);\n              break;\n            }\n\n          case 'chat':\n            {\n              this.handleChat(store, item, file, arr);\n              break;\n            }\n\n          case 'document':\n            {\n              this.handleDocument(store, item, file, arr, null);\n              break;\n            }\n\n          case 'game':\n            {\n              this.handleGame(store, item, file, arr, null);\n              break;\n            }\n\n          case 'location':\n            {\n              this.handleLocation(store, item, file, arr, null);\n              break;\n            }\n\n          case 'message':\n            {\n              this.handleMessage(store, item, file, arr);\n              break;\n            }\n\n          case 'pageBlockMap':\n            {\n              this.handlePageBlockMap(store, item, file, arr, null);\n              break;\n            }\n\n          case 'photo':\n            {\n              this.handlePhoto(store, item, file, arr, null);\n              break;\n            }\n\n          case 'sticker':\n            {\n              this.handleSticker(store, item, file, arr, null);\n              break;\n            }\n\n          case 'video':\n            {\n              this.handleVideo(store, item, file, arr, null);\n              break;\n            }\n\n          case 'videoNote':\n            {\n              this.handleVideoNote(store, item, file, arr, null);\n              break;\n            }\n\n          case 'voiceNote':\n            {\n              this.handleVoiceNote(store, item, file, arr, null);\n              break;\n            }\n\n          case 'user':\n            {\n              this.handleUser(store, item, file, arr);\n              break;\n            }\n\n          default:\n            console.error('FileStore.onUpdateFile unhandled item', item);\n            break;\n        }\n      });\n    };\n\n    this.handleUploads = file => {\n      const id = file.id,\n            remote = file.remote;\n      delete file.arr;\n      if (!this.uploads.has(id)) return;\n      if (remote.is_uploading_completed) return;\n      this.uploads.delete(id);\n    };\n\n    this.handleChat = (store, chat, file, arr) => {\n      if (!chat) return;\n      this.getLocalFile(store, file, arr, () => this.updateChatPhotoBlob(chat.id, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, chat));\n    };\n\n    this.handleUser = (store, user, file, arr) => {\n      if (!user) return;\n      this.getLocalFile(store, file, arr, () => this.updateUserPhotoBlob(user.id, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, user));\n    };\n\n    this.handleMessage = (store, message, file, arr) => {\n      if (!message) return;\n      const content = message.content;\n      if (!content) return;\n\n      switch (content['@type']) {\n        case 'messageAnimation':\n          {\n            const animation = content.animation;\n            this.handleAnimation(store, animation, file, arr, message);\n            break;\n          }\n\n        case 'messageAudio':\n          {\n            const audio = content.audio;\n            this.handleAudio(store, audio, file, arr, message);\n            break;\n          }\n\n        case 'messageChatChangePhoto':\n          {\n            const photo = content.photo;\n            this.handlePhoto(store, photo, file, arr, message);\n            break;\n          }\n\n        case 'messageDocument':\n          {\n            const document = content.document;\n            this.handleDocument(store, document, file, arr, message);\n            break;\n          }\n\n        case 'messageGame':\n          {\n            const game = content.game;\n            this.handleGame(store, game, file, arr, message);\n            break;\n          }\n\n        case 'messageLocation':\n          {\n            const location = content.location;\n            this.handleLocation(store, location, file, arr, message);\n            break;\n          }\n\n        case 'messagePhoto':\n          {\n            const photo = content.photo;\n            this.handlePhoto(store, photo, file, arr, message);\n            break;\n          }\n\n        case 'messageSticker':\n          {\n            const sticker = content.sticker;\n            this.handleSticker(store, sticker, file, arr, message);\n            break;\n          }\n\n        case 'messageText':\n          {\n            const web_page = content.web_page;\n            if (!web_page) break;\n            const animation = web_page.animation,\n                  audio = web_page.audio,\n                  document = web_page.document,\n                  photo = web_page.photo,\n                  sticker = web_page.sticker,\n                  video = web_page.video,\n                  video_note = web_page.video_note,\n                  voice_note = web_page.voice_note;\n\n            if (animation) {\n              this.handleAnimation(store, animation, file, arr, message);\n            }\n\n            if (audio) {\n              this.handleAudio(store, audio, file, arr, message);\n            }\n\n            if (document) {\n              this.handleDocument(store, document, file, arr, message);\n            }\n\n            if (photo) {\n              this.handlePhoto(store, photo, file, arr, message);\n            }\n\n            if (sticker) {\n              this.handleSticker(store, sticker, file, arr, message);\n            }\n\n            if (video) {\n              this.handleVideo(store, video, file, arr, message);\n            }\n\n            if (voice_note) {\n              this.handleVoiceNote(store, voice_note, file, arr, message);\n            }\n\n            if (video_note) {\n              this.handleVideoNote(store, video_note, file, arr, message);\n            }\n\n            break;\n          }\n\n        case 'messageVenue':\n          {\n            const venue = content.venue;\n            const location = venue.location;\n            this.handleLocation(store, location, file, arr, message);\n            break;\n          }\n\n        case 'messageVideo':\n          {\n            const video = content.video;\n            this.handleVideo(store, video, file, arr, message);\n            break;\n          }\n\n        case 'messageVideoNote':\n          {\n            const video_note = content.video_note;\n            this.handleVideoNote(store, video_note, file, arr, message);\n            break;\n          }\n\n        case 'messageVoiceNote':\n          {\n            const voice_note = content.voice_note;\n            this.handleVoiceNote(store, voice_note, file, arr, message);\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.handleAnimation = (store, animation, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n\n      if (animation.thumbnail) {\n        const source = animation.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation));\n        }\n      }\n\n      if (animation.animation) {\n        const source = animation.animation;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateAnimationBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation));\n        }\n      }\n    };\n\n    this.handleAudio = (store, audio, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n\n      if (audio.album_cover_thumbnail) {\n        const source = audio.album_cover_thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateAudioThumbnailBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio));\n        }\n      }\n\n      if (audio.audio) {\n        const source = audio.audio;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateAudioBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio));\n        }\n      }\n    };\n\n    this.handleGame = (store, game, file, arr, message) => {\n      if (!game) return;\n      const animation = game.animation,\n            photo = game.photo;\n\n      if (photo) {\n        this.handlePhoto(store, photo, file, arr, message);\n      }\n\n      if (animation) {\n        this.handleAnimation(store, animation, file, arr, message);\n      }\n    };\n\n    this.handleDocument = (store, document, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n\n      if (document.thumbnail) {\n        const source = document.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document));\n        }\n      }\n\n      if (document.document) {\n        const source = document.document;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateDocumentBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document));\n        }\n      }\n    };\n\n    this.handleLocation = (store, location, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n      const locationId = getLocationId(location);\n\n      if (locationId) {\n        const source = this.getLocationFile(locationId);\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateLocationBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location));\n        }\n      }\n    };\n\n    this.handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n      const location = pageBlockMap.location;\n      const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n\n      if (locationId) {\n        const source = this.getLocationFile(locationId);\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateLocationBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap));\n        }\n      }\n    };\n\n    this.handlePhoto = (store, photo, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n\n      if (photo) {\n        for (let i = 0; i < photo.sizes.length; i++) {\n          const photoSize = photo.sizes[i];\n\n          if (photoSize) {\n            const source = photoSize.photo;\n\n            if (source && source.id === file.id) {\n              this.getLocalFile(store, source, arr, () => this.updatePhotoBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo));\n              break;\n            }\n          }\n        }\n      }\n    };\n\n    this.handleSticker = (store, sticker, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n\n      if (sticker.thumbnail) {\n        const source = sticker.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateStickerThumbnailBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker));\n        }\n      }\n\n      if (sticker.sticker) {\n        const source = sticker.sticker;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateStickerBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker));\n        }\n      }\n    };\n\n    this.handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n\n      if (voiceNote.voice) {\n        const source = voiceNote.voice;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateVoiceNoteBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote));\n        }\n      }\n    };\n\n    this.handleVideoNote = (store, videoNote, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n\n      if (videoNote.thumbnail) {\n        const source = videoNote.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote));\n        }\n      }\n\n      if (videoNote.video) {\n        const source = videoNote.video;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateVideoNoteBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote));\n        }\n      }\n    };\n\n    this.handleVideo = (store, video, file, arr, obj) => {\n      const chatId = obj ? obj.chat_id : 0;\n      const messageId = obj ? obj.id : 0;\n\n      if (video.thumbnail) {\n        const source = video.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateVideoThumbnailBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video));\n        }\n      }\n\n      if (video.video) {\n        const source = video.video;\n\n        if (source && source.id === file.id) {\n          this.getLocalFile(store, source, arr, () => this.updateVideoBlob(chatId, messageId, file.id), () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video));\n        }\n      }\n    };\n\n    this.deleteLocalFile = (store, file) => {};\n\n    this.get = fileId => {\n      return this.items.get(fileId);\n    };\n\n    this.set = file => {\n      this.items.set(file.id, file);\n    };\n\n    this.getBlob = fileId => {\n      return this.blobItems.get(fileId);\n    };\n\n    this.setBlob = (fileId, blob) => {\n      this.blobItems.set(fileId, blob);\n    };\n\n    this.deleteBlob = fileId => {\n      this.blobItems.delete(fileId);\n    };\n\n    this.getLocationFile = locationId => {\n      const fileId = this.locationItems.get(locationId);\n      return this.get(fileId);\n    };\n\n    this.setLocationFile = (locationId, file) => {\n      this.locationItems.set(locationId, file.id);\n      this.set(file);\n    };\n\n    this.getBlobUrl = blob => {\n      if (!blob) {\n        return null;\n      }\n\n      if (this.urls.has(blob)) {\n        return this.urls.get(blob);\n      }\n\n      const url = URL.createObjectURL(blob);\n      this.urls.set(blob, url);\n      return url;\n    };\n\n    this.deleteBlobUrl = blob => {\n      if (this.urls.has(blob)) {\n        this.urls.delete(blob);\n      }\n    };\n\n    this.updatePhotoBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdatePhotoBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateAudioThumbnailBlob',\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateAudioBlob = (chatId, messageId, fileId) => {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateAudioBlob',\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateVoiceNoteBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateVideoNoteThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateVideoNoteBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateVideoNoteBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateAnimationThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateAnimationBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateAnimationBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateDocumentBlob = (chatId, messageId, fileId) => {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateDocumentBlob',\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateVideoThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateVideoBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateVideoBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateStickerThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateStickerBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateStickerBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateLocationBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateLocationBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n      this.emit('clientUpdateDocumentThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    this.reset();\n    this.addTdLibListener();\n    this.setMaxListeners(Infinity);\n  }\n\n  async initDB(callback) {\n    /*if (this.store) return;\n        if (this.initiatingDB) return;\n         this.initiatingDB = true;\n        this.store = localForage.createInstance({\n            name: 'tdlib'\n        });\n        this.initiatingDB = false;\n         return;*/\n    if (this.db) {\n      console.log('[FileStore] db exists');\n      if (callback) callback();\n      return;\n    }\n\n    if (this.initiatingDB) {\n      console.log('[FileStore] add callback');\n      if (callback) this.callbacks.push(callback);\n      return;\n    }\n\n    console.log('[FileStore] start initDB');\n    if (callback) this.callbacks.push(callback);\n    this.initiatingDB = true;\n    this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n    this.initiatingDB = false;\n    console.log('[FileStore] stop initDB');\n\n    if (this.callbacks.length) {\n      console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n\n      for (let i = 0; i < this.callbacks.length; i++) {\n        this.callbacks[i]();\n      }\n\n      this.callbacks = [];\n    }\n  }\n\n  openDB() {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open('tdlib');\n\n      request.onsuccess = () => resolve(request.result);\n\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  getStore() {\n    if (useReadFile) {\n      return undefined;\n    } //console.log('FileStore.getStore ' + this.transactionCount++);\n\n\n    return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n  }\n\n  getReadWriteStore() {\n    if (useReadFile) {\n      return undefined;\n    }\n\n    return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n  }\n\n  getLocalFile(store, file, arr, callback, faultCallback) {\n    if (!useDownloadFile) {\n      return;\n    }\n\n    if (useReadFile) {\n      file = this.get(file.id) || file;\n\n      if (file && file.local && !file.local.is_downloading_completed) {\n        faultCallback();\n        return;\n      }\n\n      (async file => {\n        const response = await TdLibController.send({\n          '@type': 'readFile',\n          file_id: file.id\n        });\n        console.log(\"readFile result file_id=\".concat(file.id), file, response);\n        this.setBlob(file.id, response.data);\n      })(file).then(callback, faultCallback);\n      return;\n    }\n\n    let idb_key = file.idb_key;\n\n    if (!idb_key) {\n      file = this.get(file.id) || file;\n      idb_key = file.idb_key;\n    }\n\n    if (!idb_key && !arr) {\n      faultCallback();\n      return;\n    }\n\n    if (arr) {\n      file.blob = new Blob([arr]);\n      this.setBlob(file.id, file.blob);\n      callback();\n      return;\n    }\n\n    if (file.blob) {\n      //callback();\n      return;\n    } // if (this.getBlob(file.id)){\n    //     return;\n    // }\n\n\n    const request = store.get(idb_key);\n\n    request.onsuccess = event => {\n      const blob = event.target.result;\n\n      if (blob) {\n        file.blob = blob;\n        this.setBlob(file.id, file.blob);\n        callback();\n      } else {\n        faultCallback();\n      }\n    };\n\n    request.onerror = () => {\n      faultCallback();\n    };\n  }\n\n  getRemoteFile(fileId, priority, obj) {\n    if (!useDownloadFile) {\n      return;\n    }\n\n    const items = this.downloads.get(fileId) || [];\n    if (items.some(x => x === obj)) return;\n    items.push(obj);\n    this.downloads.set(fileId, items);\n    TdLibController.send({\n      '@type': 'downloadFile',\n      file_id: fileId,\n      priority: priority\n    });\n  }\n\n  cancelGetRemoteFile(fileId, obj) {\n    if (!this.downloads.has(fileId)) return;\n\n    if (!obj) {\n      this.downloads.delete(fileId);\n    } else {\n      const items = this.downloads.get(fileId).filter(x => x !== obj);\n      this.downloads.set(fileId, items);\n    }\n\n    TdLibController.send({\n      '@type': 'cancelDownloadFile',\n      file_id: fileId,\n      only_if_pending: false\n    });\n  }\n\n  uploadFile(fileId, obj) {\n    if (this.uploads.has(fileId)) {\n      let items = this.uploads.get(fileId);\n      items.push(obj);\n    } else {\n      this.uploads.set(fileId, [obj]);\n    }\n\n    console.log('[perf] uploadFile file_id=' + fileId);\n  }\n\n  cancelUploadFile(fileId, obj) {\n    if (this.uploads.has(fileId)) {\n      this.uploads.delete(fileId);\n      console.log('cancel_upload_message id=' + obj.id);\n      TdLibController.send({\n        '@type': 'deleteMessages',\n        chat_id: obj.chat_id,\n        message_ids: [obj.id],\n        revoke: true\n      });\n    }\n  }\n\n  updateUserPhotoBlob(userId, fileId) {\n    this.emit('clientUpdateUserBlob', {\n      userId: userId,\n      fileId: fileId\n    });\n  }\n\n  updateChatPhotoBlob(chatId, fileId) {\n    this.emit('clientUpdateChatBlob', {\n      chatId: chatId,\n      fileId: fileId\n    });\n  }\n\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Stores/FileStore.js"],"names":["EventEmitter","getLocationId","FILE_PRIORITY","IV_LOCATION_HEIGHT","IV_LOCATION_WIDTH","THUMBNAIL_PRIORITY","TdLibController","useReadFile","useDownloadFile","FileStore","constructor","reset","callbacks","db","urls","WeakMap","items","Map","blobItems","locationItems","downloads","uploads","onUpdate","update","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","addListener","removeTdLibListener","removeListener","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","store","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationFile","updateLocationBlob","pageBlockMap","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","undefined","transaction","objectStore","getReadWriteStore","faultCallback","response","send","file_id","data","then","Blob","event","target","priority","some","x","cancelGetRemoteFile","filter","only_if_pending","uploadFile","cancelUploadFile","message_ids","revoke","userId"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                console.log(`readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}