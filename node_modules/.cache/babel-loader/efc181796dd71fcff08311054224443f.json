{"ast":null,"code":"import _defineProperty from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import{compose}from'recompose';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import Button from'@material-ui/core/Button';import IconButton from'@material-ui/core/IconButton';import InsertEmoticonIcon from'@material-ui/icons/InsertEmoticon';import{Picker as EmojiPicker}from'emoji-mart';import StickerPreview from'./StickerPreview';import StickersPicker from'./StickersPicker';import{isAppleDevice}from'../../Utils/Common';import{loadStickerThumbnailContent,loadStickerSetContent}from'../../Utils/File';import{EMOJI_PICKER_TIMEOUT_MS}from'../../Constants';import ApplicationStore from'../../Stores/ApplicationStore';import FileStore from'../../Stores/FileStore';import LocalizationStore from'../../Stores/LocalizationStore';import TdLibController from'../../Controllers/TdLibController';import'./EmojiPickerButton.css';var styles=function styles(theme){return{iconButton:{margin:'8px 0px'},headerButton:{borderRadius:0,flex:'50%'},pickerRoot:{zIndex:theme.zIndex.modal,width:338,overflowX:'hidden',backgroundColor:theme.palette.background.paper,color:theme.palette.text.primary,borderRadius:theme.shape.borderRadius,boxShadow:theme.shadows[8],position:'absolute',bottom:80,display:'none'},pickerRootOpened:{display:'block'}};};var EmojiPickerButton=/*#__PURE__*/function(_React$Component){_inherits(EmojiPickerButton,_React$Component);function EmojiPickerButton(props){var _this;_classCallCheck(this,EmojiPickerButton);_this=_possibleConstructorReturn(this,_getPrototypeOf(EmojiPickerButton).call(this,props));_this.onClientUpdateChange=function(update){_this.picker=null;};_this.handleButtonMouseEnter=function(event){_this.buttonEnter=true;setTimeout(function(){if(!_this.buttonEnter)return;_this.updatePicker(true);_this.loadStickerSets();},EMOJI_PICKER_TIMEOUT_MS);};_this.loadStickerSets=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var promises,node,store,previewSets,previewStickers;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!_this.sets){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return TdLibController.send({'@type':'getInstalledStickerSets',is_masks:false});case 4:_this.stickerSets=_context.sent;promises=[];_this.stickerSets.sets.forEach(function(x){promises.push(TdLibController.send({'@type':'getStickerSet',set_id:x.id}));});_context.next=9;return Promise.all(promises);case 9:_this.sets=_context.sent;node=_this.stickersPickerRef.current;store=FileStore.getStore();previewSets=_this.sets.slice(0,5).reverse();previewSets.forEach(function(x){loadStickerSetContent(store,x);node.loadedSets.set(x.id,x.id);});previewStickers=_this.sets.reduce(function(stickers,set){if(set.stickers.length>0){stickers.push(set.stickers[0]);}return stickers;},[]);previewStickers.forEach(function(x){loadStickerThumbnailContent(store,x);});case 16:case\"end\":return _context.stop();}}},_callee);}));_this.handleButtonMouseLeave=function(){_this.buttonEnter=false;setTimeout(function(){_this.tryClosePicker();},EMOJI_PICKER_TIMEOUT_MS);};_this.tryClosePicker=function(){var sticker=_this.state.sticker;if(_this.paperEnter||_this.buttonEnter||sticker)return;_this.updatePicker(false);};_this.handlePaperMouseEnter=function(){_this.paperEnter=true;};_this.handlePaperMouseLeave=function(){_this.paperEnter=false;setTimeout(function(){_this.tryClosePicker();},EMOJI_PICKER_TIMEOUT_MS);};_this.updatePicker=function(open){_this.setState({open:open});};_this.handleEmojiClick=function(){_this.setState({tab:0});};_this.handleStickersClick=function(){var stickersPicker=_this.stickersPickerRef.current;var tab=_this.state.tab;stickersPicker.loadContent(_this.stickerSets,_this.sets);_this.setState({tab:1});if(tab===1){stickersPicker.scrollTop();}};_this.handleStickerSend=function(sticker){if(!sticker)return;TdLibController.clientUpdate({'@type':'clientUpdateStickerSend',sticker:sticker});_this.updatePicker(false);};_this.handleStickerPreview=function(sticker){_this.setState({sticker:sticker});TdLibController.clientUpdate({'@type':'clientUpdateStickerPreview',sticker:sticker});if(!sticker){_this.tryClosePicker();}};_this.state={open:false,tab:0};_this.emojiPickerRef=React.createRef();_this.stickersPickerRef=React.createRef();return _this;}_createClass(EmojiPickerButton,[{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('clientUpdateThemeChange',this.onClientUpdateChange);LocalizationStore.on('clientUpdateLanguageChange',this.onClientUpdateChange);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('clientUpdateThemeChange',this.onClientUpdateChange);LocalizationStore.removeListener('clientUpdateLanguageChange',this.onClientUpdateChange);}},{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,theme=_this$props.theme,t=_this$props.t;var _this$state=this.state,open=_this$state.open,tab=_this$state.tab,sticker=_this$state.sticker;if(open&&!this.picker){var i18n={search:t('Search'),notfound:t('NotEmojiFound'),skintext:t('ChooseDefaultSkinTone'),categories:{search:t('SearchResults'),recent:t('Recent'),people:t('SmileysPeople'),nature:t('AnimalsNature'),foods:t('FoodDrink'),activity:t('Activity'),places:t('TravelPlaces'),objects:t('Objects'),symbols:t('Symbols'),flags:t('Flags'),custom:t('Custom')}};this.picker=React.createElement(EmojiPicker,{ref:this.emojiPickerRef,set:\"apple\",showPreview:false,showSkinTones:false,onSelect:this.props.onSelect,color:theme.palette.primary.dark,i18n:i18n,native:isAppleDevice(),style:{width:338,overflowX:'hidden'}});this.stickersPicker=React.createElement(StickersPicker,{ref:this.stickersPickerRef,onSelect:this.handleStickerSend,onPreview:this.handleStickerPreview});}return React.createElement(React.Fragment,null,React.createElement(\"link\",{rel:\"stylesheet\",type:\"text/css\",href:theme.palette.type==='dark'?'emoji-mart.dark.css':'emoji-mart.light.css'}),React.createElement(IconButton,{className:classes.iconButton,\"aria-label\":\"Emoticon\",onMouseEnter:this.handleButtonMouseEnter,onMouseLeave:this.handleButtonMouseLeave},React.createElement(InsertEmoticonIcon,null)),React.createElement(\"div\",{className:classNames(classes.pickerRoot,_defineProperty({},classes.pickerRootOpened,open)),onMouseEnter:this.handlePaperMouseEnter,onMouseLeave:this.handlePaperMouseLeave},React.createElement(\"div\",{className:\"emoji-picker-header\"},React.createElement(Button,{color:tab===0?'primary':'default',className:classes.headerButton,onClick:this.handleEmojiClick},t('Emoji')),React.createElement(Button,{color:tab===1?'primary':'default',className:classes.headerButton,onClick:this.handleStickersClick},t('Stickers'))),React.createElement(\"div\",{className:classNames('emoji-picker-content',{'emoji-picker-content-stickers':tab===1})},this.picker,this.stickersPicker),Boolean(sticker)&&React.createElement(StickerPreview,{sticker:sticker})));}}]);return EmojiPickerButton;}(React.Component);var enhance=compose(withStyles(styles,{withTheme:true}),withTranslation());export default enhance(EmojiPickerButton);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnMiddle/EmojiPickerButton.js"],"names":["React","classNames","compose","withStyles","withTranslation","Button","IconButton","InsertEmoticonIcon","Picker","EmojiPicker","StickerPreview","StickersPicker","isAppleDevice","loadStickerThumbnailContent","loadStickerSetContent","EMOJI_PICKER_TIMEOUT_MS","ApplicationStore","FileStore","LocalizationStore","TdLibController","styles","theme","iconButton","margin","headerButton","borderRadius","flex","pickerRoot","zIndex","modal","width","overflowX","backgroundColor","palette","background","paper","color","text","primary","shape","boxShadow","shadows","position","bottom","display","pickerRootOpened","EmojiPickerButton","props","onClientUpdateChange","update","picker","handleButtonMouseEnter","event","buttonEnter","setTimeout","updatePicker","loadStickerSets","sets","send","is_masks","stickerSets","promises","forEach","x","push","set_id","id","Promise","all","node","stickersPickerRef","current","store","getStore","previewSets","slice","reverse","loadedSets","set","previewStickers","reduce","stickers","length","handleButtonMouseLeave","tryClosePicker","sticker","state","paperEnter","handlePaperMouseEnter","handlePaperMouseLeave","open","setState","handleEmojiClick","tab","handleStickersClick","stickersPicker","loadContent","scrollTop","handleStickerSend","clientUpdate","handleStickerPreview","emojiPickerRef","createRef","on","removeListener","classes","t","i18n","search","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","onSelect","dark","type","Boolean","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker as EmojiPicker } from 'emoji-mart';\nimport StickerPreview from './StickerPreview';\nimport StickersPicker from './StickersPicker';\nimport { isAppleDevice } from '../../Utils/Common';\nimport { loadStickerThumbnailContent, loadStickerSetContent } from '../../Utils/File';\nimport { EMOJI_PICKER_TIMEOUT_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EmojiPickerButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0px'\n    },\n    headerButton: {\n        borderRadius: 0,\n        flex: '50%'\n    },\n    pickerRoot: {\n        zIndex: theme.zIndex.modal,\n        width: 338,\n        overflowX: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary,\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[8],\n        position: 'absolute',\n        bottom: 80,\n        display: 'none'\n    },\n    pickerRootOpened: {\n        display: 'block'\n    }\n});\n\nclass EmojiPickerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tab: 0\n        };\n\n        this.emojiPickerRef = React.createRef();\n        this.stickersPickerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    onClientUpdateChange = update => {\n        this.picker = null;\n    };\n\n    handleButtonMouseEnter = event => {\n        this.buttonEnter = true;\n        setTimeout(() => {\n            if (!this.buttonEnter) return;\n\n            this.updatePicker(true);\n            this.loadStickerSets();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    loadStickerSets = async () => {\n        if (this.sets) return;\n\n        this.stickerSets = await TdLibController.send({\n            '@type': 'getInstalledStickerSets',\n            is_masks: false\n        });\n\n        const promises = [];\n        this.stickerSets.sets.forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        this.sets = await Promise.all(promises);\n\n        const node = this.stickersPickerRef.current;\n\n        const store = FileStore.getStore();\n        const previewSets = this.sets.slice(0, 5).reverse();\n        previewSets.forEach(x => {\n            loadStickerSetContent(store, x);\n            node.loadedSets.set(x.id, x.id);\n        });\n\n        const previewStickers = this.sets.reduce((stickers, set) => {\n            if (set.stickers.length > 0) {\n                stickers.push(set.stickers[0]);\n            }\n            return stickers;\n        }, []);\n        previewStickers.forEach(x => {\n            loadStickerThumbnailContent(store, x);\n        });\n    };\n\n    handleButtonMouseLeave = () => {\n        this.buttonEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    tryClosePicker = () => {\n        const { sticker } = this.state;\n        if (this.paperEnter || this.buttonEnter || sticker) return;\n\n        this.updatePicker(false);\n    };\n\n    handlePaperMouseEnter = () => {\n        this.paperEnter = true;\n    };\n\n    handlePaperMouseLeave = () => {\n        this.paperEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    updatePicker = open => {\n        this.setState({ open });\n    };\n\n    handleEmojiClick = () => {\n        this.setState({ tab: 0 });\n    };\n\n    handleStickersClick = () => {\n        const stickersPicker = this.stickersPickerRef.current;\n        const { tab } = this.state;\n\n        stickersPicker.loadContent(this.stickerSets, this.sets);\n\n        this.setState({ tab: 1 });\n        if (tab === 1) {\n            stickersPicker.scrollTop();\n        }\n    };\n\n    handleStickerSend = sticker => {\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n\n        this.updatePicker(false);\n    };\n\n    handleStickerPreview = sticker => {\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n\n        if (!sticker) {\n            this.tryClosePicker();\n        }\n    };\n\n    render() {\n        const { classes, theme, t } = this.props;\n        const { open, tab, sticker } = this.state;\n\n        if (open && !this.picker) {\n            const i18n = {\n                search: t('Search'),\n                notfound: t('NotEmojiFound'),\n                skintext: t('ChooseDefaultSkinTone'),\n                categories: {\n                    search: t('SearchResults'),\n                    recent: t('Recent'),\n                    people: t('SmileysPeople'),\n                    nature: t('AnimalsNature'),\n                    foods: t('FoodDrink'),\n                    activity: t('Activity'),\n                    places: t('TravelPlaces'),\n                    objects: t('Objects'),\n                    symbols: t('Symbols'),\n                    flags: t('Flags'),\n                    custom: t('Custom')\n                }\n            };\n\n            this.picker = (\n                <EmojiPicker\n                    ref={this.emojiPickerRef}\n                    set='apple'\n                    showPreview={false}\n                    showSkinTones={false}\n                    onSelect={this.props.onSelect}\n                    color={theme.palette.primary.dark}\n                    i18n={i18n}\n                    native={isAppleDevice()}\n                    style={{ width: 338, overflowX: 'hidden' }}\n                />\n            );\n\n            this.stickersPicker = (\n                <StickersPicker\n                    ref={this.stickersPickerRef}\n                    onSelect={this.handleStickerSend}\n                    onPreview={this.handleStickerPreview}\n                />\n            );\n        }\n\n        return (\n            <>\n                <link\n                    rel='stylesheet'\n                    type='text/css'\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Emoticon'\n                    onMouseEnter={this.handleButtonMouseEnter}\n                    onMouseLeave={this.handleButtonMouseLeave}>\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <div\n                    className={classNames(classes.pickerRoot, { [classes.pickerRootOpened]: open })}\n                    onMouseEnter={this.handlePaperMouseEnter}\n                    onMouseLeave={this.handlePaperMouseLeave}>\n                    <div className='emoji-picker-header'>\n                        <Button\n                            color={tab === 0 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleEmojiClick}>\n                            {t('Emoji')}\n                        </Button>\n                        <Button\n                            color={tab === 1 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleStickersClick}>\n                            {t('Stickers')}\n                        </Button>\n                    </div>\n                    <div className={classNames('emoji-picker-content', { 'emoji-picker-content-stickers': tab === 1 })}>\n                        {this.picker}\n                        {this.stickersPicker}\n                    </div>\n                    {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n                </div>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(EmojiPickerButton);\n"]},"metadata":{},"sourceType":"module"}