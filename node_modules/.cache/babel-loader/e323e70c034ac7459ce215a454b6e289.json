{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import withStyles from'@material-ui/core/styles/withStyles';import SignInControl from'./SignInControl';import ConfirmCodeControl from'./ConfirmCodeControl';import PasswordControl from'./PasswordControl';import AuthErrorDialog from'./AuthErrorDialog';import ApplicationStore from'../../Stores/ApplicationStore';import'./AuthFormControl.css';var styles=function styles(theme){return{button:{margin:'20px'},authorizationFormContent:{background:theme.palette.background.default,color:theme.palette.text.primary}};};var AuthFormControl=/*#__PURE__*/function(_React$Component){_inherits(AuthFormControl,_React$Component);function AuthFormControl(){_classCallCheck(this,AuthFormControl);return _possibleConstructorReturn(this,_getPrototypeOf(AuthFormControl).apply(this,arguments));}_createClass(AuthFormControl,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,authorizationState=_this$props.authorizationState;var defaultPhone=ApplicationStore.defaultPhone;var control=null;switch(authorizationState['@type']){case'authorizationStateWaitPhoneNumber':case'authorizationStateWaitEncryptionKey':case'authorizationStateWaitTdlibParameters':case'authorizationStateWaitTdlib':{// control = (\n//     <>\n//         <SignInControl phone={this.phone} onPhoneEnter={this.handlePhoneEnter}/>\n//         <ConfirmCodeControl phone={this.phone} onCodeEnter={this.handleCodeEnter} onChangePhone={this.handleChangePhone}/>\n//         <PasswordControl passwordHint='hint' onPasswordEnter={this.handlePasswordEnter} onChangePhone={this.handleChangePhone}/>\n//         <SignUpControl/>\n//     </>);\ncontrol=React.createElement(SignInControl,{defaultPhone:defaultPhone});break;}case'authorizationStateWaitCode':{var onChangePhone=this.props.onChangePhone;var terms_of_service=authorizationState.terms_of_service,code_info=authorizationState.code_info;control=React.createElement(ConfirmCodeControl,{termsOfService:terms_of_service,codeInfo:code_info,onChangePhone:onChangePhone});break;}case'authorizationStateWaitPassword':{var _onChangePhone=this.props.onChangePhone;var password_hint=authorizationState.password_hint,has_recovery_email_address=authorizationState.has_recovery_email_address,recovery_email_address_pattern=authorizationState.recovery_email_address_pattern;control=React.createElement(PasswordControl,{passwordHint:password_hint,hasRecoveryEmailAddress:has_recovery_email_address,recoveryEmailAddressPattern:recovery_email_address_pattern,onChangePhone:_onChangePhone});break;}default:break;}return React.createElement(\"div\",{className:\"sign-in-wrap\"},React.createElement(\"div\",{className:classNames(classes.authorizationFormContent,'authorization-form-content')},control),React.createElement(AuthErrorDialog,null));}}]);return AuthFormControl;}(React.Component);export default withStyles(styles)(AuthFormControl);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Auth/AuthFormControl.js"],"names":["React","classNames","withStyles","SignInControl","ConfirmCodeControl","PasswordControl","AuthErrorDialog","ApplicationStore","styles","theme","button","margin","authorizationFormContent","background","palette","default","color","text","primary","AuthFormControl","props","classes","authorizationState","defaultPhone","control","onChangePhone","terms_of_service","code_info","password_hint","has_recovery_email_address","recovery_email_address_pattern","Component"],"mappings":"kqBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,CACA,MAAO,uBAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACrBC,MAAM,CAAE,CACJC,MAAM,CAAE,MADJ,CADa,CAIrBC,wBAAwB,CAAE,CACtBC,UAAU,CAAEJ,KAAK,CAACK,OAAN,CAAcD,UAAd,CAAyBE,OADf,CAEtBC,KAAK,CAAEP,KAAK,CAACK,OAAN,CAAcG,IAAd,CAAmBC,OAFJ,CAJL,CAAL,EAApB,C,GAUMC,CAAAA,e,yTACO,iBACmC,KAAKC,KADxC,CACGC,OADH,aACGA,OADH,CACYC,kBADZ,aACYA,kBADZ,IAEGC,CAAAA,YAFH,CAEoBhB,gBAFpB,CAEGgB,YAFH,CAIL,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA,OAAQF,kBAAkB,CAAC,OAAD,CAA1B,EACI,IAAK,mCAAL,CACA,IAAK,qCAAL,CACA,IAAK,uCAAL,CACA,IAAK,6BAAL,CAAoC,CAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,OAAO,CAAG,oBAAC,aAAD,EAAe,YAAY,CAAED,YAA7B,EAAV,CACA,MACH,CACD,IAAK,4BAAL,CAAmC,IACvBE,CAAAA,aADuB,CACL,KAAKL,KADA,CACvBK,aADuB,IAEvBC,CAAAA,gBAFuB,CAESJ,kBAFT,CAEvBI,gBAFuB,CAELC,SAFK,CAESL,kBAFT,CAELK,SAFK,CAI/BH,OAAO,CACH,oBAAC,kBAAD,EACI,cAAc,CAAEE,gBADpB,CAEI,QAAQ,CAAEC,SAFd,CAGI,aAAa,CAAEF,aAHnB,EADJ,CAOA,MACH,CACD,IAAK,gCAAL,CAAuC,IAC3BA,CAAAA,cAD2B,CACT,KAAKL,KADI,CAC3BK,aAD2B,IAG/BG,CAAAA,aAH+B,CAM/BN,kBAN+B,CAG/BM,aAH+B,CAI/BC,0BAJ+B,CAM/BP,kBAN+B,CAI/BO,0BAJ+B,CAK/BC,8BAL+B,CAM/BR,kBAN+B,CAK/BQ,8BAL+B,CAQnCN,OAAO,CACH,oBAAC,eAAD,EACI,YAAY,CAAEI,aADlB,CAEI,uBAAuB,CAAEC,0BAF7B,CAGI,2BAA2B,CAAEC,8BAHjC,CAII,aAAa,CAAEL,cAJnB,EADJ,CAQA,MACH,CACD,QACI,MA/CR,CAkDA,MACI,4BAAK,SAAS,CAAC,cAAf,EACI,2BAAK,SAAS,CAAExB,UAAU,CAACoB,OAAO,CAACT,wBAAT,CAAmC,4BAAnC,CAA1B,EACKY,OADL,CADJ,CAII,oBAAC,eAAD,MAJJ,CADJ,CAQH,C,6BAhEyBxB,KAAK,CAAC+B,S,EAkEpC,cAAe7B,CAAAA,UAAU,CAACM,MAAD,CAAV,CAAmBW,eAAnB,CAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SignInControl from './SignInControl';\nimport ConfirmCodeControl from './ConfirmCodeControl';\nimport PasswordControl from './PasswordControl';\nimport AuthErrorDialog from './AuthErrorDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './AuthFormControl.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '20px'\n    },\n    authorizationFormContent: {\n        background: theme.palette.background.default,\n        color: theme.palette.text.primary\n    }\n});\n\nclass AuthFormControl extends React.Component {\n    render() {\n        const { classes, authorizationState } = this.props;\n        const { defaultPhone } = ApplicationStore;\n\n        let control = null;\n        switch (authorizationState['@type']) {\n            case 'authorizationStateWaitPhoneNumber':\n            case 'authorizationStateWaitEncryptionKey':\n            case 'authorizationStateWaitTdlibParameters':\n            case 'authorizationStateWaitTdlib': {\n                // control = (\n                //     <>\n                //         <SignInControl phone={this.phone} onPhoneEnter={this.handlePhoneEnter}/>\n                //         <ConfirmCodeControl phone={this.phone} onCodeEnter={this.handleCodeEnter} onChangePhone={this.handleChangePhone}/>\n                //         <PasswordControl passwordHint='hint' onPasswordEnter={this.handlePasswordEnter} onChangePhone={this.handleChangePhone}/>\n                //         <SignUpControl/>\n                //     </>);\n                control = <SignInControl defaultPhone={defaultPhone} />;\n                break;\n            }\n            case 'authorizationStateWaitCode': {\n                const { onChangePhone } = this.props;\n                const { terms_of_service, code_info } = authorizationState;\n\n                control = (\n                    <ConfirmCodeControl\n                        termsOfService={terms_of_service}\n                        codeInfo={code_info}\n                        onChangePhone={onChangePhone}\n                    />\n                );\n                break;\n            }\n            case 'authorizationStateWaitPassword': {\n                const { onChangePhone } = this.props;\n                const {\n                    password_hint,\n                    has_recovery_email_address,\n                    recovery_email_address_pattern\n                } = authorizationState;\n\n                control = (\n                    <PasswordControl\n                        passwordHint={password_hint}\n                        hasRecoveryEmailAddress={has_recovery_email_address}\n                        recoveryEmailAddressPattern={recovery_email_address_pattern}\n                        onChangePhone={onChangePhone}\n                    />\n                );\n                break;\n            }\n            default:\n                break;\n        }\n\n        return (\n            <div className='sign-in-wrap'>\n                <div className={classNames(classes.authorizationFormContent, 'authorization-form-content')}>\n                    {control}\n                </div>\n                <AuthErrorDialog />\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(AuthFormControl);\n"]},"metadata":{},"sourceType":"module"}