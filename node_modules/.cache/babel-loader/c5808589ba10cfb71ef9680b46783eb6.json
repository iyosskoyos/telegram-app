{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import withStyles from'@material-ui/core/styles/withStyles';import Dialog from'@material-ui/core/Dialog';import ChatInfo from'../ColumnRight/ChatInfo';import ApplicationStore from'../../Stores/ApplicationStore';import TdLibController from'../../Controllers/TdLibController';import'./ChatInfoDialog.css';var styles=function styles(theme){return{chatInfoRoot:{width:336},containerRoot:{alignItems:'start'},dialogRoot:{color:theme.palette.text.primary,zIndex:theme.zIndex.modal},paperRoot:{width:336}};};var ChatInfoDialog=/*#__PURE__*/function(_React$Component){_inherits(ChatInfoDialog,_React$Component);function ChatInfoDialog(){var _getPrototypeOf2;var _this;_classCallCheck(this,ChatInfoDialog);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ChatInfoDialog)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={chatId:ApplicationStore.dialogChatId};_this.handleClientUpdateDialogChatId=function(update){var chatId=update.chatId;_this.setState({chatId:chatId});};_this.handleClose=function(){TdLibController.clientUpdate({'@type':'clientUpdateDialogChatId',chatId:0});};return _this;}_createClass(ChatInfoDialog,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState,nextContext){var chatId=this.state.chatId;return nextState.chatId!==chatId;}},{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('clientUpdateDialogChatId',this.handleClientUpdateDialogChatId);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('clientUpdateDialogChatId',this.handleClientUpdateDialogChatId);}},{key:\"render\",value:function render(){var classes=this.props.classes;var chatId=this.state.chatId;if(!chatId)return null;return React.createElement(Dialog,{open:true,transitionDuration:0,onClose:this.handleClose,classes:{root:classes.dialogRoot,container:classes.containerRoot,paper:classes.paperRoot}},React.createElement(ChatInfo,{className:classes.chatInfoRoot,chatId:chatId,popup:true}));}}]);return ChatInfoDialog;}(React.Component);export default withStyles(styles)(ChatInfoDialog);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Popup/ChatInfoDialog.js"],"names":["React","withStyles","Dialog","ChatInfo","ApplicationStore","TdLibController","styles","theme","chatInfoRoot","width","containerRoot","alignItems","dialogRoot","color","palette","text","primary","zIndex","modal","paperRoot","ChatInfoDialog","state","chatId","dialogChatId","handleClientUpdateDialogChatId","update","setState","handleClose","clientUpdate","nextProps","nextState","nextContext","on","removeListener","classes","props","root","container","paper","Component"],"mappings":"kqBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAO,sBAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACrBC,YAAY,CAAE,CACVC,KAAK,CAAE,GADG,CADO,CAIrBC,aAAa,CAAE,CACXC,UAAU,CAAE,OADD,CAJM,CAOrBC,UAAU,CAAE,CACRC,KAAK,CAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBC,OADlB,CAERC,MAAM,CAAEV,KAAK,CAACU,MAAN,CAAaC,KAFb,CAPS,CAWrBC,SAAS,CAAE,CACPV,KAAK,CAAE,GADA,CAXU,CAAL,EAApB,C,GAgBMW,CAAAA,c,2aACFC,K,CAAQ,CACJC,MAAM,CAAElB,gBAAgB,CAACmB,YADrB,C,OAkBRC,8B,CAAiC,SAAAC,MAAM,CAAI,IAC/BH,CAAAA,MAD+B,CACpBG,MADoB,CAC/BH,MAD+B,CAGvC,MAAKI,QAAL,CAAc,CAAEJ,MAAM,CAANA,MAAF,CAAd,EACH,C,OAEDK,W,CAAc,UAAM,CAChBtB,eAAe,CAACuB,YAAhB,CAA6B,CACzB,QAAS,0BADgB,CAEzBN,MAAM,CAAE,CAFiB,CAA7B,EAIH,C,8GAzBqBO,S,CAAWC,S,CAAWC,W,CAAa,IAC7CT,CAAAA,MAD6C,CAClC,KAAKD,KAD6B,CAC7CC,MAD6C,CAGrD,MAAOQ,CAAAA,SAAS,CAACR,MAAV,GAAqBA,MAA5B,CACH,C,6DAEmB,CAChBlB,gBAAgB,CAAC4B,EAAjB,CAAoB,0BAApB,CAAgD,KAAKR,8BAArD,EACH,C,mEAEsB,CACnBpB,gBAAgB,CAAC6B,cAAjB,CAAgC,0BAAhC,CAA4D,KAAKT,8BAAjE,EACH,C,uCAeQ,IACGU,CAAAA,OADH,CACe,KAAKC,KADpB,CACGD,OADH,IAEGZ,CAAAA,MAFH,CAEc,KAAKD,KAFnB,CAEGC,MAFH,CAGL,GAAI,CAACA,MAAL,CAAa,MAAO,KAAP,CAEb,MACI,qBAAC,MAAD,EACI,IAAI,KADR,CAEI,kBAAkB,CAAE,CAFxB,CAGI,OAAO,CAAE,KAAKK,WAHlB,CAII,OAAO,CAAE,CAAES,IAAI,CAAEF,OAAO,CAACtB,UAAhB,CAA4ByB,SAAS,CAAEH,OAAO,CAACxB,aAA/C,CAA8D4B,KAAK,CAAEJ,OAAO,CAACf,SAA7E,CAJb,EAKI,oBAAC,QAAD,EAAU,SAAS,CAAEe,OAAO,CAAC1B,YAA7B,CAA2C,MAAM,CAAEc,MAAnD,CAA2D,KAAK,KAAhE,EALJ,CADJ,CASH,C,4BA9CwBtB,KAAK,CAACuC,S,EAmDnC,cAAetC,CAAAA,UAAU,CAACK,MAAD,CAAV,CAAmBc,cAAnB,CAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n"]},"metadata":{},"sourceType":"module"}