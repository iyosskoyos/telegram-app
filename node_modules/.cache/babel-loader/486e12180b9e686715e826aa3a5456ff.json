{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import Radio from'@material-ui/core/Radio';import RadioGroup from'@material-ui/core/RadioGroup';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormControl from'@material-ui/core/FormControl';import FormLabel from'@material-ui/core/FormLabel';import withStyles from'@material-ui/core/styles/withStyles';import red from'@material-ui/core/colors/red';import orange from'@material-ui/core/colors/orange';import amber from'@material-ui/core/colors/amber';import green from'@material-ui/core/colors/green';import blue from'@material-ui/core/colors/blue';import indigo from'@material-ui/core/colors/indigo';import deepPurple from'@material-ui/core/colors/deepPurple';import ApplicationStore from'../../Stores/ApplicationStore';var styles=function styles(theme){return{formControl:{margin:theme.spacing.unit*3},group:{margin:\"\".concat(theme.spacing.unit,\"px 0\")},redRoot:{color:red[600],'&$checked':{color:red[500]}},orangeRoot:{color:orange[600],'&$checked':{color:orange[500]}},amberRoot:{color:amber[600],'&$checked':{color:amber[500]}},greenRoot:{color:green[600],'&$checked':{color:green[500]}},blueRoot:{color:blue[600],'&$checked':{color:blue[500]}},indigoRoot:{color:indigo[600],'&$checked':{color:indigo[500]}},deepPurpleRoot:{color:deepPurple[600],'&$checked':{color:deepPurple[500]}},checked:{}};};var ThemePicker=/*#__PURE__*/function(_React$Component){_inherits(ThemePicker,_React$Component);function ThemePicker(props){var _this;_classCallCheck(this,ThemePicker);_this=_possibleConstructorReturn(this,_getPrototypeOf(ThemePicker).call(this,props));_this.handleChange=function(event){_this.setState({type:event.target.value});ApplicationStore.emit('clientUpdateThemeChanging',{type:event.target.value,primary:_this.getColor(_this.state.color)});};_this.handleAccentChange=function(event){_this.setState({color:event.target.value});ApplicationStore.emit('clientUpdateThemeChanging',{type:_this.state.type,primary:_this.getColor(event.target.value)});};_this.getColorString=function(value){switch(value){case red['500']:return'red';case orange['500']:return'orange';case amber['500']:return'amber';case green['500']:return'green';case blue['500']:return'blue';case indigo['500']:return'indigo';case deepPurple['500']:return'deepPurple';}return null;};_this.getColor=function(value){switch(value){case'red':return red;case'orange':return orange;case'amber':return amber;case'green':return green;case'blue':return blue;case'indigo':return indigo;case'deepPurple':return deepPurple;}return null;};_this.handleClose=function(){_this.setState({open:false});};_this.open=function(){_this.setState({open:true});};_this.state={open:false,type:_this.props.theme.palette.type,color:_this.getColorString(_this.props.theme.palette.primary.main)};return _this;}_createClass(ThemePicker,[{key:\"render\",value:function render(){var classes=this.props.classes;var _this$state=this.state,type=_this$state.type,color=_this$state.color;return React.createElement(Dialog,{transitionDuration:0,open:this.state.open,onClose:this.handleClose,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"},React.createElement(DialogTitle,{id:\"alert-dialog-title\"},\"Appearance\"),React.createElement(DialogContent,null,React.createElement(FormControl,{component:\"fieldset\",className:classes.formControl},React.createElement(FormLabel,{focused:true,component:\"legend\"},\"Theme\"),React.createElement(RadioGroup,{\"aria-label\":\"theme\",name:\"theme1\",className:classes.group,value:type,onChange:this.handleChange},React.createElement(FormControlLabel,{value:\"light\",control:React.createElement(Radio,{color:\"primary\"}),label:\"Light\"}),React.createElement(FormControlLabel,{value:\"dark\",control:React.createElement(Radio,{color:\"primary\"}),label:\"Dark\"}))),React.createElement(FormControl,{component:\"fieldset\",className:classes.formControl},React.createElement(FormLabel,{focused:true,component:\"legend\"},\"Accent\"),React.createElement(RadioGroup,{\"aria-label\":\"accent\",name:\"accent1\",className:classes.group,value:color,onChange:this.handleAccentChange},React.createElement(FormControlLabel,{value:\"red\",control:React.createElement(Radio,{classes:{root:classes.redRoot,checked:classes.checked}}),label:\"Red\"}),React.createElement(FormControlLabel,{value:\"orange\",control:React.createElement(Radio,{classes:{root:classes.orangeRoot,checked:classes.checked}}),label:\"Orange\"}),React.createElement(FormControlLabel,{value:\"amber\",control:React.createElement(Radio,{classes:{root:classes.amberRoot,checked:classes.checked}}),label:\"Amber\"}),React.createElement(FormControlLabel,{value:\"green\",control:React.createElement(Radio,{classes:{root:classes.greenRoot,checked:classes.checked}}),label:\"Green\"}),React.createElement(FormControlLabel,{value:\"blue\",control:React.createElement(Radio,{classes:{root:classes.blueRoot,checked:classes.checked}}),label:\"Blue\"}),React.createElement(FormControlLabel,{value:\"indigo\",control:React.createElement(Radio,{classes:{root:classes.indigoRoot,checked:classes.checked}}),label:\"Indigo\"}),React.createElement(FormControlLabel,{value:\"deepPurple\",control:React.createElement(Radio,{classes:{root:classes.deepPurpleRoot,checked:classes.checked}}),label:\"Deep Purple\"})))));}}]);return ThemePicker;}(React.Component);export default withStyles(styles,{withTheme:true})(ThemePicker);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnLeft/ThemePicker.js"],"names":["React","Dialog","DialogContent","DialogTitle","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","withStyles","red","orange","amber","green","blue","indigo","deepPurple","ApplicationStore","styles","theme","formControl","margin","spacing","unit","group","redRoot","color","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","checked","ThemePicker","props","handleChange","event","setState","type","target","value","emit","primary","getColor","state","handleAccentChange","getColorString","handleClose","open","palette","main","classes","root","Component","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n"]},"metadata":{},"sourceType":"module"}