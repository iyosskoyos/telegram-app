{"ast":null,"code":"import _slicedToArray from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import CircularProgress from'@material-ui/core/CircularProgress';import CloseIcon from'@material-ui/icons/Close';import{ANIMATION_DURATION_300MS}from'../../Constants';import FileStore from'../../Stores/FileStore';import'./FileProgress.css';var circleStyle={circle:'file-progress-circle'};var FileProgress=/*#__PURE__*/function(_React$Component){_inherits(FileProgress,_React$Component);function FileProgress(props){var _this;_classCallCheck(this,FileProgress);_this=_possibleConstructorReturn(this,_getPrototypeOf(FileProgress).call(this,props));_this.onUpdateFile=function(update){var currentFile=_this.state.file;var nextFile=update.file;if(currentFile&&currentFile.id===nextFile.id){_this.setState({file:nextFile,prevFile:currentFile});}};_this.isDownloading=function(file,prevFile){if(!_this.props.download)return false;var wasActive=prevFile&&prevFile.local&&prevFile.local.is_downloading_active;var isActive=file&&file.local&&file.local.is_downloading_active;return wasActive||isActive;};_this.isUploading=function(file,prevFile){if(!_this.props.upload)return false;var wasActive=prevFile&&prevFile.remote&&prevFile.remote.is_uploading_active;var isActive=file&&file.remote&&file.remote.is_uploading_active;return wasActive||isActive;};_this.getProgressParams=function(file,prevFile){var local=file.local,remote=file.remote;var wasActive=false;var isActive=false;var isCompleted=false;var progressSize=0;var size=0;if(_this.isDownloading(file,prevFile)){wasActive=prevFile&&prevFile.local&&prevFile.local.is_downloading_active;isActive=local.is_downloading_active;isCompleted=local.is_downloading_completed;progressSize=local.downloaded_size;size=file.size;// console.log(\n//     `FileProgress.getProgressParams isDownloading id=${\n//         file.id\n//     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n//     file,\n//     prevFile\n// );\n}else if(_this.isUploading(file,prevFile)){wasActive=prevFile&&prevFile.remote&&prevFile.remote.is_uploading_active;isActive=remote.is_uploading_active;isCompleted=remote.is_uploading_completed;progressSize=remote.uploaded_size;size=file.size;// console.log(\n//     `FileProgress.getProgressParams isUploading id=${\n//         file.id\n//     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n//     file,\n//     prevFile\n// );\n}else{// console.log(\n//     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n//         this.props.upload\n//     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n//     file,\n//     prevFile\n// );\n}return[wasActive,isActive,isCompleted,progressSize,size];};_this.completeAnimation=false;var _file=_this.props.file;_this.state={prevPropsFile:_file,prevFile:null,file:FileStore.get(_file.id)||_file};return _this;}_createClass(FileProgress,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){var _this$props=this.props,download=_this$props.download,upload=_this$props.upload,icon=_this$props.icon,thumbnailSrc=_this$props.thumbnailSrc;if(nextProps.thumbnailSrc!==thumbnailSrc){return true;}if(nextProps.icon!==icon){return true;}if(this.isDownloading(nextState.file,nextState.prevFile)&&!download){return false;}if(this.isUploading(nextState.file,nextState.prevFile)&&!upload){return false;}var nextLocal=nextState.file?nextState.file.local:null;var nextIdbKey=nextState.file?nextState.file.idb_key:null;var prevLocal=this.state.prevFile?this.state.prevFile.local:null;var prevIdbKey=this.state.prevFile?this.state.prevFile.idb_key:null;var isDownloadingCompleted=prevLocal&&nextLocal&&!prevLocal.is_downloading_completed&&nextLocal.is_downloading_completed;var receiveIdbKey=nextIdbKey&&!prevIdbKey;if(nextState.file.id===this.state.file.id&&isDownloadingCompleted&&receiveIdbKey){return false;}if(nextState.file!==this.state.file){return true;}if(nextState.prevFile!==this.state.prevFile){return true;}return false;}},{key:\"componentDidMount\",value:function componentDidMount(){this.mount=true;FileStore.on('updateFile',this.onUpdateFile);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.mount=false;FileStore.removeListener('updateFile',this.onUpdateFile);}},{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,thumbnailSrc=_this$props2.thumbnailSrc,cancelButton=_this$props2.cancelButton,zIndex=_this$props2.zIndex,icon=_this$props2.icon,completeIcon=_this$props2.completeIcon;var _this$state=this.state,file=_this$state.file,prevFile=_this$state.prevFile;if(!file)return null;var _this$getProgressPara=this.getProgressParams(file,prevFile),_this$getProgressPara2=_slicedToArray(_this$getProgressPara,5),wasActive=_this$getProgressPara2[0],isActive=_this$getProgressPara2[1],isCompleted=_this$getProgressPara2[2],progressSize=_this$getProgressPara2[3],size=_this$getProgressPara2[4];var inProgress=isActive;var progress=0;if(isActive){progress=progressSize&&size?100-(size-progressSize)/size*100:1;}var startCompleteAnimation=wasActive&&!isActive;if(startCompleteAnimation){this.completeAnimation=true;// console.log('FileProgress.render animationComplete=true');\nprogress=isCompleted?100:0;inProgress=true;setTimeout(function(){_this2.completeAnimation=false;if(!_this2.mount)return;// console.log('FileProgress.render animationComplete=false');\n_this2.setState({prevFile:null});},ANIMATION_DURATION_300MS);}var style={zIndex:zIndex,background:!thumbnailSrc&&typeof thumbnailSrc!=='undefined'?null:'rgba(0, 0, 0, 0.25)'};var isDownloadingCompleted=file&&file.local&&(file.local.is_downloading_completed||file.idb_key||file.local.is_uploading_completed)&&!this.completeAnimation&&!isActive;// console.log(\n//     `FileProgress.render \\\\\n//     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n//     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n//     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n//     is_downloading_completed=${isDownloadingCompleted}\n//     completeIcon=${completeIcon}`,\n//     file,\n//     prevFile\n// );\n//cancelButton = true;\n//inProgress = true;\nif(isDownloadingCompleted){// console.log('FileProgress.render completeIcon');\nif(completeIcon){return React.createElement(\"div\",{className:\"file-progress\",style:style},React.createElement(\"div\",{className:\"file-progress-icon\"},completeIcon));}return null;}if(inProgress||this.completeAnimation){// console.log('FileProgress.render inProgressIcon');\nreturn React.createElement(\"div\",{className:\"file-progress\",style:style},React.createElement(\"div\",{className:\"file-progress-indicator\"},React.createElement(CircularProgress,{classes:circleStyle,variant:\"static\",value:progress,size:42,thickness:2})),cancelButton&&React.createElement(\"div\",{className:\"file-progress-icon\"},React.createElement(CloseIcon,null)));}if(icon){// console.log('FileProgress.render icon');\nreturn React.createElement(\"div\",{className:\"file-progress\",style:style},React.createElement(\"div\",{className:\"file-progress-icon\"},icon));}return null;}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){var file=props.file;var prevPropsFile=state.prevPropsFile;if(file&&prevPropsFile&&file.id!==prevPropsFile.id){return{prevPropsFile:file,prevFile:null,file:FileStore.get(file.id)||file};}return null;}}]);return FileProgress;}(React.Component);FileProgress.defaultProps={cancelButton:false,download:true,upload:false};export default FileProgress;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Viewer/FileProgress.js"],"names":["React","CircularProgress","CloseIcon","ANIMATION_DURATION_300MS","FileStore","circleStyle","circle","FileProgress","props","onUpdateFile","update","currentFile","state","file","nextFile","id","setState","prevFile","isDownloading","download","wasActive","local","is_downloading_active","isActive","isUploading","upload","remote","is_uploading_active","getProgressParams","isCompleted","progressSize","size","is_downloading_completed","downloaded_size","is_uploading_completed","uploaded_size","completeAnimation","prevPropsFile","get","nextProps","nextState","icon","thumbnailSrc","nextLocal","nextIdbKey","idb_key","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","on","removeListener","cancelButton","zIndex","completeIcon","inProgress","progress","startCompleteAnimation","setTimeout","style","background","Component","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n"]},"metadata":{},"sourceType":"module"}