{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import ListItem from'@material-ui/core/ListItem';import ChatControl from'../Tile/ChatControl';import GroupsInCommonHeader from'./GroupsInCommonHeader';import{getChatUserId}from'../../Utils/Chat';import{loadChatsContent}from'../../Utils/File';import{openChat}from'../../Actions/Client';import FileStore from'../../Stores/FileStore';import TdLibController from'../../Controllers/TdLibController';import'./GroupsInCommon.css';var GroupsInCommon=/*#__PURE__*/function(_React$Component){_inherits(GroupsInCommon,_React$Component);function GroupsInCommon(props){var _this;_classCallCheck(this,GroupsInCommon);_this=_possibleConstructorReturn(this,_getPrototypeOf(GroupsInCommon).call(this,props));_this.handleSelect=function(chatId){var popup=_this.props.popup;openChat(chatId);if(popup){TdLibController.clientUpdate({'@type':'clientUpdateDialogChatId',chatId:0});}};_this.state={chatIds:[]};return _this;}_createClass(GroupsInCommon,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var chatId=this.props.chatId;var userId=getChatUserId(chatId);if(!userId)return;TdLibController.send({'@type':'getGroupsInCommon',user_id:userId,offset_chat_id:0,limit:100}).then(function(result){var store=FileStore.getStore();loadChatsContent(store,result.chat_ids);_this2.setState({chatIds:result.chat_ids});});}},{key:\"render\",value:function render(){var _this3=this;var _this$props=this.props,minHeight=_this$props.minHeight,onClose=_this$props.onClose,popup=_this$props.popup;var chatIds=this.state.chatIds;var chats=chatIds.map(function(x){return React.createElement(ListItem,{button:true,key:x},React.createElement(ChatControl,{chatId:x,onSelect:_this3.handleSelect}));});var content=React.createElement(React.Fragment,null,React.createElement(GroupsInCommonHeader,{onClose:onClose}),React.createElement(\"div\",{className:\"groups-in-common-list\",style:{minHeight:minHeight}},chats));return popup?React.createElement(React.Fragment,null,content):React.createElement(\"div\",{className:\"groups-in-common\"},content);}}]);return GroupsInCommon;}(React.Component);GroupsInCommon.defaultProps={popup:false,minHeight:0};export default GroupsInCommon;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnRight/GroupsInCommon.js"],"names":["React","ListItem","ChatControl","GroupsInCommonHeader","getChatUserId","loadChatsContent","openChat","FileStore","TdLibController","GroupsInCommon","props","handleSelect","chatId","popup","clientUpdate","state","chatIds","userId","send","user_id","offset_chat_id","limit","then","result","store","getStore","chat_ids","setState","minHeight","onClose","chats","map","x","content","Component","defaultProps"],"mappings":"kqBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OAASC,gBAAT,KAAiC,kBAAjC,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAO,sBAAP,C,GAEMC,CAAAA,c,oFACF,wBAAYC,KAAZ,CAAmB,gDACf,gFAAMA,KAAN,GADe,MA2BnBC,YA3BmB,CA2BJ,SAAAC,MAAM,CAAI,IACbC,CAAAA,KADa,CACH,MAAKH,KADF,CACbG,KADa,CAGrBP,QAAQ,CAACM,MAAD,CAAR,CAEA,GAAIC,KAAJ,CAAW,CACPL,eAAe,CAACM,YAAhB,CAA6B,CACzB,QAAS,0BADgB,CAEzBF,MAAM,CAAE,CAFiB,CAA7B,EAIH,CACJ,CAtCkB,CAGf,MAAKG,KAAL,CAAa,CACTC,OAAO,CAAE,EADA,CAAb,CAHe,aAMlB,C,wFAEmB,oBACRJ,CAAAA,MADQ,CACG,KAAKF,KADR,CACRE,MADQ,CAGhB,GAAMK,CAAAA,MAAM,CAAGb,aAAa,CAACQ,MAAD,CAA5B,CACA,GAAI,CAACK,MAAL,CAAa,OAEbT,eAAe,CAACU,IAAhB,CAAqB,CACjB,QAAS,mBADQ,CAEjBC,OAAO,CAAEF,MAFQ,CAGjBG,cAAc,CAAE,CAHC,CAIjBC,KAAK,CAAE,GAJU,CAArB,EAKGC,IALH,CAKQ,SAAAC,MAAM,CAAI,CACd,GAAMC,CAAAA,KAAK,CAAGjB,SAAS,CAACkB,QAAV,EAAd,CACApB,gBAAgB,CAACmB,KAAD,CAAQD,MAAM,CAACG,QAAf,CAAhB,CAEA,MAAI,CAACC,QAAL,CAAc,CAAEX,OAAO,CAAEO,MAAM,CAACG,QAAlB,CAAd,EACH,CAVD,EAWH,C,uCAeQ,iCACiC,KAAKhB,KADtC,CACGkB,SADH,aACGA,SADH,CACcC,OADd,aACcA,OADd,CACuBhB,KADvB,aACuBA,KADvB,IAEGG,CAAAA,OAFH,CAEe,KAAKD,KAFpB,CAEGC,OAFH,CAIL,GAAMc,CAAAA,KAAK,CAAGd,OAAO,CAACe,GAAR,CAAY,SAAAC,CAAC,QACvB,qBAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,GAAG,CAAEA,CAAtB,EACI,oBAAC,WAAD,EAAa,MAAM,CAAEA,CAArB,CAAwB,QAAQ,CAAE,MAAI,CAACrB,YAAvC,EADJ,CADuB,EAAb,CAAd,CAMA,GAAMsB,CAAAA,OAAO,CACT,wCACI,oBAAC,oBAAD,EAAsB,OAAO,CAAEJ,OAA/B,EADJ,CAEI,2BAAK,SAAS,CAAC,uBAAf,CAAuC,KAAK,CAAE,CAAED,SAAS,CAATA,SAAF,CAA9C,EACKE,KADL,CAFJ,CADJ,CASA,MAAOjB,CAAAA,KAAK,CAAG,wCAAGoB,OAAH,CAAH,CAAoB,2BAAK,SAAS,CAAC,kBAAf,EAAmCA,OAAnC,CAAhC,CACH,C,4BA7DwBjC,KAAK,CAACkC,S,EAuEnCzB,cAAc,CAAC0B,YAAf,CAA8B,CAC1BtB,KAAK,CAAE,KADmB,CAE1Be,SAAS,CAAE,CAFe,CAA9B,CAKA,cAAenB,CAAAA,cAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n"]},"metadata":{},"sourceType":"module"}