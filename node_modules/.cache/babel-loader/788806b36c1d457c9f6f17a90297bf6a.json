{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/Additional/MentionLink.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\n\nclass MentionLink extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = async event => {\n      event.stopPropagation();\n      event.preventDefault();\n      const _this$props = this.props,\n            userId = _this$props.userId,\n            username = _this$props.username,\n            popup = _this$props.popup;\n\n      if (userId) {\n        openUser(userId, popup);\n      } else if (username) {\n        const chat = await TdLibController.send({\n          '@type': 'searchPublicChat',\n          username\n        }).catch(() => {\n          this.setState({\n            error: true\n          });\n        });\n\n        if (chat) {\n          openChat(chat.id, null, popup);\n        }\n      }\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        error: false\n      });\n    };\n\n    this.handleDialogClick = event => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    this.state = {};\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const userId = props.userId,\n          username = props.username;\n\n    if (state.prevUserId !== userId || state.prevUsername !== username) {\n      return {\n        prevUserId: userId,\n        prevUsername: username,\n        error: false\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          children = _this$props2.children,\n          t = _this$props2.t,\n          username = _this$props2.username;\n    const error = this.state.error;\n    return React.createElement(React.Fragment, null, React.createElement(\"a\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, children), error && React.createElement(Dialog, {\n      transitionDuration: 0,\n      open: true,\n      onClose: this.handleClose,\n      onClick: this.handleDialogClick,\n      \"aria-labelledby\": \"confirm-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"confirm-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, t('Error')), React.createElement(DialogContent, {\n      classes: {\n        root: 'safe-link-content-root'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Can't find username \".concat(username, \".\"))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, t('Ok')))));\n  }\n\n}\n\nMentionLink.propTypes = {\n  userId: PropTypes.number,\n  username: PropTypes.string,\n  popup: PropTypes.bool\n};\nMentionLink.defaultProps = {\n  popup: true\n};\nexport default withTranslation()(MentionLink);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Additional/MentionLink.js"],"names":["React","PropTypes","withTranslation","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","openChat","openUser","TdLibController","MentionLink","Component","constructor","props","handleClick","event","stopPropagation","preventDefault","userId","username","popup","chat","send","catch","setState","error","id","handleClose","handleDialogClick","state","getDerivedStateFromProps","prevUserId","prevUsername","render","children","t","root","propTypes","number","string","bool","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                openChat(chat.id, null, popup);\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a onClick={this.handleClick}>{children}</a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n"]},"metadata":{},"sourceType":"module"}