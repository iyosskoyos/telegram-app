{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/Viewer/MediaViewerButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = event => {\n      event.stopPropagation();\n      const _this$props = this.props,\n            disabled = _this$props.disabled,\n            onClick = _this$props.onClick;\n      if (disabled) return;\n      onClick(event);\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          disabled = _this$props2.disabled,\n          grow = _this$props2.grow,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          style = _this$props2.style;\n    const cx = classNames(disabled ? 'media-viewer-button-disabled' : 'media-viewer-button', {\n      grow: grow\n    }, className);\n    return React.createElement(\"div\", {\n      className: cx,\n      style: style,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, children);\n  }\n\n}\n\nMediaViewerButton.propTypes = {\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default MediaViewerButton;","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/Viewer/MediaViewerButton.js"],"names":["React","PropTypes","classNames","MediaViewerButton","Component","handleClick","event","stopPropagation","props","disabled","onClick","render","grow","children","className","style","cx","propTypes","bool","func"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,yBAAP;;AAEA,MAAMC,iBAAN,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;AAAA;AAAA;;AAAA,SAC5CC,WAD4C,GAC9BC,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACC,eAAN;AADmB,0BAGW,KAAKC,KAHhB;AAAA,YAGXC,QAHW,eAGXA,QAHW;AAAA,YAGDC,OAHC,eAGDA,OAHC;AAKnB,UAAID,QAAJ,EAAc;AAEdC,MAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,KAT2C;AAAA;;AAW5CK,EAAAA,MAAM,GAAG;AAAA,yBACkD,KAAKH,KADvD;AAAA,UACGC,QADH,gBACGA,QADH;AAAA,UACaG,IADb,gBACaA,IADb;AAAA,UACmBC,QADnB,gBACmBA,QADnB;AAAA,UAC6BC,SAD7B,gBAC6BA,SAD7B;AAAA,UACwCC,KADxC,gBACwCA,KADxC;AAGL,UAAMC,EAAE,GAAGd,UAAU,CACjBO,QAAQ,GAAG,8BAAH,GAAoC,qBAD3B,EAEjB;AAAEG,MAAAA,IAAI,EAAEA;AAAR,KAFiB,EAGjBE,SAHiB,CAArB;AAMA,WACI;AAAK,MAAA,SAAS,EAAEE,EAAhB;AAAoB,MAAA,KAAK,EAAED,KAA3B;AAAkC,MAAA,OAAO,EAAE,KAAKV,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKQ,QADL,CADJ;AAKH;;AAzB2C;;AA4BhDV,iBAAiB,CAACc,SAAlB,GAA8B;AAC1BR,EAAAA,QAAQ,EAAER,SAAS,CAACiB,IADM;AAE1BR,EAAAA,OAAO,EAAET,SAAS,CAACkB;AAFO,CAA9B;AAKA,eAAehB,iBAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n"]},"metadata":{},"sourceType":"module"}