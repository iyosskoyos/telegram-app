{"ast":null,"code":"import _defineProperty from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React,{Component}from'react';import classNames from'classnames';import withStyles from'@material-ui/core/styles/withStyles';import BookmarkBorderIcon from'@material-ui/icons/BookmarkBorder';import ChatStatus from'./ChatStatus';import{getChatLetters,isMeChat,isPrivateChat}from'../../Utils/Chat';import{getSrc,loadChatContent}from'../../Utils/File';import ChatStore from'../../Stores/ChatStore';import FileStore from'../../Stores/FileStore';import'./ChatTile.css';var styles={statusRoot:{position:'absolute',right:1,bottom:1,zIndex:1},statusIcon:{},iconIndicator:{}};var ChatTile=/*#__PURE__*/function(_Component){_inherits(ChatTile,_Component);function ChatTile(props){var _this;_classCallCheck(this,ChatTile);_this=_possibleConstructorReturn(this,_getPrototypeOf(ChatTile).call(this,props));_this.onFastUpdatingComplete=function(update){_this.forceUpdate();};_this.onClientUpdateChatBlob=function(update){var chatId=_this.props.chatId;if(chatId!==update.chatId)return;if(_this.state.loaded){_this.setState({loaded:false});}else{_this.forceUpdate();}};_this.onUpdateChatPhoto=function(update){var chatId=_this.props.chatId;var chat_id=update.chat_id,photo=update.photo;if(chat_id!==chatId)return;if(_this.state.loaded){_this.setState({loaded:false});}else{_this.forceUpdate();}if(photo){var store=FileStore.getStore();loadChatContent(store,chatId);}};_this.onUpdateChatTitle=function(update){var chatId=_this.props.chatId;var chat_id=update.chat_id;if(chat_id!==chatId)return;_this.forceUpdate();};_this.handleSelect=function(event){var _this$props=_this.props,chatId=_this$props.chatId,onSelect=_this$props.onSelect;if(!onSelect)return;event.stopPropagation();onSelect(chatId);};_this.handleLoad=function(){_this.setState({loaded:true});};_this.state={loaded:false};return _this;}_createClass(ChatTile,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextProps.chatId!==this.props.chatId){return true;}if(nextProps.theme!==this.props.theme){return true;}if(nextState.loaded!==this.state.loaded){return true;}return false;}},{key:\"componentDidMount\",value:function componentDidMount(){ChatStore.on('clientUpdateFastUpdatingComplete',this.onFastUpdatingComplete);FileStore.on('clientUpdateChatBlob',this.onClientUpdateChatBlob);ChatStore.on('updateChatPhoto',this.onUpdateChatPhoto);ChatStore.on('updateChatTitle',this.onUpdateChatTitle);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ChatStore.removeListener('clientUpdateFastUpdatingComplete',this.onFastUpdatingComplete);FileStore.removeListener('clientUpdateChatBlob',this.onClientUpdateChatBlob);ChatStore.removeListener('updateChatPhoto',this.onUpdateChatPhoto);ChatStore.removeListener('updateChatTitle',this.onUpdateChatTitle);}},{key:\"render\",value:function render(){var _this$props2=this.props,classes=_this$props2.classes,chatId=_this$props2.chatId,showOnline=_this$props2.showOnline,showSavedMessages=_this$props2.showSavedMessages,onSelect=_this$props2.onSelect;var loaded=this.state.loaded;if(isMeChat(chatId)&&showSavedMessages){var _className=classNames('tile-photo','tile_color_4',{pointer:onSelect});return React.createElement(\"div\",{className:\"chat-tile\",onClick:this.handleSelect},React.createElement(\"div\",{className:_className},React.createElement(\"div\",{className:\"tile-saved-messages\"},React.createElement(BookmarkBorderIcon,null))));}var chat=ChatStore.get(chatId);if(!chat)return null;var photo=chat.photo;var letters=getChatLetters(chat);var src=getSrc(photo?photo.small:null);var tileLoaded=src&&loaded;var tileColor=\"tile_color_\".concat(Math.abs(chatId)%8+1);var className=classNames('tile-photo',_defineProperty({},tileColor,!tileLoaded),{pointer:onSelect});return React.createElement(\"div\",{className:\"chat-tile\",onClick:this.handleSelect},!tileLoaded&&React.createElement(\"div\",{className:className},React.createElement(\"span\",{className:\"tile-text\"},letters)),src&&React.createElement(\"img\",{className:className,src:src,onLoad:this.handleLoad,draggable:false,alt:\"\"}),showOnline&&isPrivateChat(chatId)&&React.createElement(ChatStatus,{chatId:chatId,classes:{root:classes.statusRoot,icon:classes.statusIcon,iconIndicator:classes.iconIndicator}}));}}]);return ChatTile;}(Component);ChatTile.defaultProps={showSavedMessages:true,showOnline:false};export default withStyles(styles,{withTheme:true})(ChatTile);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Tile/ChatTile.js"],"names":["React","Component","classNames","withStyles","BookmarkBorderIcon","ChatStatus","getChatLetters","isMeChat","isPrivateChat","getSrc","loadChatContent","ChatStore","FileStore","styles","statusRoot","position","right","bottom","zIndex","statusIcon","iconIndicator","ChatTile","props","onFastUpdatingComplete","update","forceUpdate","onClientUpdateChatBlob","chatId","state","loaded","setState","onUpdateChatPhoto","chat_id","photo","store","getStore","onUpdateChatTitle","handleSelect","event","onSelect","stopPropagation","handleLoad","nextProps","nextState","theme","on","removeListener","classes","showOnline","showSavedMessages","className","pointer","chat","get","letters","src","small","tileLoaded","tileColor","Math","abs","root","icon","defaultProps","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    iconIndicator: {}\n};\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n        const { loaded } = this.state;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className='chat-tile' onClick={this.handleSelect}>\n                    <div className={className}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !tileLoaded }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className={className} src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus\n                        chatId={chatId}\n                        classes={{\n                            root: classes.statusRoot,\n                            icon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTile);\n"]},"metadata":{},"sourceType":"module"}