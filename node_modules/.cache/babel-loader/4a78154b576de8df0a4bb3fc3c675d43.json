{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import{getSrc}from'../../Utils/File';import{isBlurredThumbnail}from'../../Utils/Media';import{hasVideoNote}from'../../Utils/Message';import FileStore from'../../Stores/FileStore';import'./ReplyTile.css';var ReplyTile=/*#__PURE__*/function(_React$Component){_inherits(ReplyTile,_React$Component);function ReplyTile(){var _getPrototypeOf2;var _this;_classCallCheck(this,ReplyTile);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ReplyTile)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.onClientUpdatePhotoBlob=function(update){var _this$props=_this.props,chatId=_this$props.chatId,messageId=_this$props.messageId,photoSize=_this$props.photoSize;if(!photoSize)return;var photo=photoSize.photo;if(!photo)return;if(update.chatId===chatId&&update.messageId===messageId&&update.fileId===photo.id){_this.forceUpdate();}};return _this;}_createClass(ReplyTile,[{key:\"componentDidMount\",value:function componentDidMount(){FileStore.on('clientUpdateAnimationThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.on('clientUpdateAudioThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.on('clientUpdateDocumentThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.on('clientUpdatePhotoBlob',this.onClientUpdatePhotoBlob);FileStore.on('clientUpdateStickerThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.on('clientUpdateVideoThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.on('clientUpdateVideoNoteThumbnailBlob',this.onClientUpdatePhotoBlob);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){FileStore.removeListener('clientUpdateAnimationThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.removeListener('clientUpdateAudioThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.removeListener('clientUpdateDocumentThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.removeListener('clientUpdatePhotoBlob',this.onClientUpdatePhotoBlob);FileStore.removeListener('clientUpdateStickerThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.removeListener('clientUpdateVideoThumbnailBlob',this.onClientUpdatePhotoBlob);FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob',this.onClientUpdatePhotoBlob);}},{key:\"render\",value:function render(){var _this$props2=this.props,chatId=_this$props2.chatId,messageId=_this$props2.messageId,photoSize=_this$props2.photoSize;if(!photoSize)return null;var photo=photoSize.photo;if(!photo)return null;var src=getSrc(photo);var isBlurred=isBlurredThumbnail(photo);var isVideoNote=hasVideoNote(chatId,messageId);return React.createElement(\"div\",{className:\"reply-tile\"},React.createElement(\"img\",{className:classNames('reply-tile-photo',{'reply-tile-photo-round':isVideoNote},{'reply-tile-photo-loading':!src},{'media-blurred':isBlurred}),draggable:false,src:src,alt:\"\"}));}}]);return ReplyTile;}(React.Component);export default ReplyTile;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Tile/ReplyTile.js"],"names":["React","classNames","getSrc","isBlurredThumbnail","hasVideoNote","FileStore","ReplyTile","onClientUpdatePhotoBlob","update","props","chatId","messageId","photoSize","photo","fileId","id","forceUpdate","on","removeListener","src","isBlurred","isVideoNote","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n"]},"metadata":{},"sourceType":"module"}