{"ast":null,"code":"var _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/UserStatusControl.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n  userStatusSubtitle: {\n    color: theme.palette.text.secondary\n  },\n  userStatusAccentSubtitle: {\n    color: theme.palette.primary.dark + '!important'\n  }\n});\n\nclass UserStatusControl extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateUserStatus = update => {\n      const userId = this.props.userId;\n      const user = UserStore.get(userId);\n\n      if (userId === update.user_id) {\n        this.setState({\n          status: getUserStatus(user),\n          isAccent: isUserOnline(user)\n        });\n      }\n    };\n\n    const _userId = this.props.userId;\n\n    const _user = UserStore.get(_userId);\n\n    this.state = {\n      prevUserId: _userId,\n      status: getUserStatus(_user),\n      isAccent: isUserOnline(_user)\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.userId !== state.prevUserId) {\n      const userId = props.userId;\n      const user = UserStore.get(userId);\n      return {\n        prevUserId: userId,\n        status: getUserStatus(user),\n        isAccent: isUserOnline(user)\n      };\n    }\n\n    return null;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const _this$props = this.props,\n          userId = _this$props.userId,\n          theme = _this$props.theme;\n    const _this$state = this.state,\n          status = _this$state.status,\n          isAccent = _this$state.isAccent;\n\n    if (nextProps.theme !== theme) {\n      return true;\n    }\n\n    if (nextProps.userId !== userId) {\n      return true;\n    }\n\n    if (nextState.status !== status) {\n      return true;\n    }\n\n    if (nextState.isAccent !== isAccent) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n  }\n\n  componentWillUnmount() {\n    UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          status = _this$state2.status,\n          isAccent = _this$state2.isAccent;\n    return React.createElement(\"div\", {\n      className: classNames('dialog-content', classes.userStatusSubtitle, {\n        'accent-color': isAccent,\n        [classes.userStatusAccentSubtitle]: isAccent\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, status);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(UserStatusControl);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/UserStatusControl.js"],"names":["React","classNames","withStyles","getUserStatus","isUserOnline","UserStore","styles","theme","userStatusSubtitle","color","palette","text","secondary","userStatusAccentSubtitle","primary","dark","UserStatusControl","Component","constructor","props","onUpdateUserStatus","update","userId","user","get","user_id","setState","status","isAccent","state","prevUserId","getDerivedStateFromProps","shouldComponentUpdate","nextProps","nextState","componentDidMount","on","componentWillUnmount","removeListener","render","classes","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n"]},"metadata":{},"sourceType":"module"}