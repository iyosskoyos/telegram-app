{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import{isChatMuted}from'../../Utils/Chat';import{debounce}from'../../Utils/Common';import{toggleChatNotificationSettings}from'../../Actions/Chat';import{NOTIFICATION_DEBOUNCE_DELAY_MS}from'../../Constants';import ChatStore from'../../Stores/ChatStore';import NotificationStore from'../../Stores/NotificationStore';var NotificationsControl=/*#__PURE__*/function(_React$Component){_inherits(NotificationsControl,_React$Component);function NotificationsControl(props){var _this;_classCallCheck(this,NotificationsControl);_this=_possibleConstructorReturn(this,_getPrototypeOf(NotificationsControl).call(this,props));_this.onUpdateChatNotificationSettings=function(update){var chat_id=update.chat_id;var chatId=_this.props.chatId;if(!chat_id)return;if(chat_id!==chatId)return;_this.setState({isMuted:isChatMuted(chatId)});};_this.onUpdateScopeNotificationSettings=function(update){var chatId=_this.props.chatId;var chat=ChatStore.get(chatId);switch(update.scope['@type']){case'notificationSettingsScopeGroupChats':{if(chat.type['@type']==='chatTypeBasicGroup'||chat.type['@type']==='chatTypeSupergroup'){_this.setState({isMuted:isChatMuted(chatId)});}break;}case'notificationSettingsScopePrivateChats':{if(chat.type['@type']==='chatTypePrivate'||chat.type['@type']==='chatTypeSecret'){_this.setState({isMuted:isChatMuted(chatId)});}break;}}};_this.handleSetChatNotifications=function(){_this.setState({isMuted:!_this.state.isMuted});_this.debouncedSetChatNotificationSettings();};_this.setChatNotificationSettings=function(){var chatId=_this.props.chatId;var isMuted=_this.state.isMuted;toggleChatNotificationSettings(chatId,isMuted);};var _chatId=props.chatId;_this.state={prevChatId:_chatId,isMuted:isChatMuted(_chatId)};_this.debouncedSetChatNotificationSettings=debounce(_this.setChatNotificationSettings,NOTIFICATION_DEBOUNCE_DELAY_MS);return _this;}_createClass(NotificationsControl,[{key:\"componentDidMount\",value:function componentDidMount(){ChatStore.on('updateChatNotificationSettings',this.onUpdateChatNotificationSettings);NotificationStore.on('updateScopeNotificationSettings',this.onUpdateScopeNotificationSettings);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ChatStore.removeListener('updateChatNotificationSettings',this.onUpdateChatNotificationSettings);NotificationStore.removeListener('updateScopeNotificationSettings',this.onUpdateScopeNotificationSettings);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.chatId!==state.prevChatId){var chatId=props.chatId;return{prevChatId:chatId,isMuted:isChatMuted(chatId)};}return null;}}]);return NotificationsControl;}(React.Component);export default NotificationsControl;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/ColumnMiddle/NotificationsControl.js"],"names":["React","isChatMuted","debounce","toggleChatNotificationSettings","NOTIFICATION_DEBOUNCE_DELAY_MS","ChatStore","NotificationStore","NotificationsControl","props","onUpdateChatNotificationSettings","update","chat_id","chatId","setState","isMuted","onUpdateScopeNotificationSettings","chat","get","scope","type","handleSetChatNotifications","state","debouncedSetChatNotificationSettings","setChatNotificationSettings","prevChatId","on","removeListener","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n"]},"metadata":{},"sourceType":"module"}