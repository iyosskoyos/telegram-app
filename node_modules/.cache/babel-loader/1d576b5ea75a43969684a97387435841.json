{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import{compose}from'recompose';import{withTranslation}from'react-i18next';import withStyles from'@material-ui/core/styles/withStyles';import AttachFileIcon from'@material-ui/icons/AttachFile';import IconButton from'@material-ui/core/IconButton';import InsertDriveFileIcon from'@material-ui/icons/InsertDriveFile';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';import PhotoIcon from'@material-ui/icons/Photo';import PollIcon from'@material-ui/icons/Poll';import{canSendDocuments,canSendPhotos,canSendPolls,isPrivateChat}from'../../Utils/Chat';import{ANIMATION_DURATION_300MS}from'../../Constants';var styles={iconButton:{margin:'8px 0'}};var AttachButton=/*#__PURE__*/function(_React$Component){_inherits(AttachButton,_React$Component);function AttachButton(){var _getPrototypeOf2;var _this;_classCallCheck(this,AttachButton);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AttachButton)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={anchorEl:null};_this.handleMenuClick=function(event){_this.setState({anchorEl:event.currentTarget});};_this.handleMenuClose=function(){_this.setState({anchorEl:null});};_this.handleAttachPhoto=function(){_this.handleMenuClose();var onAttachPhoto=_this.props.onAttachPhoto;if(!onAttachPhoto)return;setTimeout(function(){return onAttachPhoto();},ANIMATION_DURATION_300MS);};_this.handleAttachDocument=function(){_this.handleMenuClose();var onAttachDocument=_this.props.onAttachDocument;if(!onAttachDocument)return;setTimeout(function(){return onAttachDocument();},ANIMATION_DURATION_300MS);};_this.handleAttachPoll=function(){_this.handleMenuClose();var onAttachPoll=_this.props.onAttachPoll;if(!onAttachPoll)return;onAttachPoll();};return _this;}_createClass(AttachButton,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,t=_this$props.t,chatId=_this$props.chatId;var anchorEl=this.state.anchorEl;return React.createElement(React.Fragment,null,React.createElement(IconButton,{className:classes.iconButton,\"aria-label\":\"Attach\",open:Boolean(anchorEl),onClick:this.handleMenuClick},React.createElement(AttachFileIcon,{className:\"inputbox-attach-icon\"})),React.createElement(Menu,{id:\"attach-menu\",anchorEl:anchorEl,open:Boolean(anchorEl),getContentAnchorEl:null,disableAutoFocusItem:true,disableRestoreFocus:true,anchorOrigin:{vertical:'top',horizontal:'right'},transformOrigin:{vertical:'bottom',horizontal:'right'},onClose:this.handleMenuClose},React.createElement(MenuItem,{onClick:this.handleAttachPhoto,disabled:!canSendPhotos(chatId)},React.createElement(ListItemIcon,null,React.createElement(PhotoIcon,null)),React.createElement(ListItemText,{primary:t('AttachPhoto')})),React.createElement(MenuItem,{onClick:this.handleAttachDocument,disabled:!canSendDocuments(chatId)},React.createElement(ListItemIcon,null,React.createElement(InsertDriveFileIcon,null)),React.createElement(ListItemText,{primary:t('AttachDocument')})),!isPrivateChat(chatId)&&React.createElement(MenuItem,{onClick:this.handleAttachPoll,disabled:!canSendPolls(chatId)},React.createElement(ListItemIcon,null,React.createElement(PollIcon,null)),React.createElement(ListItemText,{primary:t('Poll')}))));}}]);return AttachButton;}(React.Component);var enhance=compose(withStyles(styles,{withTheme:true}),withTranslation());export default enhance(AttachButton);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnMiddle/AttachButton.js"],"names":["React","compose","withTranslation","withStyles","AttachFileIcon","IconButton","InsertDriveFileIcon","ListItemIcon","ListItemText","Menu","MenuItem","PhotoIcon","PollIcon","canSendDocuments","canSendPhotos","canSendPolls","isPrivateChat","ANIMATION_DURATION_300MS","styles","iconButton","margin","AttachButton","state","anchorEl","handleMenuClick","event","setState","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","props","setTimeout","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","classes","t","chatId","Boolean","vertical","horizontal","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n"]},"metadata":{},"sourceType":"module"}