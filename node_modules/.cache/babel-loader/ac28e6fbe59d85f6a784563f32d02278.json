{"ast":null,"code":"import _defineProperty from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import{compose}from'recompose';import{withTranslation}from'react-i18next';import withStyles from'@material-ui/core/styles/withStyles';import CloseIcon from'@material-ui/icons/Close';import IconButton from'@material-ui/core/IconButton';import ChatControl from'../../Tile/ChatControl';import TopChat from'../../Tile/TopChat';import RecentlyFoundChat from'../../Tile/RecentlyFoundChat';import FoundPublicChat from'../../Tile/FoundPublicChat';import FoundMessage from'../../Tile/FoundMessage';import SearchCaption from'./SearchCaption';import{loadChatsContent,loadUsersContent}from'../../../Utils/File';import{filterDuplicateMessages}from'../../../Utils/Message';import{getCyrillicInput,getLatinInput}from'../../../Utils/Language';import{orderCompare}from'../../../Utils/Common';import{USERNAME_LENGTH_MIN}from'../../../Constants';import ChatStore from'../../../Stores/ChatStore';import FileStore from'../../../Stores/FileStore';import MessageStore from'../../../Stores/MessageStore';import UserStore from'../../../Stores/UserStore';import TdLibController from'../../../Controllers/TdLibController';import'./Search.css';var styles=function styles(theme){return{closeSearchIconButton:{margin:'8px 12px 8px 0'},listItem:{padding:0},search:{background:theme.palette.type==='dark'?theme.palette.background.default:'#FFFFFF'}};};var Search=/*#__PURE__*/function(_React$Component){_inherits(Search,_React$Component);function Search(props){var _this;_classCallCheck(this,Search);_this=_possibleConstructorReturn(this,_getPrototypeOf(Search).call(this,props));_this.concatSearchResults=function(results){var arr=[];var map=new Map();for(var i=0;i<results.length;i++){var result=results[i]&&results[i].chat_ids;if(result){for(var j=0;j<result.length;j++){if(!map.has(result[j])){map.set(result[j],result[j]);arr.push(result[j]);}}}}arr.sort(function(a,b){return orderCompare(ChatStore.get(b).order,ChatStore.get(a).order);});return arr;};_this.searchText=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var sessionId,store,chatId,savedMessages,promises,localPromise,latinText,latinLocalPromise,cyrillicText,cyrillicLocalPromise,results,local,t,searchText,savedMessagesStrings,trimmedText,globalPromises,globalPromise,latinTrimmedText,globalLatinPromise,globalResults,global,messages,chats,users,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.sessionId=new Date();_this.text=text;sessionId=_this.sessionId;store=null;chatId=_this.props.chatId;savedMessages=_this.state.savedMessages;if(chatId){_context.next=43;break;}promises=[];localPromise=TdLibController.send({'@type':'searchChats',query:text,limit:100});promises.push(localPromise);latinText=getLatinInput(text);if(latinText&&latinText!==text){latinLocalPromise=TdLibController.send({'@type':'searchChats',query:latinText,limit:100});promises.push(latinLocalPromise);}cyrillicText=getCyrillicInput(text);if(cyrillicText&&cyrillicText!==text){cyrillicLocalPromise=TdLibController.send({'@type':'searchChats',query:cyrillicText,limit:100});promises.push(cyrillicLocalPromise);}_context.next=16;return Promise.all(promises.map(function(x){return x.catch(function(e){return null;});}));case 16:results=_context.sent;local=_this.concatSearchResults(results);if(!(sessionId!==_this.sessionId)){_context.next=20;break;}return _context.abrupt(\"return\");case 20:if(savedMessages){t=_this.props.t;searchText=text.toUpperCase();savedMessagesStrings=['SAVED MESSAGES',t('SavedMessages').toUpperCase()];if(savedMessagesStrings.some(function(el){return el.includes(searchText);})||latinText&&savedMessagesStrings.some(function(el){return el.includes(latinText.toUpperCase());})){local.splice(0,0,savedMessages.id);}}_this.setState({top:null,recentlyFound:null,local:local});store=FileStore.getStore();loadChatsContent(store,local);trimmedText=text.trim();trimmedText=trimmedText.startsWith('@')?trimmedText.substr(1):trimmedText;if(!(trimmedText.length>=USERNAME_LENGTH_MIN)){_context.next=42;break;}globalPromises=[];globalPromise=TdLibController.send({'@type':'searchPublicChats',query:trimmedText});globalPromises.push(globalPromise);if(latinText){latinTrimmedText=latinText.trim();latinTrimmedText=latinTrimmedText.startsWith('@')?latinTrimmedText.substr(1):latinTrimmedText;if(latinTrimmedText.length>=USERNAME_LENGTH_MIN&&latinTrimmedText!==trimmedText){globalLatinPromise=TdLibController.send({'@type':'searchPublicChats',query:latinTrimmedText});globalPromises.push(globalLatinPromise);}}_context.next=33;return Promise.all(globalPromises.map(function(x){return x.catch(function(e){return null;});}));case 33:globalResults=_context.sent;global=_this.concatSearchResults(globalResults);if(!(sessionId!==_this.sessionId)){_context.next=37;break;}return _context.abrupt(\"return\");case 37:_this.setState({global:global});store=FileStore.getStore();loadChatsContent(store,global);_context.next=43;break;case 42:_this.setState({global:null});case 43:messages=[];if(!chatId){_context.next=50;break;}_context.next=47;return TdLibController.send({'@type':'searchChatMessages',chat_id:chatId,query:text,sender_user_id:0,from_message_id:0,offset:0,limit:50,filter:null});case 47:messages=_context.sent;_context.next=53;break;case 50:_context.next=52;return TdLibController.send({'@type':'searchMessages',query:text,offset_date:0,offset_chat_id:0,offset_message_id:0,limit:50});case 52:messages=_context.sent;case 53:MessageStore.setItems(messages.messages);if(!(sessionId!==_this.sessionId)){_context.next=56;break;}return _context.abrupt(\"return\");case 56:_this.setState({messages:messages});chats=new Map();users=new Map();for(i=0;i<messages.messages.length;i++){chats.set(messages.messages[i].chat_id,messages.messages[i].chat_id);if(messages.messages[i].sender_user_id){users.set(messages.messages[i].sender_user_id,messages.messages[i].sender_user_id);}}store=FileStore.getStore();loadChatsContent(store,_toConsumableArray(chats.keys()));loadUsersContent(store,_toConsumableArray(users.keys()));case 63:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.loadContent=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var chatId,topPromise,recentlyFoundPromise,savedMessagesPromise,_ref3,_ref4,top,recentlyFound,savedMessages,store;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:chatId=_this.props.chatId;if(!chatId){_context2.next=4;break;}_this.setState({top:null,recentlyFound:null,local:null,global:null,messages:null});return _context2.abrupt(\"return\");case 4:topPromise=TdLibController.send({'@type':'getTopChats',category:{'@type':'topChatCategoryUsers'},limit:30}).catch(function(){return{'@type':'chats',chat_ids:[]};});recentlyFoundPromise=TdLibController.send({'@type':'searchChats',query:'',limit:100}).catch(function(){return{'@type':'chats',chat_ids:[]};});savedMessagesPromise=TdLibController.send({'@type':'createPrivateChat',user_id:UserStore.getMyId(),force:true}).catch(function(error){});_context2.next=9;return Promise.all([topPromise,recentlyFoundPromise,savedMessagesPromise]);case 9:_ref3=_context2.sent;_ref4=_slicedToArray(_ref3,3);top=_ref4[0];recentlyFound=_ref4[1];savedMessages=_ref4[2];_this.setState({top:top,recentlyFound:recentlyFound,savedMessages:savedMessages,local:null,global:null,messages:null});store=FileStore.getStore();loadChatsContent(store,top.chat_ids);loadChatsContent(store,recentlyFound.chat_ids);case 18:case\"end\":return _context2.stop();}}},_callee2);}));_this.handleRecentlyFound=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var chats,i;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return TdLibController.send({'@type':'getChats',offset_order:'9223372036854775807',offset_chat_id:0,limit:20});case 2:chats=_context3.sent;for(i=chats.chat_ids.length-1;i>=0;i--){TdLibController.send({'@type':'addRecentlyFoundChat',chat_id:chats.chat_ids[i]});}case 4:case\"end\":return _context3.stop();}}},_callee3);}));_this.handleClearRecentlyFound=function(event){event.stopPropagation();TdLibController.send({'@type':'clearRecentlyFoundChats'});_this.setState({recentlyFound:null});};_this.handleSelectMessage=function(chatId,messageId,addToRecent,keepOpen){var onSelectMessage=_this.props.onSelectMessage;if(addToRecent){TdLibController.send({'@type':'addRecentlyFoundChat',chat_id:chatId});}onSelectMessage(chatId,messageId,keepOpen);};_this.handleScroll=function(){var list=_this.listRef.current;if(list.scrollTop+list.offsetHeight===list.scrollHeight){_this.onLoadPrevious();}};_this.getOffset=function(messages){var length=messages?messages.messages.length:0;var offsetDate=length>0?messages.messages[length-1].date:0;var offsetChatId=length>0?messages.messages[length-1].chat_id:0;var offsetMessageId=length>0?messages.messages[length-1].id:0;return{offset_date:offsetDate,offset_chat_id:offsetChatId,offset_message_id:offsetMessageId};};_this.concatMessages=function(messages,result){if(!result)return messages;if(!result.messages.length)return messages;if(!messages)return result;if(!messages.messages.length)return result;return{total_count:result.total_count,messages:messages.messages.concat(result.messages)};};_this.onLoadPrevious=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var chatId,sessionId,messages,offset,result,chats,users,i,store;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!_this.loading){_context4.next=2;break;}return _context4.abrupt(\"return\");case 2:chatId=_this.props.chatId;sessionId=_this.sessionId;messages=_this.state.messages;offset=_this.getOffset(messages);_this.loading=true;result=[];if(!chatId){_context4.next=14;break;}_context4.next=11;return TdLibController.send({'@type':'searchChatMessages',chat_id:chatId,query:_this.text,sender_user_id:0,from_message_id:offset.offset_message_id,limit:50,filter:null});case 11:result=_context4.sent;_context4.next=17;break;case 14:_context4.next=16;return TdLibController.send(_objectSpread({'@type':'searchMessages',query:_this.text},offset,{limit:50}));case 16:result=_context4.sent;case 17:_this.loading=false;filterDuplicateMessages(result,messages?messages.messages:[]);MessageStore.setItems(result.messages);if(!(sessionId!==_this.sessionId)){_context4.next=22;break;}return _context4.abrupt(\"return\");case 22:_this.setState({messages:_this.concatMessages(messages,result)});chats=new Map();users=new Map();for(i=0;i<result.messages.length;i++){chats.set(result.messages[i].chat_id,result.messages[i].chat_id);if(result.messages[i].sender_user_id){users.set(result.messages[i].sender_user_id,result.messages[i].sender_user_id);}}store=FileStore.getStore();loadChatsContent(store,_toConsumableArray(chats.keys()));loadUsersContent(store,_toConsumableArray(users.keys()));case 29:case\"end\":return _context4.stop();}}},_callee4);}));_this.handleTopChatsScroll=function(event){event.stopPropagation();};_this.handleClose=function(){var onClose=_this.props.onClose;onClose();};_this.listRef=React.createRef();_this.state={};return _this;}_createClass(Search,[{key:\"componentDidMount\",value:function componentDidMount(){var text=this.props.text;this.searchOrLoadContent(text);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){var text=this.props.text;if(prevProps.text!==text){this.searchOrLoadContent(text);}}},{key:\"searchOrLoadContent\",value:function searchOrLoadContent(text){var trimmedText=text?text.trim():'';if(!trimmedText){this.loadContent();}else{this.searchText(trimmedText);}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,classes=_this$props.classes,chatId=_this$props.chatId;var _this$state=this.state,top=_this$state.top,recentlyFound=_this$state.recentlyFound,local=_this$state.local,global=_this$state.global,messages=_this$state.messages;var chat=ChatStore.get(chatId);var topChats=top&&top.chat_ids?top.chat_ids.map(function(x){return React.createElement(TopChat,{key:x,chatId:x,onSelect:function onSelect(){return _this2.handleSelectMessage(x,null,false,false);}});}):[];var recentlyFoundChats=recentlyFound&&recentlyFound.chat_ids?recentlyFound.chat_ids.map(function(x){return React.createElement(RecentlyFoundChat,{key:x,chatId:x,onClick:function onClick(){return _this2.handleSelectMessage(x,null,true,false);}});}):[];var localChats=local?local.map(function(x){return React.createElement(RecentlyFoundChat,{key:x,chatId:x,onClick:function onClick(){return _this2.handleSelectMessage(x,null,true,false);}});}):[];var globalChats=global?global.map(function(x){return React.createElement(FoundPublicChat,{key:x,chatId:x,onClick:function onClick(){return _this2.handleSelectMessage(x,null,true,true);}});}):[];var globalMessages=messages&&messages.messages?messages.messages.map(function(x){return React.createElement(FoundMessage,{key:\"\".concat(x.chat_id,\"_\").concat(x.id),chatId:x.chat_id,messageId:x.id,chatSearch:Boolean(chatId),onClick:function onClick(){return _this2.handleSelectMessage(x.chat_id,x.id,false,true);}});}):[];var messagesCaption='No messages found';if(messages&&messages.total_count){messagesCaption=messages.total_count===1?'Found 1 message':\"Found \".concat(messages.total_count,\" messages\");}return React.createElement(\"div\",{ref:this.listRef,className:classNames(classes.search,'search'),onScroll:this.handleScroll},chat&&React.createElement(\"div\",{className:\"search-chat\"},React.createElement(SearchCaption,{caption:\"Search messages in\"}),React.createElement(\"div\",{className:\"search-chat-wrapper\"},React.createElement(\"div\",{className:\"search-chat-control\"},React.createElement(ChatControl,{chatId:chatId,showStatus:false})),React.createElement(IconButton,{className:classes.closeSearchIconButton,\"aria-label\":\"Search\",onMouseDown:this.handleClose},React.createElement(CloseIcon,null)))),topChats.length>0&&React.createElement(\"div\",{className:\"search-top-chats\"},React.createElement(SearchCaption,{caption:\"People\"}),React.createElement(\"div\",{className:\"search-top-chats-list\",onScroll:this.handleTopChatsScroll},React.createElement(\"div\",{className:\"search-top-chats-placeholder\"}),topChats,React.createElement(\"div\",{className:\"search-top-chats-placeholder\"}))),recentlyFoundChats.length>0&&React.createElement(\"div\",{className:\"search-recently-found-chats\"},React.createElement(SearchCaption,{caption:\"Recent\",command:\"Clear\",onClick:this.handleClearRecentlyFound}),recentlyFoundChats),localChats.length>0&&React.createElement(\"div\",{className:\"search-local-chats\"},React.createElement(SearchCaption,{caption:\"Chats and contacts\"}),localChats),globalChats.length>0&&React.createElement(\"div\",{className:\"search-global-chats\"},React.createElement(SearchCaption,{caption:\"Global search\"}),globalChats),messages&&React.createElement(\"div\",{className:\"search-global-chats\"},React.createElement(SearchCaption,{caption:messagesCaption}),globalMessages));}}]);return Search;}(React.Component);var enhance=compose(withStyles(styles,{withTheme:true}),withTranslation());export default enhance(Search);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnLeft/Search/Search.js"],"names":["React","classNames","compose","withTranslation","withStyles","CloseIcon","IconButton","ChatControl","TopChat","RecentlyFoundChat","FoundPublicChat","FoundMessage","SearchCaption","loadChatsContent","loadUsersContent","filterDuplicateMessages","getCyrillicInput","getLatinInput","orderCompare","USERNAME_LENGTH_MIN","ChatStore","FileStore","MessageStore","UserStore","TdLibController","styles","theme","closeSearchIconButton","margin","listItem","padding","search","background","palette","type","default","Search","props","concatSearchResults","results","arr","map","Map","i","length","result","chat_ids","j","has","set","push","sort","a","b","get","order","searchText","text","sessionId","Date","store","chatId","savedMessages","state","promises","localPromise","send","query","limit","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","Promise","all","x","catch","e","local","t","toUpperCase","savedMessagesStrings","some","el","includes","splice","id","setState","top","recentlyFound","getStore","trimmedText","trim","startsWith","substr","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","messages","chat_id","sender_user_id","from_message_id","offset","filter","offset_date","offset_chat_id","offset_message_id","setItems","chats","users","keys","loadContent","topPromise","category","recentlyFoundPromise","savedMessagesPromise","user_id","getMyId","force","error","handleRecentlyFound","offset_order","handleClearRecentlyFound","event","stopPropagation","handleSelectMessage","messageId","addToRecent","keepOpen","onSelectMessage","handleScroll","list","listRef","current","scrollTop","offsetHeight","scrollHeight","onLoadPrevious","getOffset","offsetDate","date","offsetChatId","offsetMessageId","concatMessages","total_count","concat","loading","handleTopChatsScroll","handleClose","onClose","createRef","searchOrLoadContent","prevProps","prevState","snapshot","classes","chat","topChats","recentlyFoundChats","localChats","globalChats","globalMessages","Boolean","messagesCaption","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: 0\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n"]},"metadata":{},"sourceType":"module"}