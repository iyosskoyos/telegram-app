{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import{compose}from'recompose';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import Radio from'@material-ui/core/Radio';import RadioGroup from'@material-ui/core/RadioGroup';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormControl from'@material-ui/core/FormControl';import{withRestoreRef,withSaveRef}from'../../Utils/HOC';import TdLibController from'../../Controllers/TdLibController';import LocalizationStore from'../../Stores/LocalizationStore';var styles=function styles(theme){return{formControl:{margin:theme.spacing.unit*3},group:{margin:\"\".concat(theme.spacing.unit,\"px 0\")}};};var LanguagePicker=/*#__PURE__*/function(_React$Component){_inherits(LanguagePicker,_React$Component);function LanguagePicker(props){var _this;_classCallCheck(this,LanguagePicker);_this=_possibleConstructorReturn(this,_getPrototypeOf(LanguagePicker).call(this,props));_this.handleChange=function(event){_this.setState({language:event.target.value});TdLibController.clientUpdate({'@type':'clientUpdateLanguageChange',language:event.target.value});};_this.handleClose=function(){_this.setState({open:false});};_this.open=function(){_this.setState({open:true});};var i18n=props.i18n;var language=i18n?i18n.language:null;_this.state={open:false,language:language||'en'};return _this;}_createClass(LanguagePicker,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,t=_this$props.t;var _this$state=this.state,open=_this$state.open,language=_this$state.language;var info=LocalizationStore.info||{language_packs:[]};var languages=info.language_packs.map(function(x){return React.createElement(FormControlLabel,{key:x.id,value:x.id,control:React.createElement(Radio,{color:\"primary\"}),label:\"\".concat(x.name,\"\\xA0(\").concat(x.native_name,\")\")});});return React.createElement(Dialog,{transitionDuration:0,open:open,onClose:this.handleClose,\"aria-labelledby\":\"language-dialog-title\",\"aria-describedby\":\"language-dialog-description\"},React.createElement(DialogTitle,{id:\"language-dialog-title\"},t('Language')),React.createElement(DialogContent,null,React.createElement(FormControl,{component:\"fieldset\"},React.createElement(RadioGroup,{\"aria-label\":\"language\",name:\"language1\",value:language,onChange:this.handleChange},languages))));}}]);return LanguagePicker;}(React.Component);var enhance=compose(withSaveRef(),withTranslation(),withStyles(styles,{withTheme:true}),withRestoreRef());export default enhance(LanguagePicker);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnLeft/LanguagePicker.js"],"names":["React","compose","withStyles","withTranslation","Dialog","DialogContent","DialogTitle","Radio","RadioGroup","FormControlLabel","FormControl","withRestoreRef","withSaveRef","TdLibController","LocalizationStore","styles","theme","formControl","margin","spacing","unit","group","LanguagePicker","props","handleChange","event","setState","language","target","value","clientUpdate","handleClose","open","i18n","state","classes","t","info","language_packs","languages","map","x","id","name","native_name","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n"]},"metadata":{},"sourceType":"module"}