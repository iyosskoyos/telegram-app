{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import ChatTile from'./ChatTile';import DialogTitle from'./DialogTitle';import DialogStatus from'./DialogStatus';import ChatStore from'../../Stores/ChatStore';import'./ChatControl.css';var ChatControl=/*#__PURE__*/function(_React$Component){_inherits(ChatControl,_React$Component);function ChatControl(props){var _this;_classCallCheck(this,ChatControl);_this=_possibleConstructorReturn(this,_getPrototypeOf(ChatControl).call(this,props));_this.handleClick=function(){var _this$props=_this.props,chatId=_this$props.chatId,onSelect=_this$props.onSelect;if(!onSelect)return;onSelect(chatId);};if(process.env.NODE_ENV!=='production'){var chatId=_this.props.chatId;_this.state={chat:ChatStore.get(chatId)};}return _this;}_createClass(ChatControl,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){return nextProps.chatId!==this.props.chatId;}},{key:\"render\",value:function render(){var _this$props2=this.props,chatId=_this$props2.chatId,onTileSelect=_this$props2.onTileSelect,showStatus=_this$props2.showStatus,showSavedMessages=_this$props2.showSavedMessages;return React.createElement(\"div\",{className:\"chat\",onClick:this.handleClick},React.createElement(\"div\",{className:\"chat-wrapper\"},React.createElement(ChatTile,{chatId:chatId,onSelect:onTileSelect,showSavedMessages:showSavedMessages}),React.createElement(\"div\",{className:\"dialog-inner-wrapper\"},React.createElement(\"div\",{className:\"tile-first-row\"},React.createElement(DialogTitle,{chatId:chatId,showSavedMessages:showSavedMessages})),showStatus&&!showSavedMessages&&React.createElement(\"div\",{className:\"tile-second-row\"},React.createElement(DialogStatus,{chatId:chatId})))));}}]);return ChatControl;}(React.Component);ChatControl.defaultProps={showSavedMessages:true,showStatus:true};export default ChatControl;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/ChatControl.js"],"names":["React","ChatTile","DialogTitle","DialogStatus","ChatStore","ChatControl","props","handleClick","chatId","onSelect","process","env","NODE_ENV","state","chat","get","nextProps","nextState","onTileSelect","showStatus","showSavedMessages","Component","defaultProps"],"mappings":"kqBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAO,mBAAP,C,GAEMC,CAAAA,W,iFACF,qBAAYC,KAAZ,CAAmB,6CACf,6EAAMA,KAAN,GADe,MAcnBC,WAdmB,CAcL,UAAM,iBACa,MAAKD,KADlB,CACRE,MADQ,aACRA,MADQ,CACAC,QADA,aACAA,QADA,CAEhB,GAAI,CAACA,QAAL,CAAe,OAEfA,QAAQ,CAACD,MAAD,CAAR,CACH,CAnBkB,CAEf,GAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,IAC/BJ,CAAAA,MAD+B,CACpB,MAAKF,KADe,CAC/BE,MAD+B,CAEvC,MAAKK,KAAL,CAAa,CACTC,IAAI,CAAEV,SAAS,CAACW,GAAV,CAAcP,MAAd,CADG,CAAb,CAGH,CAPc,aAQlB,C,4FAEqBQ,S,CAAWC,S,CAAW,CACxC,MAAOD,CAAAA,SAAS,CAACR,MAAV,GAAqB,KAAKF,KAAL,CAAWE,MAAvC,CACH,C,uCASQ,kBAC2D,KAAKF,KADhE,CACGE,MADH,cACGA,MADH,CACWU,YADX,cACWA,YADX,CACyBC,UADzB,cACyBA,UADzB,CACqCC,iBADrC,cACqCA,iBADrC,CAGL,MACI,4BAAK,SAAS,CAAC,MAAf,CAAsB,OAAO,CAAE,KAAKb,WAApC,EACI,2BAAK,SAAS,CAAC,cAAf,EACI,oBAAC,QAAD,EAAU,MAAM,CAAEC,MAAlB,CAA0B,QAAQ,CAAEU,YAApC,CAAkD,iBAAiB,CAAEE,iBAArE,EADJ,CAEI,2BAAK,SAAS,CAAC,sBAAf,EACI,2BAAK,SAAS,CAAC,gBAAf,EACI,oBAAC,WAAD,EAAa,MAAM,CAAEZ,MAArB,CAA6B,iBAAiB,CAAEY,iBAAhD,EADJ,CADJ,CAIKD,UAAU,EAAI,CAACC,iBAAf,EACG,2BAAK,SAAS,CAAC,iBAAf,EACI,oBAAC,YAAD,EAAc,MAAM,CAAEZ,MAAtB,EADJ,CALR,CAFJ,CADJ,CADJ,CAiBH,C,yBA1CqBR,KAAK,CAACqB,S,EAqDhChB,WAAW,CAACiB,YAAZ,CAA2B,CACvBF,iBAAiB,CAAE,IADI,CAEvBD,UAAU,CAAE,IAFW,CAA3B,CAKA,cAAed,CAAAA,WAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n"]},"metadata":{},"sourceType":"module"}