{"ast":null,"code":"import _defineProperty from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import{compose}from'recompose';import ListItem from'@material-ui/core/ListItem';import ChatTile from'./ChatTile';import UserTile from'./UserTile';import DialogTitle from'./DialogTitle';import{getMessageDate,getMessageSenderFullName,getMessageSenderName}from'../../Utils/Chat';import{getContent}from'../../Utils/Message';import MessageStore from'../../Stores/MessageStore';import ApplicationStore from'../../Stores/ApplicationStore';import'./FoundMessage.css';var styles=function styles(theme){return{listItem:{padding:0},foundMessageSubtitle:{color:theme.palette.text.secondary},verifiedIcon:{color:theme.palette.primary.main},foundMessageActive:{color:'#fff',backgroundColor:theme.palette.primary.main,'& $verifiedIcon':{color:'#fff'}}};};var FoundMessage=/*#__PURE__*/function(_React$Component){_inherits(FoundMessage,_React$Component);function FoundMessage(props){var _this;_classCallCheck(this,FoundMessage);_this=_possibleConstructorReturn(this,_getPrototypeOf(FoundMessage).call(this,props));_this.onClientUpdateChatId=function(update){_this.setState(_objectSpread({},update));};_this.state={nextChatId:ApplicationStore.getChatId(),nextMessageId:ApplicationStore.getMessageId()};return _this;}_createClass(FoundMessage,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){var _this$props=this.props,chatId=_this$props.chatId,messageId=_this$props.messageId,theme=_this$props.theme;if(nextState.nextChatId===chatId&&nextState.nextMessageId===messageId){return true;}if(nextState.previousChatId===chatId&&nextState.previousMessageId===messageId){return true;}if(nextProps.theme!==theme){return true;}return false;}},{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('clientUpdateChatId',this.onClientUpdateChatId);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('clientUpdateChatId',this.onClientUpdateChatId);}},{key:\"render\",value:function render(){var _this$props2=this.props,chatId=_this$props2.chatId,messageId=_this$props2.messageId,chatSearch=_this$props2.chatSearch,onClick=_this$props2.onClick,classes=_this$props2.classes,t=_this$props2.t;var selectedChatId=this.state.nextChatId;var selectedMessageId=this.state.nextMessageId;var message=MessageStore.get(chatId,messageId);var sender_user_id=message.sender_user_id;var date=getMessageDate(message);var senderName=getMessageSenderName(message);var senderFullName=getMessageSenderFullName(message);var content=getContent(message,t)||\"\\xA0\";var selected=chatId===selectedChatId&&messageId===selectedMessageId;var tile=sender_user_id&&chatSearch?React.createElement(UserTile,{userId:sender_user_id}):React.createElement(ChatTile,{chatId:chatId});return React.createElement(ListItem,{button:true,className:classes.listItem,onClick:onClick},React.createElement(\"div\",{className:classNames('found-message',_defineProperty({},classes.foundMessageActive,selected),{'accent-background':selected})},tile,React.createElement(\"div\",{className:\"dialog-inner-wrapper\"},React.createElement(\"div\",{className:\"tile-first-row\"},chatSearch&&senderFullName?React.createElement(\"div\",{className:\"dialog-title\"},senderFullName):React.createElement(DialogTitle,{chatId:chatId,classes:{verifiedIcon:classes.verifiedIcon}}),React.createElement(\"div\",{className:classNames('dialog-meta',classes.foundMessageSubtitle)},date)),React.createElement(\"div\",{className:\"tile-second-row\"},React.createElement(\"div\",{className:classNames('dialog-content',classes.foundMessageSubtitle)},React.createElement(React.Fragment,null,!chatSearch&&senderName&&React.createElement(\"span\",{className:\"dialog-content-accent\"},senderName,\": \"),content))))));}}]);return FoundMessage;}(React.Component);var enhance=compose(withStyles(styles,{withTheme:true}),withTranslation());export default enhance(FoundMessage);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Tile/FoundMessage.js"],"names":["React","classNames","withStyles","withTranslation","compose","ListItem","ChatTile","UserTile","DialogTitle","getMessageDate","getMessageSenderFullName","getMessageSenderName","getContent","MessageStore","ApplicationStore","styles","theme","listItem","padding","foundMessageSubtitle","color","palette","text","secondary","verifiedIcon","primary","main","foundMessageActive","backgroundColor","FoundMessage","props","onClientUpdateChatId","update","setState","state","nextChatId","getChatId","nextMessageId","getMessageId","nextProps","nextState","chatId","messageId","previousChatId","previousMessageId","on","removeListener","chatSearch","onClick","classes","t","selectedChatId","selectedMessageId","message","get","sender_user_id","date","senderName","senderFullName","content","selected","tile","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n"]},"metadata":{},"sourceType":"module"}