{"ast":null,"code":"/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n  constructor() {\n    super();\n\n    this.reset = () => {\n      this.items = new Map();\n      this.fullInfoItems = new Map();\n    };\n\n    this.onUpdate = update => {\n      switch (update['@type']) {\n        case 'updateAuthorizationState':\n          {\n            const authorization_state = update.authorization_state;\n            if (!authorization_state) break;\n\n            switch (authorization_state['@type']) {\n              case 'authorizationStateClosed':\n                {\n                  this.reset();\n                  break;\n                }\n            }\n\n            break;\n          }\n\n        case 'updateSupergroup':\n          this.set(update.supergroup);\n          this.emit(update['@type'], update);\n          break;\n\n        case 'updateSupergroupFullInfo':\n          this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n          this.emit(update['@type'], update);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.onClientUpdate = update => {};\n\n    this.addTdLibListener = () => {\n      TdLibController.addListener('update', this.onUpdate);\n      TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    this.removeTdLibListener = () => {\n      TdLibController.removeListener('update', this.onUpdate);\n      TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    this.reset();\n    this.addTdLibListener();\n    this.setMaxListeners(Infinity);\n  }\n\n  get(id) {\n    return this.items.get(id);\n  }\n\n  set(supergroup) {\n    this.items.set(supergroup.id, supergroup);\n  }\n\n  getFullInfo(id) {\n    return this.fullInfoItems.get(id);\n  }\n\n  setFullInfo(id, fullInfo) {\n    this.fullInfoItems.set(id, fullInfo);\n  }\n\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Stores/SupergroupStore.js"],"names":["EventEmitter","TdLibController","SupergroupStore","constructor","reset","items","Map","fullInfoItems","onUpdate","update","authorization_state","set","supergroup","emit","setFullInfo","supergroup_id","supergroup_full_info","onClientUpdate","addTdLibListener","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","get","id","getFullInfo","fullInfo","store","window"],"mappings":"AAAA;;;;;;AAOA,SAASA,YAAT,QAA6B,QAA7B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;AAEA,MAAMC,eAAN,SAA8BF,YAA9B,CAA2C;AACvCG,EAAAA,WAAW,GAAG;AACV;;AADU,SASdC,KATc,GASN,MAAM;AACV,WAAKC,KAAL,GAAa,IAAIC,GAAJ,EAAb;AACA,WAAKC,aAAL,GAAqB,IAAID,GAAJ,EAArB;AACH,KAZa;;AAAA,SAcdE,QAdc,GAcHC,MAAM,IAAI;AACjB,cAAQA,MAAM,CAAC,OAAD,CAAd;AACI,aAAK,0BAAL;AAAiC;AAAA,kBACrBC,mBADqB,GACGD,MADH,CACrBC,mBADqB;AAE7B,gBAAI,CAACA,mBAAL,EAA0B;;AAE1B,oBAAQA,mBAAmB,CAAC,OAAD,CAA3B;AACI,mBAAK,0BAAL;AAAiC;AAC7B,uBAAKN,KAAL;AACA;AACH;AAJL;;AAOA;AACH;;AACD,aAAK,kBAAL;AACI,eAAKO,GAAL,CAASF,MAAM,CAACG,UAAhB;AAEA,eAAKC,IAAL,CAAUJ,MAAM,CAAC,OAAD,CAAhB,EAA2BA,MAA3B;AACA;;AACJ,aAAK,0BAAL;AACI,eAAKK,WAAL,CAAiBL,MAAM,CAACM,aAAxB,EAAuCN,MAAM,CAACO,oBAA9C;AAEA,eAAKH,IAAL,CAAUJ,MAAM,CAAC,OAAD,CAAhB,EAA2BA,MAA3B;AACA;;AACJ;AACI;AAzBR;AA2BH,KA1Ca;;AAAA,SA4CdQ,cA5Cc,GA4CGR,MAAM,IAAI,CAAE,CA5Cf;;AAAA,SA8CdS,gBA9Cc,GA8CK,MAAM;AACrBjB,MAAAA,eAAe,CAACkB,WAAhB,CAA4B,QAA5B,EAAsC,KAAKX,QAA3C;AACAP,MAAAA,eAAe,CAACkB,WAAhB,CAA4B,cAA5B,EAA4C,KAAKF,cAAjD;AACH,KAjDa;;AAAA,SAmDdG,mBAnDc,GAmDQ,MAAM;AACxBnB,MAAAA,eAAe,CAACoB,cAAhB,CAA+B,QAA/B,EAAyC,KAAKb,QAA9C;AACAP,MAAAA,eAAe,CAACoB,cAAhB,CAA+B,cAA/B,EAA+C,KAAKJ,cAApD;AACH,KAtDa;;AAGV,SAAKb,KAAL;AAEA,SAAKc,gBAAL;AACA,SAAKI,eAAL,CAAqBC,QAArB;AACH;;AAiDDC,EAAAA,GAAG,CAACC,EAAD,EAAK;AACJ,WAAO,KAAKpB,KAAL,CAAWmB,GAAX,CAAeC,EAAf,CAAP;AACH;;AAEDd,EAAAA,GAAG,CAACC,UAAD,EAAa;AACZ,SAAKP,KAAL,CAAWM,GAAX,CAAeC,UAAU,CAACa,EAA1B,EAA8Bb,UAA9B;AACH;;AAEDc,EAAAA,WAAW,CAACD,EAAD,EAAK;AACZ,WAAO,KAAKlB,aAAL,CAAmBiB,GAAnB,CAAuBC,EAAvB,CAAP;AACH;;AAEDX,EAAAA,WAAW,CAACW,EAAD,EAAKE,QAAL,EAAe;AACtB,SAAKpB,aAAL,CAAmBI,GAAnB,CAAuBc,EAAvB,EAA2BE,QAA3B;AACH;;AAvEsC;;AA0E3C,MAAMC,KAAK,GAAG,IAAI1B,eAAJ,EAAd;AACA2B,MAAM,CAACjB,UAAP,GAAoBgB,KAApB;AACA,eAAeA,KAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}