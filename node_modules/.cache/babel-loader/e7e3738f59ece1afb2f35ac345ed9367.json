{"ast":null,"code":"import _defineProperty from \"/home/chilly/Projects/Capacitor/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnMiddle/StickersPickerHeader.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animator from '../../Utils/Animatior';\nimport Sticker from './../Message/Media/Sticker';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerStore from '../../Stores/StickerStore';\nimport './StickersPickerHeader.css';\n\nconst styles = theme => _objectSpread({}, borderStyle(theme), {}, accentStyles(theme));\n\nclass StickersPickerHeader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateStickerSetPosition = update => {\n      const position = update.position;\n      this.setState({\n        position\n      });\n    };\n\n    this.scrollToPosition = () => {\n      const position = this.state.position;\n      const animator = this.animator,\n            anchorRef = this.anchorRef,\n            scrollRef = this.scrollRef;\n      const scroll = scrollRef.current;\n      const anchor = anchorRef.current;\n      const anchorNode = ReactDOM.findDOMNode(anchor);\n      const scrollFrom = scroll.scrollLeft;\n      const scrollTo = position * 44 - 147;\n      const anchorFrom = Number(anchorNode.style.left.replace('px', ''));\n      const anchorTo = position * 44;\n\n      if (animator) {\n        animator.stop();\n      }\n\n      this.animator = new Animator(ANIMATION_DURATION_200MS, [{\n        from: scrollFrom,\n        to: scrollTo,\n        func: left => scroll.scrollLeft = left\n      }, {\n        from: Math.abs(anchorTo - anchorFrom) > 338 ? anchorTo - Math.sign(anchorTo - anchorFrom) * 338 : anchorFrom,\n        to: anchorTo,\n        func: left => anchorNode.style.left = left + 'px'\n      }]);\n      this.animator.start();\n    };\n\n    this.handleWheel = event => {\n      const scrollRef = this.scrollRef;\n\n      if (event.deltaX === 0) {\n        const scroll = scrollRef.current;\n        scroll.scrollLeft += event.deltaY;\n      }\n    };\n\n    this.handleSelect = sticker => {\n      const _this$props = this.props,\n            stickers = _this$props.stickers,\n            onSelect = _this$props.onSelect;\n      onSelect(stickers.indexOf(sticker));\n    };\n\n    this.state = {\n      position: 0\n    };\n    this.scrollRef = React.createRef();\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    StickerStore.on('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n  }\n\n  componentWillUnmount() {\n    StickerStore.removeListener('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.position !== this.state.position) {\n      this.scrollToPosition();\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          classes = _this$props2.classes,\n          stickers = _this$props2.stickers;\n    const items = stickers.map(x => React.createElement(Sticker, {\n      key: x.sticker.id,\n      className: \"stickers-picker-header-sticker\",\n      sticker: x,\n      autoplay: false,\n      blur: false,\n      displaySize: 32,\n      preview: true,\n      source: StickerSourceEnum.PICKER_HEADER,\n      openMedia: () => this.handleSelect(x),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: classNames('stickers-picker-header', classes.borderColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.scrollRef,\n      className: \"stickers-picker-header-scroll\",\n      onWheel: this.handleWheel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stickers-picker-header-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, items), React.createElement(\"div\", {\n      ref: this.anchorRef,\n      className: classNames('stickers-picker-header-anchor', classes.accentBackgroundDark),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })));\n  }\n\n}\n\nStickersPickerHeader.propTypes = {\n  stickers: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(StickersPickerHeader);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnMiddle/StickersPickerHeader.js"],"names":["React","ReactDOM","PropTypes","classNames","withStyles","Animator","Sticker","accentStyles","borderStyle","ANIMATION_DURATION_200MS","StickerSourceEnum","StickerStore","styles","theme","StickersPickerHeader","Component","constructor","props","onClientUpdateStickerSetPosition","update","position","setState","scrollToPosition","state","animator","anchorRef","scrollRef","scroll","current","anchor","anchorNode","findDOMNode","scrollFrom","scrollLeft","scrollTo","anchorFrom","Number","style","left","replace","anchorTo","stop","from","to","func","Math","abs","sign","start","handleWheel","event","deltaX","deltaY","handleSelect","sticker","stickers","onSelect","indexOf","createRef","componentDidMount","on","componentWillUnmount","removeListener","componentDidUpdate","prevProps","prevState","snapshot","render","classes","items","map","x","id","PICKER_HEADER","borderColor","accentBackgroundDark","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animator from '../../Utils/Animatior';\nimport Sticker from './../Message/Media/Sticker';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerStore from '../../Stores/StickerStore';\nimport './StickersPickerHeader.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme),\n    ...accentStyles(theme)\n});\n\nclass StickersPickerHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { position: 0 };\n\n        this.scrollRef = React.createRef();\n        this.anchorRef = React.createRef();\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    onClientUpdateStickerSetPosition = update => {\n        const { position } = update;\n\n        this.setState({ position });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.position !== this.state.position) {\n            this.scrollToPosition();\n        }\n    }\n\n    scrollToPosition = () => {\n        const { position } = this.state;\n        const { animator, anchorRef, scrollRef } = this;\n\n        const scroll = scrollRef.current;\n        const anchor = anchorRef.current;\n        const anchorNode = ReactDOM.findDOMNode(anchor);\n\n        const scrollFrom = scroll.scrollLeft;\n        const scrollTo = position * 44 - 147;\n\n        const anchorFrom = Number(anchorNode.style.left.replace('px', ''));\n        const anchorTo = position * 44;\n\n        if (animator) {\n            animator.stop();\n        }\n        this.animator = new Animator(ANIMATION_DURATION_200MS, [\n            {\n                from: scrollFrom,\n                to: scrollTo,\n                func: left => (scroll.scrollLeft = left)\n            },\n            {\n                from:\n                    Math.abs(anchorTo - anchorFrom) > 338\n                        ? anchorTo - Math.sign(anchorTo - anchorFrom) * 338\n                        : anchorFrom,\n                to: anchorTo,\n                func: left => (anchorNode.style.left = left + 'px')\n            }\n        ]);\n        this.animator.start();\n    };\n\n    handleWheel = event => {\n        const { scrollRef } = this;\n\n        if (event.deltaX === 0) {\n            const scroll = scrollRef.current;\n\n            scroll.scrollLeft += event.deltaY;\n        }\n    };\n\n    handleSelect = sticker => {\n        const { stickers, onSelect } = this.props;\n\n        onSelect(stickers.indexOf(sticker));\n    };\n\n    render() {\n        const { classes, stickers } = this.props;\n\n        const items = stickers.map(x => (\n            <Sticker\n                key={x.sticker.id}\n                className='stickers-picker-header-sticker'\n                sticker={x}\n                autoplay={false}\n                blur={false}\n                displaySize={32}\n                preview\n                source={StickerSourceEnum.PICKER_HEADER}\n                openMedia={() => this.handleSelect(x)}\n            />\n        ));\n\n        return (\n            <div className={classNames('stickers-picker-header', classes.borderColor)}>\n                <div ref={this.scrollRef} className='stickers-picker-header-scroll' onWheel={this.handleWheel}>\n                    <div className='stickers-picker-header-items'>{items}</div>\n                    <div\n                        ref={this.anchorRef}\n                        className={classNames('stickers-picker-header-anchor', classes.accentBackgroundDark)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPickerHeader.propTypes = {\n    stickers: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(StickersPickerHeader);\n"]},"metadata":{},"sourceType":"module"}