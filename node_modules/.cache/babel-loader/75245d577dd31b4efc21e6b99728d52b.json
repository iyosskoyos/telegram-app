{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */var Animator=/*#__PURE__*/function(){function Animator(_duration){var _this=this;var _options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];_classCallCheck(this,Animator);this.start=function(){_this.stopped=false;_this.id=requestAnimationFrame(_this.startAnim);};this.startAnim=function(timeStamp){var start=_this.start,duration=_this.duration;_this.start=timeStamp;_this.end=start+duration;_this.draw(timeStamp);};this.draw=function(now){var stopped=_this.stopped,duration=_this.duration,start=_this.start,options=_this.options;if(stopped)return;if(now-start>=duration)_this.stopped=true;var p=(now-start)/duration;var val=Animator.outSine(p);options.forEach(function(x){var from=x.from,to=x.to,func=x.func;func(from+(to-from)*val);});_this.id=requestAnimationFrame(_this.draw);};this.stop=function(){_this.stopped=true;cancelAnimationFrame(_this.id);};this.options=_options;this.duration=_duration;}_createClass(Animator,null,[{key:\"outSine\",value:function outSine(n){return Math.sin(n*Math.PI/2);}}]);return Animator;}();export default Animator;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Utils/Animatior.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startAnim","timeStamp","end","draw","now","p","val","outSine","forEach","x","from","to","func","stop","cancelAnimationFrame","n","Math","sin","PI"],"mappings":"kOAAA;;;;;MAOMA,CAAAA,Q,yBACF,kBAAYC,SAAZ,CAAoC,mBAAdC,CAAAA,QAAc,2DAAJ,EAAI,qCASpCC,KAToC,CAS5B,UAAM,CACV,KAAI,CAACC,OAAL,CAAe,KAAf,CACA,KAAI,CAACC,EAAL,CAAUC,qBAAqB,CAAC,KAAI,CAACC,SAAN,CAA/B,CACH,CAZmC,MAcpCA,SAdoC,CAcxB,SAAAC,SAAS,CAAI,IACbL,CAAAA,KADa,CACO,KADP,CACbA,KADa,CACNF,QADM,CACO,KADP,CACNA,QADM,CAGrB,KAAI,CAACE,KAAL,CAAaK,SAAb,CACA,KAAI,CAACC,GAAL,CAAWN,KAAK,CAAGF,QAAnB,CACA,KAAI,CAACS,IAAL,CAAUF,SAAV,EACH,CApBmC,MAsBpCE,IAtBoC,CAsB7B,SAAAC,GAAG,CAAI,IACFP,CAAAA,OADE,CACoC,KADpC,CACFA,OADE,CACOH,QADP,CACoC,KADpC,CACOA,QADP,CACiBE,KADjB,CACoC,KADpC,CACiBA,KADjB,CACwBD,OADxB,CACoC,KADpC,CACwBA,OADxB,CAGV,GAAIE,OAAJ,CAAa,OACb,GAAIO,GAAG,CAAGR,KAAN,EAAeF,QAAnB,CAA6B,KAAI,CAACG,OAAL,CAAe,IAAf,CAE7B,GAAMQ,CAAAA,CAAC,CAAG,CAACD,GAAG,CAAGR,KAAP,EAAgBF,QAA1B,CACA,GAAMY,CAAAA,GAAG,CAAGb,QAAQ,CAACc,OAAT,CAAiBF,CAAjB,CAAZ,CAEAV,OAAO,CAACa,OAAR,CAAgB,SAAAC,CAAC,CAAI,IACTC,CAAAA,IADS,CACUD,CADV,CACTC,IADS,CACHC,EADG,CACUF,CADV,CACHE,EADG,CACCC,IADD,CACUH,CADV,CACCG,IADD,CAEjBA,IAAI,CAACF,IAAI,CAAG,CAACC,EAAE,CAAGD,IAAN,EAAcJ,GAAtB,CAAJ,CACH,CAHD,EAKA,KAAI,CAACR,EAAL,CAAUC,qBAAqB,CAAC,KAAI,CAACI,IAAN,CAA/B,CACH,CArCmC,MAuCpCU,IAvCoC,CAuC7B,UAAM,CACT,KAAI,CAAChB,OAAL,CAAe,IAAf,CACAiB,oBAAoB,CAAC,KAAI,CAAChB,EAAN,CAApB,CACH,CA1CmC,CAChC,KAAKH,OAAL,CAAeA,QAAf,CACA,KAAKD,QAAL,CAAgBA,SAAhB,CACH,C,kEAEcqB,C,CAAG,CACd,MAAOC,CAAAA,IAAI,CAACC,GAAL,CAAUF,CAAC,CAAGC,IAAI,CAACE,EAAV,CAAgB,CAAzB,CAAP,CACH,C,wBAsCL,cAAezB,CAAAA,QAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startAnim);\n    };\n\n    startAnim = timeStamp => {\n        const { start, duration } = this;\n\n        this.start = timeStamp;\n        this.end = start + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, start, options } = this;\n\n        if (stopped) return;\n        if (now - start >= duration) this.stopped = true;\n\n        const p = (now - start) / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            func(from + (to - from) * val);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n"]},"metadata":{},"sourceType":"module"}