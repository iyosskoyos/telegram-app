{"ast":null,"code":"var _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/DialogStatus.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n  statusSubtitle: {\n    color: theme.palette.text.secondary\n  },\n  statusAccentSubtitle: {\n    color: theme.palette.primary.dark + '!important'\n  }\n});\n\nclass DialogStatus extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateUserStatus = update => {\n      const chatId = this.props.chatId;\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.type) return;\n      let updateSubtitle = false;\n\n      switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n          {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n\n            if (fullInfo && fullInfo.members) {\n              const member = fullInfo.members.find(x => x.user_id === update.user_id);\n\n              if (member) {\n                updateSubtitle = true;\n              }\n            }\n\n            break;\n          }\n\n        case 'chatTypePrivate':\n          {\n            if (chat.type.user_id === update.user_id) {\n              updateSubtitle = true;\n            }\n\n            break;\n          }\n\n        case 'chatTypeSecret':\n          {\n            if (chat.type.user_id === update.user_id) {\n              updateSubtitle = true;\n            }\n\n            break;\n          }\n\n        case 'chatTypeSupergroup':\n          {\n            break;\n          }\n      }\n\n      if (updateSubtitle) {\n        this.updateSubtitle(chat);\n      }\n    };\n\n    this.updateSubtitle = chat => {\n      this.setState({\n        subtitle: getChatSubtitleWithoutTyping(chat.id),\n        isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n      });\n    };\n\n    this.onUpdateUserFullInfo = update => {\n      const chatId = this.props.chatId;\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n\n      if (chat.type && (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') && chat.type.user_id === update.user_id) {\n        this.updateSubtitle(chat);\n      }\n    };\n\n    this.onUpdateBasicGroupFullInfo = update => {\n      const chatId = this.props.chatId;\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n        this.updateSubtitle(chat);\n      }\n    };\n\n    this.onUpdateSupergroupFullInfo = update => {\n      const chatId = this.props.chatId;\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n        this.updateSubtitle(chat);\n      }\n    };\n\n    this.onUpdateBasicGroup = update => {\n      const chatId = this.props.chatId;\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n        this.updateSubtitle(chat);\n      }\n    };\n\n    this.onUpdateSupergroup = update => {\n      const chatId = this.props.chatId;\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n        this.updateSubtitle(chat);\n      }\n    };\n\n    const _chatId = this.props.chatId;\n    this.state = {\n      prevChatId: _chatId,\n      subtitle: getChatSubtitleWithoutTyping(_chatId),\n      isAccent: isAccentChatSubtitleWithoutTyping(_chatId)\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.chatId !== state.prevChatId) {\n      const chatId = props.chatId;\n      return {\n        prevChatId: chatId,\n        subtitle: getChatSubtitleWithoutTyping(chatId),\n        isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n      };\n    }\n\n    return null;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const chatId = this.props.chatId;\n    const _this$state = this.state,\n          subtitle = _this$state.subtitle,\n          isAccent = _this$state.isAccent;\n\n    if (nextProps.chatId !== chatId) {\n      return true;\n    }\n\n    if (nextState.subtitle !== subtitle) {\n      return true;\n    }\n\n    if (nextState.isAccent !== isAccent) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n    SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n    SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n  }\n\n  componentWillUnmount() {\n    UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n    SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n    BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n    SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          subtitle = _this$state2.subtitle,\n          isAccent = _this$state2.isAccent;\n    return React.createElement(\"div\", {\n      className: classNames('dialog-status', isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, subtitle);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(DialogStatus);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/DialogStatus.js"],"names":["React","classNames","withStyles","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","ChatStore","UserStore","BasicGroupStore","SupergroupStore","styles","theme","statusSubtitle","color","palette","text","secondary","statusAccentSubtitle","primary","dark","DialogStatus","Component","constructor","props","onUpdateUserStatus","update","chatId","chat","get","type","updateSubtitle","fullInfo","getFullInfo","basic_group_id","members","member","find","x","user_id","setState","subtitle","id","isAccent","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","state","prevChatId","getDerivedStateFromProps","shouldComponentUpdate","nextProps","nextState","componentDidMount","on","componentWillUnmount","removeListener","render","classes","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n"]},"metadata":{},"sourceType":"module"}