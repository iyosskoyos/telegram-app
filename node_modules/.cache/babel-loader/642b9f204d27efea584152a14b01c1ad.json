{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/Tile/DialogPlaceholder.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nconst styles = theme => ({\n  dialogPlaceholderBackground: {\n    backgroundColor: theme.palette.text.secondary\n  }\n});\n\nclass DialogPlaceholder extends React.Component {\n  render() {\n    const _this$props = this.props,\n          chatId = _this$props.chatId,\n          classes = _this$props.classes,\n          index = _this$props.index,\n          showTitle = _this$props.showTitle;\n    let title = null;\n\n    if (showTitle) {\n      title = getChatTitle(chatId, true);\n    }\n\n    const titleWidth = \"\".concat(50 + Math.sin(index) * 10, \"%\");\n    const contentWidth = \"\".concat(70 + Math.cos(index) * 10, \"%\");\n    return React.createElement(\"div\", {\n      className: \"dialog-placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dialog-placeholder-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('dialog-placeholder-tile', classes.dialogPlaceholderBackground),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dialog-placeholder-inner-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tile-first-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, showTitle ? title : React.createElement(\"div\", {\n      className: classNames('dialog-placeholder-title', classes.dialogPlaceholderBackground),\n      style: {\n        width: titleWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tile-second-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('dialog-placeholder-content', classes.dialogPlaceholderBackground),\n      style: {\n        width: contentWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nDialogPlaceholder.propTypes = {\n  index: PropTypes.number.isRequired,\n  showTitle: PropTypes.bool\n};\nexport default withStyles(styles)(DialogPlaceholder);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Tile/DialogPlaceholder.js"],"names":["React","PropTypes","classNames","withStyles","getChatTitle","styles","theme","dialogPlaceholderBackground","backgroundColor","palette","text","secondary","DialogPlaceholder","Component","render","props","chatId","classes","index","showTitle","title","titleWidth","Math","sin","contentWidth","cos","width","propTypes","number","isRequired","bool"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAO,yBAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,2BAA2B,EAAE;AACzBC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmBC;AADX;AADR,CAAL,CAApB;;AAMA,MAAMC,iBAAN,SAAgCZ,KAAK,CAACa,SAAtC,CAAgD;AAC5CC,EAAAA,MAAM,GAAG;AAAA,wBACyC,KAAKC,KAD9C;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,OADX,eACWA,OADX;AAAA,UACoBC,KADpB,eACoBA,KADpB;AAAA,UAC2BC,SAD3B,eAC2BA,SAD3B;AAGL,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAID,SAAJ,EAAe;AACXC,MAAAA,KAAK,GAAGhB,YAAY,CAACY,MAAD,EAAS,IAAT,CAApB;AACH;;AAED,UAAMK,UAAU,aAAM,KAAKC,IAAI,CAACC,GAAL,CAASL,KAAT,IAAkB,EAA7B,MAAhB;AACA,UAAMM,YAAY,aAAM,KAAKF,IAAI,CAACG,GAAL,CAASP,KAAT,IAAkB,EAA7B,MAAlB;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEhB,UAAU,CAAC,yBAAD,EAA4Be,OAAO,CAACV,2BAApC,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKY,SAAS,GACNC,KADM,GAGN;AACI,MAAA,SAAS,EAAElB,UAAU,CACjB,0BADiB,EAEjBe,OAAO,CAACV,2BAFS,CADzB;AAKI,MAAA,KAAK,EAAE;AAAEmB,QAAAA,KAAK,EAAEL;AAAT,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,CADJ,EAcI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAEnB,UAAU,CACjB,4BADiB,EAEjBe,OAAO,CAACV,2BAFS,CADzB;AAKI,MAAA,KAAK,EAAE;AAAEmB,QAAAA,KAAK,EAAEF;AAAT,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdJ,CAFJ,CADJ,CADJ;AA+BH;;AA3C2C;;AA8ChDZ,iBAAiB,CAACe,SAAlB,GAA8B;AAC1BT,EAAAA,KAAK,EAAEjB,SAAS,CAAC2B,MAAV,CAAiBC,UADE;AAE1BV,EAAAA,SAAS,EAAElB,SAAS,CAAC6B;AAFK,CAA9B;AAKA,eAAe3B,UAAU,CAACE,MAAD,CAAV,CAAmBO,iBAAnB,CAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nconst styles = theme => ({\n    dialogPlaceholderBackground: {\n        backgroundColor: theme.palette.text.secondary\n    }\n});\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, classes, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className={classNames('dialog-placeholder-tile', classes.dialogPlaceholderBackground)} />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div\n                                    className={classNames(\n                                        'dialog-placeholder-title',\n                                        classes.dialogPlaceholderBackground\n                                    )}\n                                    style={{ width: titleWidth }}\n                                />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div\n                                className={classNames(\n                                    'dialog-placeholder-content',\n                                    classes.dialogPlaceholderBackground\n                                )}\n                                style={{ width: contentWidth }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default withStyles(styles)(DialogPlaceholder);\n"]},"metadata":{},"sourceType":"module"}