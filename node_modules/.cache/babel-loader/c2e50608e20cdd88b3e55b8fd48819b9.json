{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import copy from'copy-to-clipboard';import{compose}from'recompose';import{withTranslation}from'react-i18next';import{withSnackbar}from'notistack';import withStyles from'@material-ui/core/styles/withStyles';import CloseIcon from'@material-ui/icons/Close';import LinkIcon from'@material-ui/icons/Link';import MoreIcon from'@material-ui/icons/MoreVert';import IconButton from'@material-ui/core/IconButton';import ShareIcon from'@material-ui/icons/Share';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';import{NOTIFICATION_AUTO_HIDE_DURATION_MS}from'../../Constants';import OptionStore from'../../Stores/OptionStore';import StickerStore from'../../Stores/StickerStore';import ApplicationStore from'../../Stores/ApplicationStore';import TdLibController from'../../Controllers/TdLibController';var styles=function styles(theme){return{close:{padding:theme.spacing.unit/2}};};var ShareStickerSetButton=/*#__PURE__*/function(_React$Component){_inherits(ShareStickerSetButton,_React$Component);function ShareStickerSetButton(){var _getPrototypeOf2;var _this;_classCallCheck(this,ShareStickerSetButton);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ShareStickerSetButton)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={anchorEl:null};_this.handleMenuClick=function(event){_this.handleOpen(event.currentTarget);};_this.handleOpen=function(anchorEl){_this.setState({anchorEl:anchorEl});};_this.handleClose=function(){_this.setState({anchorEl:null});};_this.handleCopyLink=function(){_this.handleClose();var t=_this.props.t;var link=_this.getStickersLink(StickerStore.stickerSet);if(!link)return;copy(link);var key=\"\".concat(link,\"_copy_stickers_link\");var message=t('LinkCopied');var action=null;_this.handleScheduledAction(key,message,action);};_this.getStickersLink=function(stickerSet){if(!stickerSet)return'';var name=stickerSet.name;if(!name)return'';var telegramUrlOption=OptionStore.get('t_me_url');return(telegramUrlOption?telegramUrlOption.value:'https://telegram.org/')+'addstickers/'+name;};_this.handleScheduledAction=function(key,message,action){if(!key)return;var _this$props=_this.props,enqueueSnackbar=_this$props.enqueueSnackbar,classes=_this$props.classes,t=_this$props.t;if(!enqueueSnackbar)return;var TRANSITION_DELAY=150;if(ApplicationStore.addScheduledAction(key,NOTIFICATION_AUTO_HIDE_DURATION_MS+2*TRANSITION_DELAY,action)){enqueueSnackbar(message,{autoHideDuration:NOTIFICATION_AUTO_HIDE_DURATION_MS,action:[React.createElement(IconButton,{key:\"close\",\"aria-label\":\"Close\",color:\"inherit\",className:classes.close,onClick:function onClick(){return ApplicationStore.removeScheduledAction(key);}},React.createElement(CloseIcon,null))]});}};_this.handleShare=function(){_this.handleClose();var link=_this.getStickersLink(StickerStore.stickerSet);if(!link)return;TdLibController.clientUpdate({'@type':'clientUpdateStickerSet',stickerSet:null});TdLibController.clientUpdate({'@type':'clientUpdateForward',info:{link:link}});};return _this;}_createClass(ShareStickerSetButton,[{key:\"render\",value:function render(){var _this$props2=this.props,classes=_this$props2.classes,t=_this$props2.t,className=_this$props2.className;var anchorEl=this.state.anchorEl;return React.createElement(React.Fragment,null,React.createElement(IconButton,{className:classes.iconButton+' '+className,\"aria-label\":\"Share\",open:Boolean(anchorEl),onClick:this.handleMenuClick},React.createElement(MoreIcon,null)),React.createElement(Menu,{id:\"attach-menu\",anchorEl:anchorEl,open:Boolean(anchorEl),getContentAnchorEl:null,disableAutoFocusItem:true,disableRestoreFocus:true,anchorOrigin:{vertical:'bottom',horizontal:'right'},transformOrigin:{vertical:'top',horizontal:'right'},onClose:this.handleClose},React.createElement(MenuItem,{onClick:this.handleCopyLink},React.createElement(ListItemIcon,null,React.createElement(LinkIcon,null)),React.createElement(ListItemText,{primary:t('CopyLink')})),React.createElement(MenuItem,{onClick:this.handleShare},React.createElement(ListItemIcon,null,React.createElement(ShareIcon,null)),React.createElement(ListItemText,{primary:t('StickersShare')}))));}}]);return ShareStickerSetButton;}(React.Component);var enhance=compose(withStyles(styles,{withTheme:true}),withTranslation(),withSnackbar);export default enhance(ShareStickerSetButton);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Popup/ShareStickerSetButton.js"],"names":["React","copy","compose","withTranslation","withSnackbar","withStyles","CloseIcon","LinkIcon","MoreIcon","IconButton","ShareIcon","ListItemIcon","ListItemText","Menu","MenuItem","NOTIFICATION_AUTO_HIDE_DURATION_MS","OptionStore","StickerStore","ApplicationStore","TdLibController","styles","theme","close","padding","spacing","unit","ShareStickerSetButton","state","anchorEl","handleMenuClick","event","handleOpen","currentTarget","setState","handleClose","handleCopyLink","t","props","link","getStickersLink","stickerSet","key","message","action","handleScheduledAction","name","telegramUrlOption","get","value","enqueueSnackbar","classes","TRANSITION_DELAY","addScheduledAction","autoHideDuration","removeScheduledAction","handleShare","clientUpdate","info","className","iconButton","Boolean","vertical","horizontal","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n"]},"metadata":{},"sourceType":"module"}