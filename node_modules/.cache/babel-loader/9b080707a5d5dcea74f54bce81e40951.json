{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/Popup/ShareStickerSetButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2\n  }\n});\n\nclass ShareStickerSetButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleMenuClick = event => {\n      this.handleOpen(event.currentTarget);\n    };\n\n    this.handleOpen = anchorEl => {\n      this.setState({\n        anchorEl\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleCopyLink = () => {\n      this.handleClose();\n      const t = this.props.t;\n      const link = this.getStickersLink(StickerStore.stickerSet);\n      if (!link) return;\n      copy(link);\n      const key = \"\".concat(link, \"_copy_stickers_link\");\n      const message = t('LinkCopied');\n      const action = null;\n      this.handleScheduledAction(key, message, action);\n    };\n\n    this.getStickersLink = stickerSet => {\n      if (!stickerSet) return '';\n      const name = stickerSet.name;\n      if (!name) return '';\n      const telegramUrlOption = OptionStore.get('t_me_url');\n      return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    this.handleScheduledAction = (key, message, action) => {\n      if (!key) return;\n      const _this$props = this.props,\n            enqueueSnackbar = _this$props.enqueueSnackbar,\n            classes = _this$props.classes,\n            t = _this$props.t;\n      if (!enqueueSnackbar) return;\n      const TRANSITION_DELAY = 150;\n\n      if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n        enqueueSnackbar(message, {\n          autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n          action: [React.createElement(IconButton, {\n            key: \"close\",\n            \"aria-label\": \"Close\",\n            color: \"inherit\",\n            className: classes.close,\n            onClick: () => ApplicationStore.removeScheduledAction(key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(CloseIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }))]\n        });\n      }\n    };\n\n    this.handleShare = () => {\n      this.handleClose();\n      const link = this.getStickersLink(StickerStore.stickerSet);\n      if (!link) return;\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet: null\n      });\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateForward',\n        info: {\n          link\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          classes = _this$props2.classes,\n          t = _this$props2.t,\n          className = _this$props2.className;\n    const anchorEl = this.state.anchorEl;\n    return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n      className: classes.iconButton + ' ' + className,\n      \"aria-label\": \"Share\",\n      open: Boolean(anchorEl),\n      onClick: this.handleMenuClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(MoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Menu, {\n      id: \"attach-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      getContentAnchorEl: null,\n      disableAutoFocusItem: true,\n      disableRestoreFocus: true,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: this.handleCopyLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(LinkIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: t('CopyLink'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      onClick: this.handleShare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(ShareIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: t('StickersShare'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nShareStickerSetButton.propTypes = {};\nconst enhance = compose(withStyles(styles, {\n  withTheme: true\n}), withTranslation(), withSnackbar);\nexport default enhance(ShareStickerSetButton);","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/Popup/ShareStickerSetButton.js"],"names":["React","PropTypes","copy","compose","withTranslation","withSnackbar","withStyles","CloseIcon","LinkIcon","MoreIcon","IconButton","ShareIcon","ListItemIcon","ListItemText","Menu","MenuItem","NOTIFICATION_AUTO_HIDE_DURATION_MS","OptionStore","StickerStore","ApplicationStore","TdLibController","styles","theme","close","padding","spacing","unit","ShareStickerSetButton","Component","state","anchorEl","handleMenuClick","event","handleOpen","currentTarget","setState","handleClose","handleCopyLink","t","props","link","getStickersLink","stickerSet","key","message","action","handleScheduledAction","name","telegramUrlOption","get","value","enqueueSnackbar","classes","TRANSITION_DELAY","addScheduledAction","autoHideDuration","removeScheduledAction","handleShare","clientUpdate","info","render","className","iconButton","Boolean","vertical","horizontal","propTypes","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n"]},"metadata":{},"sourceType":"module"}