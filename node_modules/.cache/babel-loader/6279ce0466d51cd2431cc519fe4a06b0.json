{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/Message/Media/DocumentAction.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nconst styles = theme => ({\n  documentAction: {\n    color: theme.palette.text.secondary\n  }\n});\n\nclass DocumentAction extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateFile = update => {\n      const currentFile = this.state.file;\n      const nextFile = update.file;\n\n      if (currentFile && currentFile.id === nextFile.id) {\n        this.setState({\n          file: nextFile,\n          prevFile: currentFile\n        });\n      }\n    };\n\n    const file = this.props.file;\n    this.state = {\n      prevPropsFile: file,\n      prevFile: null,\n      file: FileStore.get(file.id) || file\n    };\n  }\n\n  componentDidMount() {\n    FileStore.on('updateFile', this.onUpdateFile);\n  }\n\n  componentWillUnmount() {\n    FileStore.removeListener('updateFile', this.onUpdateFile);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const file = props.file;\n    const prevPropsFile = state.prevPropsFile;\n\n    if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n      return {\n        prevPropsFile: file,\n        prevFile: null,\n        file: FileStore.get(file.id) || file\n      };\n    }\n\n    return null;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const theme = this.props.theme;\n    const _this$state = this.state,\n          file = _this$state.file,\n          prevFile = _this$state.prevFile;\n\n    if (nextProps.theme !== theme) {\n      return true;\n    }\n\n    if (nextState.file !== file) {\n      return true;\n    }\n\n    if (nextState.prevFile !== prevFile) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const file = this.state.file;\n    if (!file) return null;\n    const isDownloadingActive = file.local && file.local.is_downloading_active;\n    const isUploadingActive = file.remote && file.remote.is_uploading_active;\n    const size = getFileSize(file);\n    let progressSize = null;\n\n    if (isDownloadingActive) {\n      progressSize = getDownloadedSize(file);\n    } else if (isUploadingActive) {\n      progressSize = getUploadedSize(file);\n    }\n\n    const sizeString = progressSize ? \"\".concat(progressSize, \"/\").concat(size) : \"\".concat(size);\n    return React.createElement(\"div\", {\n      className: classNames('document-action', classes.documentAction),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, sizeString));\n  }\n\n}\n\nDocumentAction.propTypes = {\n  file: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(DocumentAction);","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/Message/Media/DocumentAction.js"],"names":["React","PropTypes","classNames","withStyles","getDownloadedSize","getUploadedSize","getFileSize","FileStore","styles","theme","documentAction","color","palette","text","secondary","DocumentAction","Component","constructor","props","onUpdateFile","update","currentFile","state","file","nextFile","id","setState","prevFile","prevPropsFile","get","componentDidMount","on","componentWillUnmount","removeListener","getDerivedStateFromProps","shouldComponentUpdate","nextProps","nextState","render","classes","isDownloadingActive","local","is_downloading_active","isUploadingActive","remote","is_uploading_active","size","progressSize","sizeString","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nconst styles = theme => ({\n    documentAction: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className={classNames('document-action', classes.documentAction)}>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentAction);\n"]},"metadata":{},"sourceType":"module"}