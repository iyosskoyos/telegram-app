{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import{EventEmitter}from'events';import ActionScheduler from'../Utils/ActionScheduler';import{closeChat}from'../Actions/Client';import{subscribeNotifications}from'../registerServiceWorker';import TdLibController from'../Controllers/TdLibController';var ApplicationStore=/*#__PURE__*/function(_EventEmitter){_inherits(ApplicationStore,_EventEmitter);function ApplicationStore(){var _this;_classCallCheck(this,ApplicationStore);_this=_possibleConstructorReturn(this,_getPrototypeOf(ApplicationStore).call(this));_this.reset=function(){_this.dialogsReady=false;_this.setPhoneNumberRequest=null;_this.chatId=0;_this.dialogChatId=0;_this.messageId=null;_this.statistics=new Map();_this.authorizationState=null;_this.defaultPhone=null;_this.connectionState=null;_this.isChatDetailsVisible=false;_this.mediaViewerContent=null;_this.profileMediaViewerContent=null;_this.dragging=false;_this.actionScheduler=new ActionScheduler(_this.handleScheduledAction,_this.handleCancelScheduledAction);};_this.addScheduledAction=function(key,timeout,action,cancel){return _this.actionScheduler.add(key,timeout,action,cancel);};_this.invokeScheduledAction=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(key){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.actionScheduler.invoke(key);case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.removeScheduledAction=function(key){_this.actionScheduler.remove(key);};_this.handleScheduledAction=function(item){console.log('Invoked scheduled action key=',item.key);};_this.handleCancelScheduledAction=function(item){console.log('Cancel scheduled action key=',item.key);};_this.onUpdate=function(update){switch(update['@type']){case'updateAuthorizationState':{_this.authorizationState=update.authorization_state;switch(update.authorization_state['@type']){case'authorizationStateLoggingOut':_this.loggingOut=true;break;case'authorizationStateWaitTdlibParameters':TdLibController.sendTdParameters();break;case'authorizationStateWaitEncryptionKey':TdLibController.send({'@type':'checkDatabaseEncryptionKey'});break;case'authorizationStateWaitPhoneNumber':{if(_this.setPhoneNumberRequest){_this.setPhoneNumberRequest();_this.setPhoneNumberRequest=null;}break;}case'authorizationStateWaitCode':break;case'authorizationStateWaitPassword':break;case'authorizationStateReady':_this.loggingOut=false;_this.setPhoneNumberRequest=null;subscribeNotifications();break;case'authorizationStateClosing':break;case'authorizationStateClosed':_this.reset();if(!_this.loggingOut){document.title+=': Zzzâ€¦';_this.emit('clientUpdateAppInactive');}else{TdLibController.init();}break;default:break;}_this.emit(update['@type'],update);break;}case'updateChatIsMarkedAsUnread':{var chat_id=update.chat_id,is_marked_as_unread=update.is_marked_as_unread;if(chat_id===_this.chatId&&is_marked_as_unread){closeChat();}break;}case'updateConnectionState':{_this.connectionState=update.state;_this.emit(update['@type'],update);break;}case'updateFatalError':{_this.emit(update['@type'],update);break;}case'updateServiceNotification':{var type=update.type,content=update.content;if(!content)return;if(content['@type']==='messageText'){var text=content.text;if(!text)return;if(text['@type']==='formattedText'&&text.text){switch(type){case'AUTH_KEY_DROP_DUPLICATE':var result=window.confirm(text.text);if(result){TdLibController.logOut();}break;default:alert(text.text);break;}}}break;}default:break;}};_this.onClientUpdate=function(update){switch(update['@type']){case'clientUpdateChatId':{var extendedUpdate={'@type':'clientUpdateChatId',nextChatId:update.chatId,nextMessageId:update.messageId,previousChatId:_this.chatId,previousMessageId:_this.messageId};_this.chatId=update.chatId;_this.messageId=update.messageId;_this.emit('clientUpdateChatId',extendedUpdate);break;}case'clientUpdateDatabaseExists':{_this.emit('clientUpdateDatabaseExists',update);break;}case'clientUpdateDialogsReady':{_this.dialogsReady=true;_this.emit('clientUpdateDialogsReady',update);break;}case'clientUpdateMediaViewerContent':{var content=update.content;_this.mediaViewerContent=content;_this.emit('clientUpdateMediaViewerContent',update);break;}case'clientUpdateProfileMediaViewerContent':{var _content=update.content;_this.profileMediaViewerContent=_content;_this.emit('clientUpdateProfileMediaViewerContent',update);break;}case'clientUpdateSearchChat':{_this.emit('clientUpdateSearchChat',update);break;}case'clientUpdateSetPhone':{var phone=update.phone;_this.defaultPhone=phone;if(!phone){_this.setPhoneNumberRequest=null;TdLibController.clientUpdate({'@type':'clientUpdateSetPhoneCanceled'});}else{if(_this.authorizationState&&_this.authorizationState['@type']==='authorizationStateWaitPhoneNumber'){_this.setPhoneNumber(phone);}else{_this.setPhoneNumberRequest=function(){return _this.setPhoneNumber(phone);};}}_this.emit('clientUpdateSetPhone',update);break;}case'clientUpdateSetPhoneResult':{_this.emit('clientUpdateSetPhoneResult',update);break;}case'clientUpdateSetPhoneError':{_this.emit('clientUpdateSetPhoneError',update);break;}case'clientUpdateDialogChatId':{var chatId=update.chatId;_this.dialogChatId=chatId;_this.emit('clientUpdateDialogChatId',update);break;}case'clientUpdateFocusWindow':{if(!_this.authorizationState){break;}TdLibController.send({'@type':'setOption',name:'online',value:{'@type':'optionValueBoolean',value:update.focused}});_this.emit('clientUpdateFocusWindow',update);break;}case'clientUpdateForward':{_this.emit('clientUpdateForward',update);break;}case'clientUpdateLeaveChat':{if(update.inProgress&&_this.chatId===update.chatId){TdLibController.setChatId(0);}break;}}};_this.setPhoneNumber=function(phone){TdLibController.send({'@type':'setAuthenticationPhoneNumber',phone_number:phone}).then(function(result){TdLibController.clientUpdate({'@type':'clientUpdateSetPhoneResult',result:result});}).catch(function(error){TdLibController.clientUpdate({'@type':'clientUpdateSetPhoneError',error:error});});};_this.onUpdateStatistics=function(update){if(!update)return;if(_this.statistics.has(update['@type'])){var count=_this.statistics.get(update['@type']);_this.statistics.set(update['@type'],count+1);}else{_this.statistics.set(update['@type'],1);}};_this.addTdLibListener=function(){TdLibController.addListener('update',_this.onUpdate);TdLibController.addListener('clientUpdate',_this.onClientUpdate);};_this.removeTdLibListener=function(){TdLibController.removeListener('update',_this.onUpdate);TdLibController.removeListener('clientUpdate',_this.onClientUpdate);};_this.addStatistics=function(){TdLibController.addListener('update',_this.onUpdateStatistics);};_this.setChatId=function(chatId){var messageId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var update={'@type':'clientUpdateChatId',nextChatId:chatId,nextMessageId:messageId,previousChatId:_this.chatId,previousMessageId:_this.messageId};_this.chatId=chatId;_this.messageId=messageId;_this.emit(update['@type'],update);};_this.getDragging=function(){return _this.dragging;};_this.setDragging=function(value){_this.dragging=value;_this.emit('clientUpdateDragging',value);};_this.reset();_this.addTdLibListener();_this.addStatistics();_this.setMaxListeners(Infinity);return _this;}_createClass(ApplicationStore,[{key:\"getChatId\",value:function getChatId(){return this.chatId;}},{key:\"getMessageId\",value:function getMessageId(){return this.messageId;}},{key:\"changeChatDetailsVisibility\",value:function changeChatDetailsVisibility(visibility){this.isChatDetailsVisible=visibility;this.emit('clientUpdateChatDetailsVisibility',visibility);}},{key:\"getConnectionState\",value:function getConnectionState(){return this.connectionState;}},{key:\"getAuthorizationState\",value:function getAuthorizationState(){return this.authorizationState;}},{key:\"assign\",value:function assign(source1,source2){Object.assign(source1,source2);//this.set(Object.assign({}, source1, source2));\n}}]);return ApplicationStore;}(EventEmitter);var store=new ApplicationStore();window.app=store;export default store;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Stores/ApplicationStore.js"],"names":["EventEmitter","ActionScheduler","closeChat","subscribeNotifications","TdLibController","ApplicationStore","reset","dialogsReady","setPhoneNumberRequest","chatId","dialogChatId","messageId","statistics","Map","authorizationState","defaultPhone","connectionState","isChatDetailsVisible","mediaViewerContent","profileMediaViewerContent","dragging","actionScheduler","handleScheduledAction","handleCancelScheduledAction","addScheduledAction","key","timeout","action","cancel","add","invokeScheduledAction","invoke","removeScheduledAction","remove","item","console","log","onUpdate","update","authorization_state","loggingOut","sendTdParameters","send","document","title","emit","init","chat_id","is_marked_as_unread","state","type","content","text","result","window","confirm","logOut","alert","onClientUpdate","extendedUpdate","nextChatId","nextMessageId","previousChatId","previousMessageId","phone","clientUpdate","setPhoneNumber","name","value","focused","inProgress","setChatId","phone_number","then","catch","error","onUpdateStatistics","has","count","get","set","addTdLibListener","addListener","removeTdLibListener","removeListener","addStatistics","getDragging","setDragging","setMaxListeners","Infinity","visibility","source1","source2","Object","assign","store","app"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport ActionScheduler from '../Utils/ActionScheduler';\nimport { closeChat } from '../Actions/Client';\nimport { subscribeNotifications } from '../registerServiceWorker';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass ApplicationStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.addStatistics();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.dialogsReady = false;\n        this.setPhoneNumberRequest = null;\n        this.chatId = 0;\n        this.dialogChatId = 0;\n        this.messageId = null;\n        this.statistics = new Map();\n        this.authorizationState = null;\n        this.defaultPhone = null;\n        this.connectionState = null;\n        this.isChatDetailsVisible = false;\n        this.mediaViewerContent = null;\n        this.profileMediaViewerContent = null;\n        this.dragging = false;\n        this.actionScheduler = new ActionScheduler(this.handleScheduledAction, this.handleCancelScheduledAction);\n    };\n\n    addScheduledAction = (key, timeout, action, cancel) => {\n        return this.actionScheduler.add(key, timeout, action, cancel);\n    };\n\n    invokeScheduledAction = async key => {\n        await this.actionScheduler.invoke(key);\n    };\n\n    removeScheduledAction = key => {\n        this.actionScheduler.remove(key);\n    };\n\n    handleScheduledAction = item => {\n        console.log('Invoked scheduled action key=', item.key);\n    };\n\n    handleCancelScheduledAction = item => {\n        console.log('Cancel scheduled action key=', item.key);\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                this.authorizationState = update.authorization_state;\n\n                switch (update.authorization_state['@type']) {\n                    case 'authorizationStateLoggingOut':\n                        this.loggingOut = true;\n                        break;\n                    case 'authorizationStateWaitTdlibParameters':\n                        TdLibController.sendTdParameters();\n                        break;\n                    case 'authorizationStateWaitEncryptionKey':\n                        TdLibController.send({ '@type': 'checkDatabaseEncryptionKey' });\n                        break;\n                    case 'authorizationStateWaitPhoneNumber': {\n                        if (this.setPhoneNumberRequest) {\n                            this.setPhoneNumberRequest();\n\n                            this.setPhoneNumberRequest = null;\n                        }\n\n                        break;\n                    }\n                    case 'authorizationStateWaitCode':\n                        break;\n                    case 'authorizationStateWaitPassword':\n                        break;\n                    case 'authorizationStateReady':\n                        this.loggingOut = false;\n                        this.setPhoneNumberRequest = null;\n                        subscribeNotifications();\n                        break;\n                    case 'authorizationStateClosing':\n                        break;\n                    case 'authorizationStateClosed':\n                        this.reset();\n\n                        if (!this.loggingOut) {\n                            document.title += ': Zzzâ€¦';\n                            this.emit('clientUpdateAppInactive');\n                        } else {\n                            TdLibController.init();\n                        }\n                        break;\n                    default:\n                        break;\n                }\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateChatIsMarkedAsUnread': {\n                const { chat_id, is_marked_as_unread } = update;\n                if (chat_id === this.chatId && is_marked_as_unread) {\n                    closeChat();\n                }\n\n                break;\n            }\n            case 'updateConnectionState': {\n                this.connectionState = update.state;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateFatalError': {\n                this.emit(update['@type'], update);\n\n                break;\n            }\n            case 'updateServiceNotification': {\n                const { type, content } = update;\n\n                if (!content) return;\n                if (content['@type'] === 'messageText') {\n                    const { text } = content;\n                    if (!text) return;\n\n                    if (text['@type'] === 'formattedText' && text.text) {\n                        switch (type) {\n                            case 'AUTH_KEY_DROP_DUPLICATE':\n                                let result = window.confirm(text.text);\n                                if (result) {\n                                    TdLibController.logOut();\n                                }\n                                break;\n                            default:\n                                alert(text.text);\n                                break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatId': {\n                const extendedUpdate = {\n                    '@type': 'clientUpdateChatId',\n                    nextChatId: update.chatId,\n                    nextMessageId: update.messageId,\n                    previousChatId: this.chatId,\n                    previousMessageId: this.messageId\n                };\n\n                this.chatId = update.chatId;\n                this.messageId = update.messageId;\n\n                this.emit('clientUpdateChatId', extendedUpdate);\n                break;\n            }\n            case 'clientUpdateDatabaseExists': {\n                this.emit('clientUpdateDatabaseExists', update);\n                break;\n            }\n            case 'clientUpdateDialogsReady': {\n                this.dialogsReady = true;\n                this.emit('clientUpdateDialogsReady', update);\n                break;\n            }\n            case 'clientUpdateMediaViewerContent': {\n                const { content } = update;\n                this.mediaViewerContent = content;\n\n                this.emit('clientUpdateMediaViewerContent', update);\n                break;\n            }\n            case 'clientUpdateProfileMediaViewerContent': {\n                const { content } = update;\n                this.profileMediaViewerContent = content;\n\n                this.emit('clientUpdateProfileMediaViewerContent', update);\n                break;\n            }\n            case 'clientUpdateSearchChat': {\n                this.emit('clientUpdateSearchChat', update);\n                break;\n            }\n            case 'clientUpdateSetPhone': {\n                const { phone } = update;\n\n                this.defaultPhone = phone;\n\n                if (!phone) {\n                    this.setPhoneNumberRequest = null;\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateSetPhoneCanceled'\n                    });\n                } else {\n                    if (\n                        this.authorizationState &&\n                        this.authorizationState['@type'] === 'authorizationStateWaitPhoneNumber'\n                    ) {\n                        this.setPhoneNumber(phone);\n                    } else {\n                        this.setPhoneNumberRequest = () => this.setPhoneNumber(phone);\n                    }\n                }\n\n                this.emit('clientUpdateSetPhone', update);\n                break;\n            }\n            case 'clientUpdateSetPhoneResult': {\n                this.emit('clientUpdateSetPhoneResult', update);\n                break;\n            }\n            case 'clientUpdateSetPhoneError': {\n                this.emit('clientUpdateSetPhoneError', update);\n                break;\n            }\n            case 'clientUpdateDialogChatId': {\n                const { chatId } = update;\n                this.dialogChatId = chatId;\n\n                this.emit('clientUpdateDialogChatId', update);\n                break;\n            }\n            case 'clientUpdateFocusWindow': {\n                if (!this.authorizationState) {\n                    break;\n                }\n\n                TdLibController.send({\n                    '@type': 'setOption',\n                    name: 'online',\n                    value: { '@type': 'optionValueBoolean', value: update.focused }\n                });\n\n                this.emit('clientUpdateFocusWindow', update);\n                break;\n            }\n            case 'clientUpdateForward': {\n                this.emit('clientUpdateForward', update);\n                break;\n            }\n            case 'clientUpdateLeaveChat': {\n                if (update.inProgress && this.chatId === update.chatId) {\n                    TdLibController.setChatId(0);\n                }\n\n                break;\n            }\n        }\n    };\n\n    setPhoneNumber = phone => {\n        TdLibController.send({\n            '@type': 'setAuthenticationPhoneNumber',\n            phone_number: phone\n        })\n            .then(result => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateSetPhoneResult',\n                    result\n                });\n            })\n            .catch(error => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateSetPhoneError',\n                    error\n                });\n            });\n    };\n\n    onUpdateStatistics = update => {\n        if (!update) return;\n\n        if (this.statistics.has(update['@type'])) {\n            const count = this.statistics.get(update['@type']);\n\n            this.statistics.set(update['@type'], count + 1);\n        } else {\n            this.statistics.set(update['@type'], 1);\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    addStatistics = () => {\n        TdLibController.addListener('update', this.onUpdateStatistics);\n    };\n\n    setChatId = (chatId, messageId = null) => {\n        const update = {\n            '@type': 'clientUpdateChatId',\n            nextChatId: chatId,\n            nextMessageId: messageId,\n            previousChatId: this.chatId,\n            previousMessageId: this.messageId\n        };\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n        this.emit(update['@type'], update);\n    };\n\n    getChatId() {\n        return this.chatId;\n    }\n\n    getMessageId() {\n        return this.messageId;\n    }\n\n    changeChatDetailsVisibility(visibility) {\n        this.isChatDetailsVisible = visibility;\n        this.emit('clientUpdateChatDetailsVisibility', visibility);\n    }\n\n    getConnectionState() {\n        return this.connectionState;\n    }\n\n    getAuthorizationState() {\n        return this.authorizationState;\n    }\n\n    getDragging = () => {\n        return this.dragging;\n    };\n\n    setDragging = value => {\n        this.dragging = value;\n        this.emit('clientUpdateDragging', value);\n    };\n\n    assign(source1, source2) {\n        Object.assign(source1, source2);\n        //this.set(Object.assign({}, source1, source2));\n    }\n}\n\nconst store = new ApplicationStore();\nwindow.app = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}