{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/ColumnRight/SharedMedia/SharedVoiceNotes.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n  isValidContent(content) {\n    return content && content['@type'] === 'messageVoiceNote';\n  }\n\n  getSearchFilter() {\n    return {\n      '@type': 'searchMessagesFilterVoiceNote'\n    };\n  }\n\n  getHeader() {\n    const t = this.props.t;\n    return t('VoiceTitle');\n  }\n\n  hasSearch() {\n    return false;\n  }\n\n  getItemTemplate(message) {\n    const migratedChatId = this.props.migratedChatId;\n    const chat_id = message.chat_id,\n          content = message.content,\n          id = message.id;\n    return React.createElement(SharedVoiceNote, {\n      key: \"chat_id=\".concat(chat_id, \"_message_id=\").concat(id),\n      chatId: chat_id,\n      messageId: id,\n      voiceNote: content.voice_note,\n      openMedia: () => openMedia(chat_id, id, false),\n      showOpenMessage: chat_id !== migratedChatId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n}\n\nSharedVoiceNotes.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  migratedChatId: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n  popup: PropTypes.bool,\n  minHeight: PropTypes.number\n};\nSharedVoiceNotes.defaultProps = {\n  popup: false,\n  minHeight: 0\n};\nconst enhance = compose(withStyles(SharedMediaBase.getStyles), withTranslation());\nexport default enhance(SharedVoiceNotes);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/ColumnRight/SharedMedia/SharedVoiceNotes.js"],"names":["React","PropTypes","compose","withStyles","withTranslation","SharedMediaBase","SharedVoiceNote","openMedia","SharedVoiceNotes","isValidContent","content","getSearchFilter","getHeader","t","props","hasSearch","getItemTemplate","message","migratedChatId","chat_id","id","voice_note","propTypes","chatId","number","isRequired","onClose","func","popup","bool","minHeight","defaultProps","enhance","getStyles"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAO,wBAAP;;AAEA,MAAMC,gBAAN,SAA+BH,eAA/B,CAA+C;AAC3CI,EAAAA,cAAc,CAACC,OAAD,EAAU;AACpB,WAAOA,OAAO,IAAIA,OAAO,CAAC,OAAD,CAAP,KAAqB,kBAAvC;AACH;;AAEDC,EAAAA,eAAe,GAAG;AACd,WAAO;AAAE,eAAS;AAAX,KAAP;AACH;;AAEDC,EAAAA,SAAS,GAAG;AAAA,UACAC,CADA,GACM,KAAKC,KADX,CACAD,CADA;AAGR,WAAOA,CAAC,CAAC,YAAD,CAAR;AACH;;AAEDE,EAAAA,SAAS,GAAG;AACR,WAAO,KAAP;AACH;;AAEDC,EAAAA,eAAe,CAACC,OAAD,EAAU;AAAA,UACbC,cADa,GACM,KAAKJ,KADX,CACbI,cADa;AAAA,UAEbC,OAFa,GAEYF,OAFZ,CAEbE,OAFa;AAAA,UAEJT,OAFI,GAEYO,OAFZ,CAEJP,OAFI;AAAA,UAEKU,EAFL,GAEYH,OAFZ,CAEKG,EAFL;AAIrB,WACI,oBAAC,eAAD;AACI,MAAA,GAAG,oBAAaD,OAAb,yBAAmCC,EAAnC,CADP;AAEI,MAAA,MAAM,EAAED,OAFZ;AAGI,MAAA,SAAS,EAAEC,EAHf;AAII,MAAA,SAAS,EAAEV,OAAO,CAACW,UAJvB;AAKI,MAAA,SAAS,EAAE,MAAMd,SAAS,CAACY,OAAD,EAAUC,EAAV,EAAc,KAAd,CAL9B;AAMI,MAAA,eAAe,EAAED,OAAO,KAAKD,cANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AAjC0C;;AAoC/CV,gBAAgB,CAACc,SAAjB,GAA6B;AACzBC,EAAAA,MAAM,EAAEtB,SAAS,CAACuB,MAAV,CAAiBC,UADA;AAEzBP,EAAAA,cAAc,EAAEjB,SAAS,CAACuB,MAFD;AAGzBE,EAAAA,OAAO,EAAEzB,SAAS,CAAC0B,IAAV,CAAeF,UAHC;AAIzBG,EAAAA,KAAK,EAAE3B,SAAS,CAAC4B,IAJQ;AAKzBC,EAAAA,SAAS,EAAE7B,SAAS,CAACuB;AALI,CAA7B;AAQAhB,gBAAgB,CAACuB,YAAjB,GAAgC;AAC5BH,EAAAA,KAAK,EAAE,KADqB;AAE5BE,EAAAA,SAAS,EAAE;AAFiB,CAAhC;AAKA,MAAME,OAAO,GAAG9B,OAAO,CACnBC,UAAU,CAACE,eAAe,CAAC4B,SAAjB,CADS,EAEnB7B,eAAe,EAFI,CAAvB;AAKA,eAAe4B,OAAO,CAACxB,gBAAD,CAAtB","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNotes);\n"]},"metadata":{},"sourceType":"module"}