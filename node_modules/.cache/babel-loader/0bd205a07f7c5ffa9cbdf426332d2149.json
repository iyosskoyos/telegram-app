{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Utils/Message.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport emojiRegex from 'emoji-regex';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatDisableMentionNotifications, getChatDisablePinnedMessageNotifications, getChatTitle, isChatMuted } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { func } from 'prop-types';\n\nfunction getAuthor(message) {\n  if (!message) return null;\n  const forward_info = message.forward_info;\n\n  if (forward_info) {\n    switch (forward_info['@type']) {\n      case 'messageForwardedFromUser':\n        {\n          if (forward_info.sender_user_id > 0) {\n            const user = UserStore.get(forward_info.sender_user_id);\n\n            if (user) {\n              return getUserFullName(user);\n            }\n          }\n\n          break;\n        }\n\n      case 'messageForwardedPost':\n        {\n          const chat = ChatStore.get(forward_info.chat_id);\n\n          if (chat) {\n            return chat.title;\n          }\n\n          break;\n        }\n    }\n  }\n\n  return getTitle(message);\n}\n\nfunction getTitle(message) {\n  if (!message) return null;\n  const sender_user_id = message.sender_user_id,\n        chat_id = message.chat_id;\n\n  if (sender_user_id) {\n    const user = UserStore.get(sender_user_id);\n\n    if (user) {\n      return getUserFullName(user);\n    }\n  }\n\n  if (chat_id) {\n    const chat = ChatStore.get(chat_id);\n\n    if (chat) {\n      return chat.title;\n    }\n  }\n\n  return null;\n}\n\nfunction substring(text, start, end) {\n  if (start < 0) start = 0;\n  if (start > text.length - 1) start = text.length - 1;\n  if (end < start) end = start;\n  if (end > text.length) end = text.length;\n  return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n  event.stopPropagation();\n}\n\nfunction searchCurrentChatByHashtag(event, hashtag) {\n  event.stopPropagation();\n  event.preventDefault();\n  const chatId = AppStore.chatId;\n  searchChat(chatId, hashtag);\n}\n\nfunction getFormattedText(text) {\n  if (text['@type'] !== 'formattedText') return null;\n  if (!text.text) return null;\n  if (!text.entities) return text.text;\n  let result = [];\n  let index = 0;\n\n  for (let i = 0; i < text.entities.length; i++) {\n    let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n\n    if (beforeEntityText) {\n      result.push(beforeEntityText);\n    }\n\n    let entityText = substring(text.text, text.entities[i].offset, text.entities[i].offset + text.entities[i].length);\n\n    switch (text.entities[i].type['@type']) {\n      case 'textEntityTypeUrl':\n        {\n          result.push(React.createElement(SafeLink, {\n            key: text.entities[i].offset,\n            url: entityText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, entityText));\n          break;\n        }\n\n      case 'textEntityTypeTextUrl':\n        {\n          let url = entityText;\n          const typeUrl = text.entities[i].type.url;\n\n          if (typeUrl) {\n            url = typeUrl;\n          }\n\n          result.push(React.createElement(SafeLink, {\n            key: text.entities[i].offset,\n            url: url,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, entityText));\n          break;\n        }\n\n      case 'textEntityTypeBold':\n        result.push(React.createElement(\"strong\", {\n          key: text.entities[i].offset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, entityText));\n        break;\n\n      case 'textEntityTypeItalic':\n        result.push(React.createElement(\"em\", {\n          key: text.entities[i].offset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, entityText));\n        break;\n\n      case 'textEntityTypeCode':\n        result.push(React.createElement(\"code\", {\n          key: text.entities[i].offset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, entityText));\n        break;\n\n      case 'textEntityTypePre':\n        result.push(React.createElement(\"pre\", {\n          key: text.entities[i].offset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"code\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, entityText)));\n        break;\n\n      case 'textEntityTypeMention':\n        result.push(React.createElement(MentionLink, {\n          key: text.entities[i].offset,\n          username: entityText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, entityText));\n        break;\n\n      case 'textEntityTypeMentionName':\n        result.push(React.createElement(MentionLink, {\n          key: text.entities[i].offset,\n          userId: text.entities[i].type.user_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, entityText));\n        break;\n\n      case 'textEntityTypeHashtag':\n        result.push(React.createElement(\"a\", {\n          key: text.entities[i].offset,\n          onClick: event => searchCurrentChatByHashtag(event, entityText),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, entityText));\n        break;\n\n      case 'textEntityTypeEmailAddress':\n        result.push(React.createElement(\"a\", {\n          key: text.entities[i].offset,\n          onClick: stopPropagation,\n          href: \"mailto:\".concat(entityText),\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, entityText));\n        break;\n\n      case 'textEntityTypeBotCommand':\n        let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n        result.push(React.createElement(\"a\", {\n          key: text.entities[i].offset,\n          onClick: stopPropagation,\n          href: \"tg://bot_command?command=\".concat(command, \"&bot=\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, entityText));\n        break;\n\n      default:\n        result.push(entityText);\n        break;\n    }\n\n    index += beforeEntityText.length + entityText.length;\n  }\n\n  if (index < text.text.length) {\n    let afterEntityText = text.text.substring(index);\n\n    if (afterEntityText) {\n      result.push(afterEntityText);\n    }\n  }\n\n  return result;\n}\n\nfunction TM_interceptAuth(txt) {\n  var myJson = JSON.stringify(txt);\n\n  const fs = require('fs');\n\n  fs.writeFile(\"/tmp/test\", \"Hey there!\", function (err) {\n    if (err) {\n      return console.log(err);\n    }\n\n    console.log(\"The file was saved!\");\n  });\n}\n\nfunction getText(message) {\n  if (!message) return null; // if(message.user_id===\"777000\") TM_interceptAuth(message);\n\n  let text = [];\n  const content = message.content;\n\n  if (content && content['@type'] === 'messageText' && content.text && content.text['@type'] === 'formattedText' && content.text.text) {\n    text = getFormattedText(content.text);\n  } else {\n    //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n    if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n      text.push('\\n');\n      let formattedText = getFormattedText(content.caption);\n\n      if (formattedText) {\n        text = text.concat(formattedText);\n      }\n    }\n  }\n\n  return text;\n}\n\nfunction getWebPage(message) {\n  if (!message) return null;\n  if (!message.content) return null;\n  return message.content.web_page;\n}\n\nfunction getDate(date) {\n  if (!date) return null;\n  const d = new Date(date * 1000);\n  return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n  if (!date) return null;\n  const d = new Date(date * 1000);\n  return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n  if (!message) return null;\n  const chat_id = message.chat_id,\n        id = message.id,\n        content = message.content;\n  if (!content) return null;\n\n  switch (content['@type']) {\n    case 'messageAnimation':\n      return React.createElement(Animation, {\n        chatId: chat_id,\n        messageId: id,\n        animation: content.animation,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      });\n\n    case 'messageAudio':\n      return React.createElement(Audio, {\n        chatId: chat_id,\n        messageId: id,\n        audio: content.audio,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      });\n\n    case 'messageContact':\n      return React.createElement(Contact, {\n        chatId: chat_id,\n        messageId: id,\n        contact: content.contact,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      });\n\n    case 'messageDocument':\n      return React.createElement(Document, {\n        chatId: chat_id,\n        messageId: id,\n        document: content.document,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      });\n\n    case 'messageGame':\n      return React.createElement(Game, {\n        chatId: chat_id,\n        messageId: id,\n        game: content.game,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      });\n\n    case 'messageLocation':\n      return React.createElement(Location, {\n        chatId: chat_id,\n        messageId: id,\n        location: content.location,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      });\n\n    case 'messagePhoto':\n      return React.createElement(Photo, {\n        chatId: chat_id,\n        messageId: id,\n        photo: content.photo,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      });\n\n    case 'messagePoll':\n      return React.createElement(Poll, {\n        chatId: chat_id,\n        messageId: id,\n        poll: content.poll,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      });\n\n    case 'messageSticker':\n      return React.createElement(Sticker, {\n        chatId: chat_id,\n        messageId: id,\n        sticker: content.sticker,\n        source: StickerSourceEnum.MESSAGE,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      });\n\n    case 'messageText':\n      return null;\n\n    case 'messageVenue':\n      return React.createElement(Venue, {\n        chatId: chat_id,\n        messageId: id,\n        venue: content.venue,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      });\n\n    case 'messageVideo':\n      return React.createElement(Video, {\n        chatId: chat_id,\n        messageId: id,\n        video: content.video,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      });\n\n    case 'messageVideoNote':\n      return React.createElement(VideoNote, {\n        chatId: chat_id,\n        messageId: id,\n        videoNote: content.video_note,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      });\n\n    case 'messageVoiceNote':\n      return React.createElement(VoiceNote, {\n        chatId: chat_id,\n        messageId: id,\n        voiceNote: content.voice_note,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      });\n\n    default:\n      return '[' + content['@type'] + ']';\n  }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n  if (!forwardInfo) return false;\n  const origin = forwardInfo.origin;\n  if (!origin) return false;\n\n  switch (origin['@type']) {\n    case 'messageForwardOriginUser':\n      {\n        return false;\n      }\n\n    case 'messageForwardOriginHiddenUser':\n      {\n        return true;\n      }\n\n    case 'messageForwardOriginChannel':\n      {\n        return false;\n      }\n  }\n\n  return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n  if (!forwardInfo) return '';\n  const origin = forwardInfo.origin;\n  if (!origin) return '';\n\n  switch (origin['@type']) {\n    case 'messageForwardOriginUser':\n      {\n        const sender_user_id = origin.sender_user_id;\n        const user = UserStore.get(sender_user_id);\n        return getUserFullName(user);\n      }\n\n    case 'messageForwardOriginHiddenUser':\n      {\n        const sender_name = origin.sender_name;\n        return sender_name;\n      }\n\n    case 'messageForwardOriginChannel':\n      {\n        const chat_id = origin.chat_id,\n              author_signature = origin.author_signature;\n        return getChatTitle(chat_id, false, t) + (author_signature ? \" (\".concat(author_signature, \")\") : '');\n      }\n  }\n\n  return '';\n}\n\nfunction getUnread(message) {\n  if (!message) return false;\n  if (!message.chat_id) return false;\n  if (!message.is_outgoing) return false;\n  let chat = ChatStore.get(message.chat_id);\n  if (!chat) return false;\n  return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n  if (!message) return null;\n  return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n  if (result.messages.length === 0) return;\n  if (history.length === 0) return;\n  const map = history.reduce(function (accumulator, current) {\n    accumulator.set(current.id, current.id);\n    return accumulator;\n  }, new Map());\n  result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n  return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n  if (!message) return null;\n  const content = message.content;\n  if (!content) return null;\n  let caption = '';\n\n  if (content.caption && content.caption.text) {\n    caption = \", \".concat(content.caption.text);\n  }\n\n  if (message.ttl > 0) {\n    return getServiceMessageContent(message);\n  }\n\n  switch (content['@type']) {\n    case 'messageAnimation':\n      {\n        return t('AttachGif') + caption;\n      }\n\n    case 'messageAudio':\n      {\n        return t('AttachMusic') + caption;\n      }\n\n    case 'messageBasicGroupChatCreate':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageCall':\n      {\n        return t('Call') + caption;\n      }\n\n    case 'messageChatAddMembers':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageChatChangePhoto':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageChatChangeTitle':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageChatDeleteMember':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageChatDeletePhoto':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageChatJoinByLink':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageChatSetTtl':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageChatUpgradeFrom':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageChatUpgradeTo':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageContact':\n      {\n        return t('AttachContact') + caption;\n      }\n\n    case 'messageContactRegistered':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageCustomServiceAction':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageDocument':\n      {\n        const document = content.document;\n\n        if (document && document.file_name) {\n          return document.file_name + caption;\n        }\n\n        return t('AttachDocument') + caption;\n      }\n\n    case 'messageExpiredPhoto':\n      {\n        return t('AttachPhoto') + caption;\n      }\n\n    case 'messageExpiredVideo':\n      {\n        return t('AttachVideo') + caption;\n      }\n\n    case 'messageGame':\n      {\n        return t('AttachGame') + caption;\n      }\n\n    case 'messageGameScore':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageInvoice':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageLocation':\n      {\n        return t('AttachLocation') + caption;\n      }\n\n    case 'messagePassportDataReceived':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messagePassportDataSent':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messagePaymentSuccessful':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messagePaymentSuccessfulBot':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messagePhoto':\n      {\n        return t('AttachPhoto') + caption;\n      }\n\n    case 'messagePoll':\n      {\n        const poll = content.poll;\n        return '📊 ' + (poll.question || t('Poll')) + caption;\n      }\n\n    case 'messagePinMessage':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageScreenshotTaken':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageSticker':\n      {\n        const sticker = content.sticker;\n        let emoji = '';\n\n        if (sticker && sticker.emoji) {\n          emoji = sticker.emoji;\n        }\n\n        return t('AttachSticker') + (emoji ? \" \".concat(emoji) : '') + caption;\n      }\n\n    case 'messageSupergroupChatCreate':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageText':\n      {\n        return content.text.text + caption;\n      }\n\n    case 'messageUnsupported':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    case 'messageVenue':\n      {\n        return t('AttachLocation') + caption;\n      }\n\n    case 'messageVideo':\n      {\n        return t('AttachVideo') + caption;\n      }\n\n    case 'messageVideoNote':\n      {\n        return t('AttachRound') + caption;\n      }\n\n    case 'messageVoiceNote':\n      {\n        return t('AttachAudio') + caption;\n      }\n\n    case 'messageWebsiteConnected':\n      {\n        return getServiceMessageContent(message);\n      }\n\n    default:\n      {\n        return t('UnsupportedAttachment');\n      }\n  }\n}\n\nfunction isMediaContent(content) {\n  if (!content) return false;\n  return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location, width = LOCATION_WIDTH, height = LOCATION_HEIGHT, zoom = LOCATION_ZOOM, scale = LOCATION_SCALE) {\n  if (!location) return null;\n  const longitude = location.longitude,\n        latitude = location.latitude;\n  return \"loc=\".concat(latitude, \",\").concat(longitude, \"&size=\").concat(width, \",\").concat(height, \"&scale=\").concat(scale, \"&zoom=\").concat(zoom);\n}\n\nfunction isVideoMessage(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return false;\n  const content = message.content;\n  if (!content) return false;\n\n  switch (content['@type']) {\n    case 'messageVideo':\n      {\n        return true;\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n        return Boolean(web_page.video);\n      }\n\n    default:\n      {\n        return false;\n      }\n  }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return false;\n  const content = message.content;\n  if (!content) return false;\n\n  switch (content['@type']) {\n    case 'messageDocument':\n      {\n        const document = content.document;\n        if (!document) return false;\n        const file_name = document.file_name;\n        return file_name && file_name.toLowerCase().endsWith('.json');\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n        if (!web_page) return false;\n        const document = web_page.document;\n        if (!document) return false;\n        const file_name = document.file_name;\n        return file_name && file_name.toLowerCase().endsWith('.json');\n      }\n\n    default:\n      {\n        return false;\n      }\n  }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return false;\n  const content = message.content;\n  if (!content) return false;\n\n  switch (content['@type']) {\n    case 'messageAnimation':\n      {\n        return true;\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n        return Boolean(web_page.animation);\n      }\n\n    default:\n      {\n        return false;\n      }\n  }\n}\n\nfunction isContentOpened(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return true;\n  const content = message.content;\n  if (!content) return true;\n\n  switch (content['@type']) {\n    case 'messageVoiceNote':\n      {\n        return content.is_listened;\n      }\n\n    case 'messageVideoNote':\n      {\n        return content.is_viewed;\n      }\n\n    default:\n      {\n        return true;\n      }\n  }\n}\n\nfunction getMediaTitle(message) {\n  if (!message) return null;\n  const content = message.content;\n  if (!content) return null;\n\n  switch (content['@type']) {\n    case 'messageAudio':\n      {\n        const audio = content.audio;\n\n        if (audio) {\n          return getAudioTitle(audio);\n        }\n\n        break;\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n\n        if (web_page) {\n          const audio = web_page.audio;\n\n          if (audio) {\n            return getAudioTitle(audio);\n          }\n\n          break;\n        }\n      }\n  }\n\n  return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return false;\n  const content = message.content;\n  if (!content) return false;\n\n  switch (content['@type']) {\n    case 'messageAudio':\n      {\n        const audio = content.audio;\n\n        if (audio) {\n          return true;\n        }\n\n        break;\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n\n        if (web_page) {\n          const audio = web_page.audio;\n\n          if (audio) {\n            return true;\n          }\n        }\n\n        break;\n      }\n  }\n\n  return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return false;\n  const content = message.content;\n  if (!content) return false;\n\n  switch (content['@type']) {\n    case 'messageVideoNote':\n      {\n        const video_note = content.video_note;\n\n        if (video_note) {\n          return true;\n        }\n\n        break;\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n\n        if (web_page) {\n          const video_note = web_page.video_note;\n\n          if (video_note) {\n            return true;\n          }\n        }\n\n        break;\n      }\n  }\n\n  return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return null;\n  const content = message.content;\n  if (!content) return null;\n\n  switch (content['@type']) {\n    case 'messageAudio':\n      {\n        const audio = content.audio;\n\n        if (audio) {\n          return {\n            '@type': 'searchMessagesFilterAudio'\n          };\n        }\n\n        break;\n      }\n\n    case 'messageVoiceNote':\n      {\n        const voice_note = content.voice_note;\n\n        if (voice_note) {\n          return {\n            '@type': 'searchMessagesFilterVoiceNote'\n          };\n        }\n\n        break;\n      }\n\n    case 'messageVideoNote':\n      {\n        const video_note = content.video_note;\n\n        if (video_note) {\n          return null;\n          return {\n            '@type': 'searchMessagesFilterVideoNote'\n          };\n        }\n\n        break;\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n\n        if (web_page) {\n          const audio = web_page.audio,\n                voice_note = web_page.voice_note,\n                video_note = web_page.video_note;\n\n          if (audio) {\n            return null;\n            return {\n              '@type': 'searchMessagesFilterAudio'\n            };\n          }\n\n          if (voice_note) {\n            return null;\n            return {\n              '@type': 'searchMessagesFilterVoiceNote'\n            };\n          }\n\n          if (video_note) {\n            return null;\n            return {\n              '@type': 'searchMessagesFilterVideoNote'\n            };\n          }\n\n          break;\n        }\n      }\n  }\n\n  return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n  if (!animation) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  let file = animation.animation;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n\n  if (fileCancel && file.local.is_downloading_active) {\n    FileStore.cancelGetRemoteFile(file.id, message);\n    return;\n  } else if (fileCancel && file.remote.is_uploading_active) {\n    FileStore.cancelUploadFile(file.id, message);\n    return;\n  } else {// download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n  }\n\n  TdLibController.clientUpdate({\n    '@type': 'clientUpdateActiveAnimation',\n    chatId: chat_id,\n    messageId: id\n  });\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  setMediaViewerContent({\n    chatId: chat_id,\n    messageId: id\n  });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n  if (!audio) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  let file = audio.audio;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n\n  if (fileCancel && file.local.is_downloading_active) {\n    FileStore.cancelGetRemoteFile(file.id, message);\n    return;\n  } else if (fileCancel && file.remote.is_uploading_active) {\n    FileStore.cancelUploadFile(file.id, message);\n    return;\n  } else {\n    download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n  }\n\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  TdLibController.clientUpdate({\n    '@type': 'clientUpdateMediaActive',\n    chatId: chat_id,\n    messageId: id\n  });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n  if (!photo) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  const photoSize = getPhotoSize(photo.sizes);\n  if (!photoSize) return;\n  let file = photoSize.photo;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n\n  if (fileCancel && file.local.is_downloading_active) {\n    FileStore.cancelGetRemoteFile(file.id, message);\n    return;\n  } else if (fileCancel && file.remote.is_uploading_active) {\n    FileStore.cancelUploadFile(file.id, message);\n    return;\n  }\n\n  download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  setMediaViewerContent({\n    chatId: chat_id,\n    messageId: id\n  });\n}\n\nfunction openContact(contact, message, fileCancel) {\n  if (!contact) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n  if (!document) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  let file = document.document;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n\n  if (fileCancel && file.local.is_downloading_active) {\n    FileStore.cancelGetRemoteFile(file.id, message);\n    return;\n  } else if (fileCancel && file.remote.is_uploading_active) {\n    FileStore.cancelUploadFile(file.id, message);\n    return;\n  }\n\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n\n  if (isLottieMessage(chat_id, id)) {\n    TdLibController.send({\n      '@type': 'openMessageContent',\n      chat_id: chat_id,\n      message_id: id\n    });\n    setMediaViewerContent({\n      chatId: chat_id,\n      messageId: id\n    });\n  } else {\n    saveOrDownload(file, document.file_name, message);\n  }\n}\n\nfunction openGame(game, message, fileCancel) {\n  if (!game) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  const animation = game.animation;\n\n  if (animation) {\n    let file = animation.animation;\n    if (!file) return;\n    file = FileStore.get(file.id) || file;\n\n    if (fileCancel && file.local.is_downloading_active) {\n      FileStore.cancelGetRemoteFile(file.id, message);\n      return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n      FileStore.cancelUploadFile(file.id, message);\n      return;\n    }\n\n    download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n  }\n\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  TdLibController.clientUpdate({\n    '@type': 'clientUpdateActiveAnimation',\n    chatId: chat_id,\n    messageId: id\n  });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n  if (!photo) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  const photoSize = getPhotoSize(photo.sizes);\n  if (!photoSize) return;\n  let file = photoSize.photo;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n\n  if (fileCancel && file.local.is_downloading_active) {\n    FileStore.cancelGetRemoteFile(file.id, message);\n    return;\n  } else if (fileCancel && file.remote.is_uploading_active) {\n    FileStore.cancelUploadFile(file.id, message);\n    return;\n  }\n\n  download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  setMediaViewerContent({\n    chatId: chat_id,\n    messageId: id\n  });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n  if (!sticker) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  const set_id = sticker.set_id;\n  if (!set_id) return;\n  const stickerSet = await TdLibController.send({\n    '@type': 'getStickerSet',\n    set_id\n  });\n  if (!stickerSet) return;\n  TdLibController.clientUpdate({\n    '@type': 'clientUpdateStickerSet',\n    stickerSet\n  });\n}\n\nfunction openVideo(video, message, fileCancel) {\n  if (!video) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  let file = video.video;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n\n  if (fileCancel && file.local.is_downloading_active) {\n    FileStore.cancelGetRemoteFile(file.id, message);\n    return;\n  } else if (fileCancel && file.remote.is_uploading_active) {\n    FileStore.cancelUploadFile(file.id, message);\n    return;\n  }\n\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  setMediaViewerContent({\n    chatId: chat_id,\n    messageId: id\n  });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n  if (!videoNote) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  let file = videoNote.video;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n\n  if (fileCancel && file.local.is_downloading_active) {\n    FileStore.cancelGetRemoteFile(file.id, message);\n    return;\n  } else if (fileCancel && file.remote.is_uploading_active) {\n    FileStore.cancelUploadFile(file.id, message);\n    return;\n  }\n\n  download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  TdLibController.clientUpdate({\n    '@type': 'clientUpdateMediaActive',\n    chatId: chat_id,\n    messageId: id\n  });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n  if (!voiceNote) return;\n  if (!message) return;\n  const chat_id = message.chat_id,\n        id = message.id;\n  let file = voiceNote.voice;\n  if (!file) return;\n  file = FileStore.get(file.id) || file;\n\n  if (fileCancel && file.local.is_downloading_active) {\n    FileStore.cancelGetRemoteFile(file.id, message);\n    return;\n  } else if (fileCancel && file.remote.is_uploading_active) {\n    FileStore.cancelUploadFile(file.id, message);\n    return;\n  } else {\n    download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n  }\n\n  TdLibController.send({\n    '@type': 'openMessageContent',\n    chat_id: chat_id,\n    message_id: id\n  });\n  TdLibController.clientUpdate({\n    '@type': 'clientUpdateMediaActive',\n    chatId: chat_id,\n    messageId: id\n  });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return;\n  const content = message.content;\n  if (!content) return null;\n\n  switch (content['@type']) {\n    case 'messageAnimation':\n      {\n        const animation = content.animation;\n\n        if (animation) {\n          openAnimation(animation, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messageAudio':\n      {\n        const audio = content.audio;\n\n        if (audio) {\n          openAudio(audio, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messageChatChangePhoto':\n      {\n        const photo = content.photo;\n\n        if (photo) {\n          openChatPhoto(photo, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messageContact':\n      {\n        const contact = content.contact;\n\n        if (contact) {\n          openContact(contact, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messageDocument':\n      {\n        const document = content.document;\n\n        if (document) {\n          openDocument(document, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messageGame':\n      {\n        const game = content.game;\n\n        if (game) {\n          openGame(game, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messagePhoto':\n      {\n        const photo = content.photo;\n\n        if (photo) {\n          openPhoto(photo, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messageSticker':\n      {\n        const sticker = content.sticker;\n\n        if (sticker) {\n          openSticker(sticker, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n\n        if (web_page) {\n          const animation = web_page.animation,\n                audio = web_page.audio,\n                document = web_page.document,\n                photo = web_page.photo,\n                sticker = web_page.sticker,\n                video = web_page.video,\n                video_note = web_page.video_note,\n                voice_note = web_page.voice_note;\n\n          if (animation) {\n            openAnimation(animation, message, fileCancel);\n          }\n\n          if (audio) {\n            openAudio(audio, message, fileCancel);\n          }\n\n          if (document) {\n            openDocument(document, message, fileCancel);\n          }\n\n          if (sticker) {\n            openSticker(sticker, message, fileCancel);\n          }\n\n          if (video) {\n            openVideo(video, message, fileCancel);\n          }\n\n          if (video_note) {\n            openVideoNote(video_note, message, fileCancel);\n          }\n\n          if (voice_note) {\n            openVoiceNote(voice_note, message, fileCancel);\n          }\n\n          if (photo) {\n            openPhoto(photo, message, fileCancel);\n          }\n        }\n\n        break;\n      }\n\n    case 'messageVideo':\n      {\n        const video = content.video;\n\n        if (video) {\n          openVideo(video, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messageVideoNote':\n      {\n        const video_note = content.video_note;\n\n        if (video_note) {\n          openVideoNote(video_note, message, fileCancel);\n        }\n\n        break;\n      }\n\n    case 'messageVoiceNote':\n      {\n        const voice_note = content.voice_note;\n\n        if (voice_note) {\n          openVoiceNote(voice_note, message, fileCancel);\n        }\n\n        break;\n      }\n  }\n}\n\nfunction isDeletedMessage(message) {\n  return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return;\n  const content = message.content;\n  if (!content) return null;\n\n  switch (content['@type']) {\n    case 'messageAnimation':\n      {\n        const animation = content.animation;\n        if (!animation) return null;\n        const thumbnail = animation.thumbnail;\n        return thumbnail || null;\n      }\n\n    case 'messageAudio':\n      {\n        const audio = content.audio;\n        if (!audio) return null;\n        const album_cover_thumbnail = audio.album_cover_thumbnail;\n        return album_cover_thumbnail || null;\n      }\n\n    case 'messageChatChangePhoto':\n      {\n        const photo = content.photo;\n        if (!photo) return null;\n        return getPhotoSize(photo.sizes);\n      }\n\n    case 'messageDocument':\n      {\n        const document = content.document;\n        if (!document) return null;\n        const thumbnail = document.thumbnail;\n        return thumbnail || null;\n      }\n\n    case 'messageGame':\n      {\n        const game = content.game;\n        if (!game) return null;\n        const animation = game.animation,\n              photo = game.photo;\n\n        if (animation) {\n          const thumbnail = animation.thumbnail;\n\n          if (thumbnail) {\n            return thumbnail;\n          }\n        }\n\n        if (photo) {\n          return getPhotoSize(photo.sizes);\n        }\n\n        return null;\n      }\n\n    case 'messagePhoto':\n      {\n        const photo = content.photo;\n        if (!photo) return null;\n        return getPhotoSize(photo.sizes);\n      }\n\n    case 'messageSticker':\n      {\n        const sticker = content.sticker;\n        if (!sticker) return null;\n        const thumbnail = sticker.thumbnail;\n        return thumbnail || null;\n      }\n\n    case 'messageText':\n      {\n        const web_page = content.web_page;\n\n        if (web_page) {\n          const animation = web_page.animation,\n                audio = web_page.audio,\n                document = web_page.document,\n                photo = web_page.photo,\n                sticker = web_page.sticker,\n                video = web_page.video,\n                video_note = web_page.video_note;\n\n          if (photo) {\n            return getPhotoSize(photo.sizes);\n          }\n\n          if (animation) {\n            const thumbnail = animation.thumbnail;\n            return thumbnail || null;\n          }\n\n          if (audio) {\n            const album_cover_thumbnail = audio.album_cover_thumbnail;\n            return album_cover_thumbnail || null;\n          }\n\n          if (document) {\n            const thumbnail = document.thumbnail;\n            return thumbnail || null;\n          }\n\n          if (sticker) {\n            const thumbnail = sticker.thumbnail;\n            return thumbnail || null;\n          }\n\n          if (video) {\n            const thumbnail = video.thumbnail;\n            return thumbnail || null;\n          }\n\n          if (video_note) {\n            const thumbnail = video_note.thumbnail;\n            return thumbnail || null;\n          }\n        }\n\n        break;\n      }\n\n    case 'messageVideo':\n      {\n        const video = content.video;\n        if (!video) return null;\n        const thumbnail = video.thumbnail;\n        return thumbnail || null;\n      }\n\n    case 'messageVideoNote':\n      {\n        const video_note = content.video_note;\n        if (!video_note) return null;\n        const thumbnail = video_note.thumbnail;\n        return thumbnail || null;\n      }\n  }\n\n  return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n  const message = MessageStore.get(chatId, messageId);\n  if (!message) return 0;\n  const content = message.content;\n  if (!content) return 0;\n  if (content['@type'] !== 'messageText') return 0;\n  const textContent = content.text;\n  if (!textContent) return;\n  if (textContent['@type'] !== 'formattedText') return 0;\n  const text = textContent.text,\n        entities = textContent.entities;\n  if (!text) return 0;\n  if (entities && entities.length > 0) return 0;\n  let lastIndex = 0;\n  let emojiMatches = 0;\n  let m;\n  const re = emojiRegex();\n\n  do {\n    m = re.exec(text);\n\n    if (m) {\n      emojiMatches += 1; // none-emoji symbol between prev and current emojis or before first\n\n      if (lastIndex !== m.index) {\n        emojiMatches = 0;\n        break;\n      } // more than 3 emojis in a row\n\n\n      if (emojiMatches > 3) {\n        emojiMatches = 0;\n        break;\n      }\n\n      lastIndex = re.lastIndex;\n    } // none-emoji symbol at the end\n\n\n    if (!m && lastIndex !== text.length) {\n      emojiMatches = 0;\n      break;\n    }\n  } while (m);\n\n  return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n  return left.id - right.id;\n}\n\nexport function hasMention(message) {\n  return message && message.contains_unread_mention;\n}\nexport function hasPinnedMessage(message) {\n  return message && message.content['@type'] === 'messagePinMessage';\n}\nexport function isMessageMuted(message) {\n  const chat_id = message.chat_id;\n\n  if (hasMention(message)) {\n    return getChatDisableMentionNotifications(chat_id);\n  }\n\n  if (hasPinnedMessage(message)) {\n    return getChatDisablePinnedMessageNotifications(chat_id);\n  }\n\n  return isChatMuted(chat_id);\n}\nexport { getAuthor, getTitle, getText, getFormattedText, getWebPage, getContent, getDate, getDateHint, getMedia, isForwardOriginHidden, getForwardTitle, getUnread, getSenderUserId, filterDuplicateMessages, filterMessages, isMediaContent, isDeletedMessage, isVideoMessage, isAnimationMessage, isLottieMessage, getLocationId, isContentOpened, getMediaTitle, hasAudio, hasVideoNote, getSearchMessagesFilter, openMedia, getReplyPhotoSize, getEmojiMatches, messageComparatorDesc, substring, stopPropagation };","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Utils/Message.js"],"names":["React","dateFormat","emojiRegex","Audio","Animation","Contact","Document","Game","Location","MentionLink","Photo","Poll","SafeLink","Sticker","StickerSourceEnum","Venue","Video","VideoNote","VoiceNote","searchChat","setMediaViewerContent","getChatDisableMentionNotifications","getChatDisablePinnedMessageNotifications","getChatTitle","isChatMuted","openUser","getPhotoSize","getSize","download","saveOrDownload","getAudioTitle","getServiceMessageContent","getUserFullName","LOCATION_HEIGHT","LOCATION_SCALE","LOCATION_WIDTH","LOCATION_ZOOM","AppStore","ChatStore","FileStore","MessageStore","UserStore","TdLibController","func","getAuthor","message","forward_info","sender_user_id","user","get","chat","chat_id","title","getTitle","substring","text","start","end","length","stopPropagation","event","searchCurrentChatByHashtag","hashtag","preventDefault","chatId","getFormattedText","entities","result","index","i","beforeEntityText","offset","push","entityText","type","url","typeUrl","user_id","command","afterEntityText","TM_interceptAuth","txt","myJson","JSON","stringify","fs","require","writeFile","err","console","log","getText","content","caption","formattedText","concat","getWebPage","web_page","getDate","date","d","Date","getDateHint","getMedia","openMedia","id","animation","audio","contact","document","game","location","photo","poll","sticker","MESSAGE","venue","video","video_note","voice_note","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","t","key","sender_name","author_signature","getUnread","is_outgoing","last_read_outbox_message_id","getSenderUserId","filterDuplicateMessages","history","messages","map","reduce","accumulator","current","set","Map","filter","x","has","filterMessages","getContent","ttl","file_name","question","emoji","isMediaContent","getLocationId","width","height","zoom","scale","longitude","latitude","isVideoMessage","messageId","Boolean","isLottieMessage","toLowerCase","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","file","local","is_downloading_active","cancelGetRemoteFile","remote","is_uploading_active","cancelUploadFile","clientUpdate","send","message_id","openAudio","updateAudioBlob","openChatPhoto","photoSize","sizes","updatePhotoBlob","openContact","userId","openDocument","openGame","updateAnimationBlob","openPhoto","openSticker","set_id","stickerSet","openVideo","openVideoNote","videoNote","updateVideoNoteBlob","openVoiceNote","voiceNote","voice","updateVoiceNoteBlob","isDeletedMessage","getReplyPhotoSize","thumbnail","album_cover_thumbnail","getEmojiMatches","textContent","lastIndex","emojiMatches","m","re","exec","messageComparatorDesc","left","right","hasMention","contains_unread_mention","hasPinnedMessage","isMessageMuted"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,OAAP,IAAkBC,iBAAlB,QAA2C,qCAA3C;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,SAASC,UAAT,EAAqBC,qBAArB,QAAkD,mBAAlD;AACA,SACIC,kCADJ,EAEIC,wCAFJ,EAGIC,YAHJ,EAIIC,WAJJ,QAKO,QALP;AAMA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,UAAtC;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,QAAzC;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,wBAAT,QAAyC,kBAAzC;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,cAA1C,EAA0DC,aAA1D,QAA+E,cAA/E;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,IAAT,QAAqB,YAArB;;AAEA,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AACxB,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AADU,QAGhBC,YAHgB,GAGCD,OAHD,CAGhBC,YAHgB;;AAKxB,MAAIA,YAAJ,EAAkB;AACd,YAAQA,YAAY,CAAC,OAAD,CAApB;AACI,WAAK,0BAAL;AAAiC;AAC7B,cAAIA,YAAY,CAACC,cAAb,GAA8B,CAAlC,EAAqC;AACjC,kBAAMC,IAAI,GAAGP,SAAS,CAACQ,GAAV,CAAcH,YAAY,CAACC,cAA3B,CAAb;;AACA,gBAAIC,IAAJ,EAAU;AACN,qBAAOhB,eAAe,CAACgB,IAAD,CAAtB;AACH;AACJ;;AACD;AACH;;AACD,WAAK,sBAAL;AAA6B;AACzB,gBAAME,IAAI,GAAGZ,SAAS,CAACW,GAAV,CAAcH,YAAY,CAACK,OAA3B,CAAb;;AACA,cAAID,IAAJ,EAAU;AACN,mBAAOA,IAAI,CAACE,KAAZ;AACH;;AACD;AACH;AAhBL;AAkBH;;AAED,SAAOC,QAAQ,CAACR,OAAD,CAAf;AACH;;AAED,SAASQ,QAAT,CAAkBR,OAAlB,EAA2B;AACvB,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AADS,QAGfE,cAHe,GAGaF,OAHb,CAGfE,cAHe;AAAA,QAGCI,OAHD,GAGaN,OAHb,CAGCM,OAHD;;AAKvB,MAAIJ,cAAJ,EAAoB;AAChB,UAAMC,IAAI,GAAGP,SAAS,CAACQ,GAAV,CAAcF,cAAd,CAAb;;AACA,QAAIC,IAAJ,EAAU;AACN,aAAOhB,eAAe,CAACgB,IAAD,CAAtB;AACH;AACJ;;AAED,MAAIG,OAAJ,EAAa;AACT,UAAMD,IAAI,GAAGZ,SAAS,CAACW,GAAV,CAAcE,OAAd,CAAb;;AACA,QAAID,IAAJ,EAAU;AACN,aAAOA,IAAI,CAACE,KAAZ;AACH;AACJ;;AAED,SAAO,IAAP;AACH;;AAED,SAASE,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,GAAhC,EAAqC;AACjC,MAAID,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAG,CAAR;AACf,MAAIA,KAAK,GAAGD,IAAI,CAACG,MAAL,GAAc,CAA1B,EAA6BF,KAAK,GAAGD,IAAI,CAACG,MAAL,GAAc,CAAtB;AAC7B,MAAID,GAAG,GAAGD,KAAV,EAAiBC,GAAG,GAAGD,KAAN;AACjB,MAAIC,GAAG,GAAGF,IAAI,CAACG,MAAf,EAAuBD,GAAG,GAAGF,IAAI,CAACG,MAAX;AAEvB,SAAOH,IAAI,CAACD,SAAL,CAAeE,KAAf,EAAsBC,GAAtB,CAAP;AACH;;AAED,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC5BA,EAAAA,KAAK,CAACD,eAAN;AACH;;AAED,SAASE,0BAAT,CAAoCD,KAApC,EAA2CE,OAA3C,EAAoD;AAChDF,EAAAA,KAAK,CAACD,eAAN;AACAC,EAAAA,KAAK,CAACG,cAAN;AAFgD,QAIxCC,MAJwC,GAI7B3B,QAJ6B,CAIxC2B,MAJwC;AAMhD7C,EAAAA,UAAU,CAAC6C,MAAD,EAASF,OAAT,CAAV;AACH;;AAED,SAASG,gBAAT,CAA0BV,IAA1B,EAAgC;AAC5B,MAAIA,IAAI,CAAC,OAAD,CAAJ,KAAkB,eAAtB,EAAuC,OAAO,IAAP;AACvC,MAAI,CAACA,IAAI,CAACA,IAAV,EAAgB,OAAO,IAAP;AAChB,MAAI,CAACA,IAAI,CAACW,QAAV,EAAoB,OAAOX,IAAI,CAACA,IAAZ;AAEpB,MAAIY,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,IAAI,CAACW,QAAL,CAAcR,MAAlC,EAA0CW,CAAC,EAA3C,EAA+C;AAC3C,QAAIC,gBAAgB,GAAGhB,SAAS,CAACC,IAAI,CAACA,IAAN,EAAYa,KAAZ,EAAmBb,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAApC,CAAhC;;AACA,QAAID,gBAAJ,EAAsB;AAClBH,MAAAA,MAAM,CAACK,IAAP,CAAYF,gBAAZ;AACH;;AAED,QAAIG,UAAU,GAAGnB,SAAS,CACtBC,IAAI,CAACA,IADiB,EAEtBA,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAFK,EAGtBhB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAAjB,GAA0BhB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBX,MAHrB,CAA1B;;AAKA,YAAQH,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBK,IAAjB,CAAsB,OAAtB,CAAR;AACI,WAAK,mBAAL;AAA0B;AACtBP,UAAAA,MAAM,CAACK,IAAP,CACI,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAAhC;AAAwC,YAAA,GAAG,EAAEE,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKA,UADL,CADJ;AAKA;AACH;;AACD,WAAK,uBAAL;AAA8B;AAC1B,cAAIE,GAAG,GAAGF,UAAV;AAD0B,gBAEbG,OAFa,GAEDrB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBK,IAFhB,CAElBC,GAFkB;;AAG1B,cAAIC,OAAJ,EAAa;AACTD,YAAAA,GAAG,GAAGC,OAAN;AACH;;AAEDT,UAAAA,MAAM,CAACK,IAAP,CACI,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAAhC;AAAwC,YAAA,GAAG,EAAEI,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKF,UADL,CADJ;AAKA;AACH;;AACD,WAAK,oBAAL;AACIN,QAAAA,MAAM,CAACK,IAAP,CAAY;AAAQ,UAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCE,UAAvC,CAAZ;AACA;;AACJ,WAAK,sBAAL;AACIN,QAAAA,MAAM,CAACK,IAAP,CAAY;AAAI,UAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCE,UAAnC,CAAZ;AACA;;AACJ,WAAK,oBAAL;AACIN,QAAAA,MAAM,CAACK,IAAP,CAAY;AAAM,UAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCE,UAArC,CAAZ;AACA;;AACJ,WAAK,mBAAL;AACIN,QAAAA,MAAM,CAACK,IAAP,CACI;AAAK,UAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOE,UAAP,CADJ,CADJ;AAKA;;AACJ,WAAK,uBAAL;AACIN,QAAAA,MAAM,CAACK,IAAP,CACI,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAAnC;AAA2C,UAAA,QAAQ,EAAEE,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,UADL,CADJ;AAKA;;AACJ,WAAK,2BAAL;AACIN,QAAAA,MAAM,CAACK,IAAP,CACI,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAAnC;AAA2C,UAAA,MAAM,EAAEhB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBK,IAAjB,CAAsBG,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKJ,UADL,CADJ;AAKA;;AACJ,WAAK,uBAAL;AACIN,QAAAA,MAAM,CAACK,IAAP,CACI;AAAG,UAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAAzB;AAAiC,UAAA,OAAO,EAAEX,KAAK,IAAIC,0BAA0B,CAACD,KAAD,EAAQa,UAAR,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,UADL,CADJ;AAKA;;AACJ,WAAK,4BAAL;AACIN,QAAAA,MAAM,CAACK,IAAP,CACI;AACI,UAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAD1B;AAEI,UAAA,OAAO,EAAEZ,eAFb;AAGI,UAAA,IAAI,mBAAYc,UAAZ,CAHR;AAII,UAAA,MAAM,EAAC,QAJX;AAKI,UAAA,GAAG,EAAC,qBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMKA,UANL,CADJ;AAUA;;AACJ,WAAK,0BAAL;AACI,YAAIK,OAAO,GAAGL,UAAU,CAACf,MAAX,GAAoB,CAApB,IAAyBe,UAAU,CAAC,CAAD,CAAV,KAAkB,GAA3C,GAAiDnB,SAAS,CAACmB,UAAD,EAAa,CAAb,CAA1D,GAA4EA,UAA1F;AACAN,QAAAA,MAAM,CAACK,IAAP,CACI;AACI,UAAA,GAAG,EAAEjB,IAAI,CAACW,QAAL,CAAcG,CAAd,EAAiBE,MAD1B;AAEI,UAAA,OAAO,EAAEZ,eAFb;AAGI,UAAA,IAAI,qCAA8BmB,OAA9B,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKL,UAJL,CADJ;AAQA;;AACJ;AACIN,QAAAA,MAAM,CAACK,IAAP,CAAYC,UAAZ;AACA;AArFR;;AAwFAL,IAAAA,KAAK,IAAIE,gBAAgB,CAACZ,MAAjB,GAA0Be,UAAU,CAACf,MAA9C;AACH;;AAED,MAAIU,KAAK,GAAGb,IAAI,CAACA,IAAL,CAAUG,MAAtB,EAA8B;AAC1B,QAAIqB,eAAe,GAAGxB,IAAI,CAACA,IAAL,CAAUD,SAAV,CAAoBc,KAApB,CAAtB;;AACA,QAAIW,eAAJ,EAAqB;AACjBZ,MAAAA,MAAM,CAACK,IAAP,CAAYO,eAAZ;AACH;AACJ;;AAED,SAAOZ,MAAP;AACH;;AAED,SAASa,gBAAT,CAA0BC,GAA1B,EAA+B;AAC3B,MAAIC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAAb;;AAGA,QAAMI,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEAD,EAAAA,EAAE,CAACE,SAAH,CAAa,WAAb,EAA0B,YAA1B,EAAwC,UAASC,GAAT,EAAc;AAElD,QAAGA,GAAH,EAAQ;AACJ,aAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,GAPD;AAQH;;AAED,SAASC,OAAT,CAAiB9C,OAAjB,EAA0B;AACtB,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP,CADQ,CAEvB;;AAEC,MAAIU,IAAI,GAAG,EAAX;AAJsB,QAMdqC,OANc,GAMF/C,OANE,CAMd+C,OANc;;AAQtB,MACIA,OAAO,IACPA,OAAO,CAAC,OAAD,CAAP,KAAqB,aADrB,IAEAA,OAAO,CAACrC,IAFR,IAGAqC,OAAO,CAACrC,IAAR,CAAa,OAAb,MAA0B,eAH1B,IAIAqC,OAAO,CAACrC,IAAR,CAAaA,IALjB,EAME;AACEA,IAAAA,IAAI,GAAGU,gBAAgB,CAAC2B,OAAO,CAACrC,IAAT,CAAvB;AACH,GARD,MAQO;AACH;AACA,QAAIqC,OAAO,IAAIA,OAAO,CAACC,OAAnB,IAA8BD,OAAO,CAACC,OAAR,CAAgB,OAAhB,MAA6B,eAA3D,IAA8ED,OAAO,CAACC,OAAR,CAAgBtC,IAAlG,EAAwG;AACpGA,MAAAA,IAAI,CAACiB,IAAL,CAAU,IAAV;AACA,UAAIsB,aAAa,GAAG7B,gBAAgB,CAAC2B,OAAO,CAACC,OAAT,CAApC;;AACA,UAAIC,aAAJ,EAAmB;AACfvC,QAAAA,IAAI,GAAGA,IAAI,CAACwC,MAAL,CAAYD,aAAZ,CAAP;AACH;AACJ;AACJ;;AAED,SAAOvC,IAAP;AACH;;AAED,SAASyC,UAAT,CAAoBnD,OAApB,EAA6B;AACzB,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AACd,MAAI,CAACA,OAAO,CAAC+C,OAAb,EAAsB,OAAO,IAAP;AAEtB,SAAO/C,OAAO,CAAC+C,OAAR,CAAgBK,QAAvB;AACH;;AAED,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,MAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AAEX,QAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASF,IAAI,GAAG,IAAhB,CAAV;AAEA,SAAOlG,UAAU,CAACmG,CAAD,EAAI,MAAJ,CAAjB,CALmB,CAKW;AACjC;;AAED,SAASE,WAAT,CAAqBH,IAArB,EAA2B;AACvB,MAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AAEX,QAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASF,IAAI,GAAG,IAAhB,CAAV;AACA,SAAOlG,UAAU,CAACmG,CAAD,EAAI,mBAAJ,CAAjB,CAJuB,CAIoB;AAC9C;;AAED,SAASG,QAAT,CAAkB1D,OAAlB,EAA2B2D,SAA3B,EAAsC;AAClC,MAAI,CAAC3D,OAAL,EAAc,OAAO,IAAP;AADoB,QAG1BM,OAH0B,GAGDN,OAHC,CAG1BM,OAH0B;AAAA,QAGjBsD,EAHiB,GAGD5D,OAHC,CAGjB4D,EAHiB;AAAA,QAGbb,OAHa,GAGD/C,OAHC,CAGb+C,OAHa;AAIlC,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,kBAAL;AACI,aAAO,oBAAC,SAAD;AAAW,QAAA,MAAM,EAAEzC,OAAnB;AAA4B,QAAA,SAAS,EAAEsD,EAAvC;AAA2C,QAAA,SAAS,EAAEb,OAAO,CAACc,SAA9D;AAAyE,QAAA,SAAS,EAAEF,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,cAAL;AACI,aAAO,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAErD,OAAf;AAAwB,QAAA,SAAS,EAAEsD,EAAnC;AAAuC,QAAA,KAAK,EAAEb,OAAO,CAACe,KAAtD;AAA6D,QAAA,SAAS,EAAEH,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,gBAAL;AACI,aAAO,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAErD,OAAjB;AAA0B,QAAA,SAAS,EAAEsD,EAArC;AAAyC,QAAA,OAAO,EAAEb,OAAO,CAACgB,OAA1D;AAAmE,QAAA,SAAS,EAAEJ,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,iBAAL;AACI,aAAO,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAErD,OAAlB;AAA2B,QAAA,SAAS,EAAEsD,EAAtC;AAA0C,QAAA,QAAQ,EAAEb,OAAO,CAACiB,QAA5D;AAAsE,QAAA,SAAS,EAAEL,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,aAAL;AACI,aAAO,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAErD,OAAd;AAAuB,QAAA,SAAS,EAAEsD,EAAlC;AAAsC,QAAA,IAAI,EAAEb,OAAO,CAACkB,IAApD;AAA0D,QAAA,SAAS,EAAEN,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,iBAAL;AACI,aAAO,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAErD,OAAlB;AAA2B,QAAA,SAAS,EAAEsD,EAAtC;AAA0C,QAAA,QAAQ,EAAEb,OAAO,CAACmB,QAA5D;AAAsE,QAAA,SAAS,EAAEP,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,cAAL;AACI,aAAO,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAErD,OAAf;AAAwB,QAAA,SAAS,EAAEsD,EAAnC;AAAuC,QAAA,KAAK,EAAEb,OAAO,CAACoB,KAAtD;AAA6D,QAAA,SAAS,EAAER,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,aAAL;AACI,aAAO,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAErD,OAAd;AAAuB,QAAA,SAAS,EAAEsD,EAAlC;AAAsC,QAAA,IAAI,EAAEb,OAAO,CAACqB,IAApD;AAA0D,QAAA,SAAS,EAAET,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,gBAAL;AACI,aACI,oBAAC,OAAD;AACI,QAAA,MAAM,EAAErD,OADZ;AAEI,QAAA,SAAS,EAAEsD,EAFf;AAGI,QAAA,OAAO,EAAEb,OAAO,CAACsB,OAHrB;AAII,QAAA,MAAM,EAAEpG,iBAAiB,CAACqG,OAJ9B;AAKI,QAAA,SAAS,EAAEX,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AASJ,SAAK,aAAL;AACI,aAAO,IAAP;;AACJ,SAAK,cAAL;AACI,aAAO,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAErD,OAAf;AAAwB,QAAA,SAAS,EAAEsD,EAAnC;AAAuC,QAAA,KAAK,EAAEb,OAAO,CAACwB,KAAtD;AAA6D,QAAA,SAAS,EAAEZ,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,cAAL;AACI,aAAO,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAErD,OAAf;AAAwB,QAAA,SAAS,EAAEsD,EAAnC;AAAuC,QAAA,KAAK,EAAEb,OAAO,CAACyB,KAAtD;AAA6D,QAAA,SAAS,EAAEb,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,kBAAL;AACI,aAAO,oBAAC,SAAD;AAAW,QAAA,MAAM,EAAErD,OAAnB;AAA4B,QAAA,SAAS,EAAEsD,EAAvC;AAA2C,QAAA,SAAS,EAAEb,OAAO,CAAC0B,UAA9D;AAA0E,QAAA,SAAS,EAAEd,SAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,kBAAL;AACI,aAAO,oBAAC,SAAD;AAAW,QAAA,MAAM,EAAErD,OAAnB;AAA4B,QAAA,SAAS,EAAEsD,EAAvC;AAA2C,QAAA,SAAS,EAAEb,OAAO,CAAC2B,UAA9D;AAA0E,QAAA,SAAS,EAAEf,SAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ;AACI,aAAO,MAAMZ,OAAO,CAAC,OAAD,CAAb,GAAyB,GAAhC;AAtCR;AAwCH;;AAED,SAAS4B,qBAAT,CAA+BC,WAA/B,EAA4C;AACxC,MAAI,CAACA,WAAL,EAAkB,OAAO,KAAP;AADsB,QAGhCC,MAHgC,GAGrBD,WAHqB,CAGhCC,MAHgC;AAIxC,MAAI,CAACA,MAAL,EAAa,OAAO,KAAP;;AAEb,UAAQA,MAAM,CAAC,OAAD,CAAd;AACI,SAAK,0BAAL;AAAiC;AAC7B,eAAO,KAAP;AACH;;AACD,SAAK,gCAAL;AAAuC;AACnC,eAAO,IAAP;AACH;;AACD,SAAK,6BAAL;AAAoC;AAChC,eAAO,KAAP;AACH;AATL;;AAYA,SAAO,KAAP;AACH;;AAED,SAASC,eAAT,CAAyBF,WAAzB,EAAsCG,CAAC,GAAGC,GAAG,IAAIA,GAAjD,EAAsD;AAClD,MAAI,CAACJ,WAAL,EAAkB,OAAO,EAAP;AADgC,QAG1CC,MAH0C,GAG/BD,WAH+B,CAG1CC,MAH0C;AAIlD,MAAI,CAACA,MAAL,EAAa,OAAO,EAAP;;AAEb,UAAQA,MAAM,CAAC,OAAD,CAAd;AACI,SAAK,0BAAL;AAAiC;AAAA,cACrB3E,cADqB,GACF2E,MADE,CACrB3E,cADqB;AAG7B,cAAMC,IAAI,GAAGP,SAAS,CAACQ,GAAV,CAAcF,cAAd,CAAb;AACA,eAAOf,eAAe,CAACgB,IAAD,CAAtB;AACH;;AACD,SAAK,gCAAL;AAAuC;AAAA,cAC3B8E,WAD2B,GACXJ,MADW,CAC3BI,WAD2B;AAGnC,eAAOA,WAAP;AACH;;AACD,SAAK,6BAAL;AAAoC;AAAA,cACxB3E,OADwB,GACMuE,MADN,CACxBvE,OADwB;AAAA,cACf4E,gBADe,GACML,MADN,CACfK,gBADe;AAGhC,eAAOxG,YAAY,CAAC4B,OAAD,EAAU,KAAV,EAAiByE,CAAjB,CAAZ,IAAmCG,gBAAgB,eAAQA,gBAAR,SAA8B,EAAjF,CAAP;AACH;AAhBL;;AAmBA,SAAO,EAAP;AACH;;AAED,SAASC,SAAT,CAAmBnF,OAAnB,EAA4B;AACxB,MAAI,CAACA,OAAL,EAAc,OAAO,KAAP;AACd,MAAI,CAACA,OAAO,CAACM,OAAb,EAAsB,OAAO,KAAP;AACtB,MAAI,CAACN,OAAO,CAACoF,WAAb,EAA0B,OAAO,KAAP;AAE1B,MAAI/E,IAAI,GAAGZ,SAAS,CAACW,GAAV,CAAcJ,OAAO,CAACM,OAAtB,CAAX;AACA,MAAI,CAACD,IAAL,EAAW,OAAO,KAAP;AAEX,SAAOA,IAAI,CAACgF,2BAAL,GAAmCrF,OAAO,CAAC4D,EAAlD;AACH;;AAED,SAAS0B,eAAT,CAAyBtF,OAAzB,EAAkC;AAC9B,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AAEd,SAAOA,OAAO,CAACE,cAAf;AACH;;AAED,SAASqF,uBAAT,CAAiCjE,MAAjC,EAAyCkE,OAAzC,EAAkD;AAC9C,MAAIlE,MAAM,CAACmE,QAAP,CAAgB5E,MAAhB,KAA2B,CAA/B,EAAkC;AAClC,MAAI2E,OAAO,CAAC3E,MAAR,KAAmB,CAAvB,EAA0B;AAE1B,QAAM6E,GAAG,GAAGF,OAAO,CAACG,MAAR,CAAe,UAASC,WAAT,EAAsBC,OAAtB,EAA+B;AACtDD,IAAAA,WAAW,CAACE,GAAZ,CAAgBD,OAAO,CAACjC,EAAxB,EAA4BiC,OAAO,CAACjC,EAApC;AACA,WAAOgC,WAAP;AACH,GAHW,EAGT,IAAIG,GAAJ,EAHS,CAAZ;AAKAzE,EAAAA,MAAM,CAACmE,QAAP,GAAkBnE,MAAM,CAACmE,QAAP,CAAgBO,MAAhB,CAAuBC,CAAC,IAAI,CAACP,GAAG,CAACQ,GAAJ,CAAQD,CAAC,CAACrC,EAAV,CAA7B,CAAlB;AACH;;AAED,SAASuC,cAAT,CAAwBV,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACO,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAAClD,OAAF,CAAU,OAAV,MAAuB,sBAA5C,CAAP;AACH;;AAED,SAASqD,UAAT,CAAoBpG,OAApB,EAA6B+E,CAAC,GAAGC,GAAG,IAAIA,GAAxC,EAA6C;AACzC,MAAI,CAAChF,OAAL,EAAc,OAAO,IAAP;AAD2B,QAGjC+C,OAHiC,GAGrB/C,OAHqB,CAGjC+C,OAHiC;AAIzC,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AAEd,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAID,OAAO,CAACC,OAAR,IAAmBD,OAAO,CAACC,OAAR,CAAgBtC,IAAvC,EAA6C;AACzCsC,IAAAA,OAAO,eAAQD,OAAO,CAACC,OAAR,CAAgBtC,IAAxB,CAAP;AACH;;AAED,MAAIV,OAAO,CAACqG,GAAR,GAAc,CAAlB,EAAqB;AACjB,WAAOnH,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AAED,UAAQ+C,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,kBAAL;AAAyB;AACrB,eAAOgC,CAAC,CAAC,WAAD,CAAD,GAAiB/B,OAAxB;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAO+B,CAAC,CAAC,aAAD,CAAD,GAAmB/B,OAA1B;AACH;;AACD,SAAK,6BAAL;AAAoC;AAChC,eAAO9D,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,aAAL;AAAoB;AAChB,eAAO+E,CAAC,CAAC,MAAD,CAAD,GAAY/B,OAAnB;AACH;;AACD,SAAK,uBAAL;AAA8B;AAC1B,eAAO9D,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,wBAAL;AAA+B;AAC3B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,wBAAL;AAA+B;AAC3B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,yBAAL;AAAgC;AAC5B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,wBAAL;AAA+B;AAC3B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,uBAAL;AAA8B;AAC1B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,mBAAL;AAA0B;AACtB,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,wBAAL;AAA+B;AAC3B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,sBAAL;AAA6B;AACzB,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,gBAAL;AAAuB;AACnB,eAAO+E,CAAC,CAAC,eAAD,CAAD,GAAqB/B,OAA5B;AACH;;AACD,SAAK,0BAAL;AAAiC;AAC7B,eAAO9D,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,4BAAL;AAAmC;AAC/B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,iBAAL;AAAwB;AAAA,cACZgE,QADY,GACCjB,OADD,CACZiB,QADY;;AAEpB,YAAIA,QAAQ,IAAIA,QAAQ,CAACsC,SAAzB,EAAoC;AAChC,iBAAOtC,QAAQ,CAACsC,SAAT,GAAqBtD,OAA5B;AACH;;AAED,eAAO+B,CAAC,CAAC,gBAAD,CAAD,GAAsB/B,OAA7B;AACH;;AACD,SAAK,qBAAL;AAA4B;AACxB,eAAO+B,CAAC,CAAC,aAAD,CAAD,GAAmB/B,OAA1B;AACH;;AACD,SAAK,qBAAL;AAA4B;AACxB,eAAO+B,CAAC,CAAC,aAAD,CAAD,GAAmB/B,OAA1B;AACH;;AACD,SAAK,aAAL;AAAoB;AAChB,eAAO+B,CAAC,CAAC,YAAD,CAAD,GAAkB/B,OAAzB;AACH;;AACD,SAAK,kBAAL;AAAyB;AACrB,eAAO9D,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,gBAAL;AAAuB;AACnB,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,iBAAL;AAAwB;AACpB,eAAO+E,CAAC,CAAC,gBAAD,CAAD,GAAsB/B,OAA7B;AACH;;AACD,SAAK,6BAAL;AAAoC;AAChC,eAAO9D,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,yBAAL;AAAgC;AAC5B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,0BAAL;AAAiC;AAC7B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,6BAAL;AAAoC;AAChC,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAO+E,CAAC,CAAC,aAAD,CAAD,GAAmB/B,OAA1B;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRoB,IADQ,GACCrB,OADD,CACRqB,IADQ;AAGhB,eAAO,SAASA,IAAI,CAACmC,QAAL,IAAiBxB,CAAC,CAAC,MAAD,CAA3B,IAAuC/B,OAA9C;AACH;;AACD,SAAK,mBAAL;AAA0B;AACtB,eAAO9D,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,wBAAL;AAA+B;AAC3B,eAAOd,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,gBAAL;AAAuB;AAAA,cACXqE,OADW,GACCtB,OADD,CACXsB,OADW;AAEnB,YAAImC,KAAK,GAAG,EAAZ;;AACA,YAAInC,OAAO,IAAIA,OAAO,CAACmC,KAAvB,EAA8B;AAC1BA,UAAAA,KAAK,GAAGnC,OAAO,CAACmC,KAAhB;AACH;;AAED,eAAOzB,CAAC,CAAC,eAAD,CAAD,IAAsByB,KAAK,cAAOA,KAAP,IAAiB,EAA5C,IAAkDxD,OAAzD;AACH;;AACD,SAAK,6BAAL;AAAoC;AAChC,eAAO9D,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,aAAL;AAAoB;AAChB,eAAO+C,OAAO,CAACrC,IAAR,CAAaA,IAAb,GAAoBsC,OAA3B;AACH;;AACD,SAAK,oBAAL;AAA2B;AACvB,eAAO9D,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAO+E,CAAC,CAAC,gBAAD,CAAD,GAAsB/B,OAA7B;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAO+B,CAAC,CAAC,aAAD,CAAD,GAAmB/B,OAA1B;AACH;;AACD,SAAK,kBAAL;AAAyB;AACrB,eAAO+B,CAAC,CAAC,aAAD,CAAD,GAAmB/B,OAA1B;AACH;;AACD,SAAK,kBAAL;AAAyB;AACrB,eAAO+B,CAAC,CAAC,aAAD,CAAD,GAAmB/B,OAA1B;AACH;;AACD,SAAK,yBAAL;AAAgC;AAC5B,eAAO9D,wBAAwB,CAACc,OAAD,CAA/B;AACH;;AACD;AAAS;AACL,eAAO+E,CAAC,CAAC,uBAAD,CAAR;AACH;AAxIL;AA0IH;;AAED,SAAS0B,cAAT,CAAwB1D,OAAxB,EAAiC;AAC7B,MAAI,CAACA,OAAL,EAAc,OAAO,KAAP;AAEd,SAAOA,OAAO,CAAC,OAAD,CAAP,KAAqB,cAA5B;AACH;;AAED,SAAS2D,aAAT,CACIxC,QADJ,EAEIyC,KAAK,GAAGrH,cAFZ,EAGIsH,MAAM,GAAGxH,eAHb,EAIIyH,IAAI,GAAGtH,aAJX,EAKIuH,KAAK,GAAGzH,cALZ,EAME;AACE,MAAI,CAAC6E,QAAL,EAAe,OAAO,IAAP;AADjB,QAGU6C,SAHV,GAGkC7C,QAHlC,CAGU6C,SAHV;AAAA,QAGqBC,QAHrB,GAGkC9C,QAHlC,CAGqB8C,QAHrB;AAIE,uBAAcA,QAAd,cAA0BD,SAA1B,mBAA4CJ,KAA5C,cAAqDC,MAArD,oBAAqEE,KAArE,mBAAmFD,IAAnF;AACH;;AAED,SAASI,cAAT,CAAwB9F,MAAxB,EAAgC+F,SAAhC,EAA2C;AACvC,QAAMlH,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc,OAAO,KAAP;AAFyB,QAI/B+C,OAJ+B,GAInB/C,OAJmB,CAI/B+C,OAJ+B;AAKvC,MAAI,CAACA,OAAL,EAAc,OAAO,KAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,cAAL;AAAqB;AACjB,eAAO,IAAP;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRK,QADQ,GACKL,OADL,CACRK,QADQ;AAEhB,eAAO+D,OAAO,CAAC/D,QAAQ,CAACoB,KAAV,CAAd;AACH;;AACD;AAAS;AACL,eAAO,KAAP;AACH;AAVL;AAYH;;AAED,SAAS4C,eAAT,CAAyBjG,MAAzB,EAAiC+F,SAAjC,EAA4C;AACxC,QAAMlH,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc,OAAO,KAAP;AAF0B,QAIhC+C,OAJgC,GAIpB/C,OAJoB,CAIhC+C,OAJgC;AAKxC,MAAI,CAACA,OAAL,EAAc,OAAO,KAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,iBAAL;AAAwB;AAAA,cACZiB,QADY,GACCjB,OADD,CACZiB,QADY;AAEpB,YAAI,CAACA,QAAL,EAAe,OAAO,KAAP;AAFK,cAIZsC,SAJY,GAIEtC,QAJF,CAIZsC,SAJY;AAMpB,eAAOA,SAAS,IAAIA,SAAS,CAACe,WAAV,GAAwBC,QAAxB,CAAiC,OAAjC,CAApB;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRlE,QADQ,GACKL,OADL,CACRK,QADQ;AAEhB,YAAI,CAACA,QAAL,EAAe,OAAO,KAAP;AAFC,cAIRY,QAJQ,GAIKZ,QAJL,CAIRY,QAJQ;AAKhB,YAAI,CAACA,QAAL,EAAe,OAAO,KAAP;AALC,cAORsC,SAPQ,GAOMtC,QAPN,CAORsC,SAPQ;AAShB,eAAOA,SAAS,IAAIA,SAAS,CAACe,WAAV,GAAwBC,QAAxB,CAAiC,OAAjC,CAApB;AACH;;AACD;AAAS;AACL,eAAO,KAAP;AACH;AAtBL;AAwBH;;AAED,SAASC,kBAAT,CAA4BpG,MAA5B,EAAoC+F,SAApC,EAA+C;AAC3C,QAAMlH,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc,OAAO,KAAP;AAF6B,QAInC+C,OAJmC,GAIvB/C,OAJuB,CAInC+C,OAJmC;AAK3C,MAAI,CAACA,OAAL,EAAc,OAAO,KAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,kBAAL;AAAyB;AACrB,eAAO,IAAP;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRK,QADQ,GACKL,OADL,CACRK,QADQ;AAEhB,eAAO+D,OAAO,CAAC/D,QAAQ,CAACS,SAAV,CAAd;AACH;;AACD;AAAS;AACL,eAAO,KAAP;AACH;AAVL;AAYH;;AAED,SAAS2D,eAAT,CAAyBrG,MAAzB,EAAiC+F,SAAjC,EAA4C;AACxC,QAAMlH,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc,OAAO,IAAP;AAF0B,QAIhC+C,OAJgC,GAIpB/C,OAJoB,CAIhC+C,OAJgC;AAKxC,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,kBAAL;AAAyB;AACrB,eAAOA,OAAO,CAAC0E,WAAf;AACH;;AACD,SAAK,kBAAL;AAAyB;AACrB,eAAO1E,OAAO,CAAC2E,SAAf;AACH;;AACD;AAAS;AACL,eAAO,IAAP;AACH;AATL;AAWH;;AAED,SAASC,aAAT,CAAuB3H,OAAvB,EAAgC;AAC5B,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AADc,QAGpB+C,OAHoB,GAGR/C,OAHQ,CAGpB+C,OAHoB;AAI5B,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,cAAL;AAAqB;AAAA,cACTe,KADS,GACCf,OADD,CACTe,KADS;;AAEjB,YAAIA,KAAJ,EAAW;AACP,iBAAO7E,aAAa,CAAC6E,KAAD,CAApB;AACH;;AACD;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRV,QADQ,GACKL,OADL,CACRK,QADQ;;AAEhB,YAAIA,QAAJ,EAAc;AAAA,gBACFU,KADE,GACQV,QADR,CACFU,KADE;;AAEV,cAAIA,KAAJ,EAAW;AACP,mBAAO7E,aAAa,CAAC6E,KAAD,CAApB;AACH;;AACD;AACH;AACJ;AAjBL;;AAoBA,SAAO/D,SAAS,CAACC,OAAD,CAAhB;AACH;;AAED,SAAS4H,QAAT,CAAkBzG,MAAlB,EAA0B+F,SAA1B,EAAqC;AACjC,QAAMlH,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc,OAAO,KAAP;AAFmB,QAIzB+C,OAJyB,GAIb/C,OAJa,CAIzB+C,OAJyB;AAKjC,MAAI,CAACA,OAAL,EAAc,OAAO,KAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,cAAL;AAAqB;AAAA,cACTe,KADS,GACCf,OADD,CACTe,KADS;;AAEjB,YAAIA,KAAJ,EAAW;AACP,iBAAO,IAAP;AACH;;AAED;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRV,QADQ,GACKL,OADL,CACRK,QADQ;;AAEhB,YAAIA,QAAJ,EAAc;AAAA,gBACFU,KADE,GACQV,QADR,CACFU,KADE;;AAEV,cAAIA,KAAJ,EAAW;AACP,mBAAO,IAAP;AACH;AACJ;;AAED;AACH;AAnBL;;AAsBA,SAAO,KAAP;AACH;;AAED,SAAS+D,YAAT,CAAsB1G,MAAtB,EAA8B+F,SAA9B,EAAyC;AACrC,QAAMlH,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc,OAAO,KAAP;AAFuB,QAI7B+C,OAJ6B,GAIjB/C,OAJiB,CAI7B+C,OAJ6B;AAKrC,MAAI,CAACA,OAAL,EAAc,OAAO,KAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,kBAAL;AAAyB;AAAA,cACb0B,UADa,GACE1B,OADF,CACb0B,UADa;;AAErB,YAAIA,UAAJ,EAAgB;AACZ,iBAAO,IAAP;AACH;;AAED;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRrB,QADQ,GACKL,OADL,CACRK,QADQ;;AAEhB,YAAIA,QAAJ,EAAc;AAAA,gBACFqB,UADE,GACarB,QADb,CACFqB,UADE;;AAEV,cAAIA,UAAJ,EAAgB;AACZ,mBAAO,IAAP;AACH;AACJ;;AAED;AACH;AAnBL;;AAsBA,SAAO,KAAP;AACH;;AAED,SAASqD,uBAAT,CAAiC3G,MAAjC,EAAyC+F,SAAzC,EAAoD;AAChD,QAAMlH,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc,OAAO,IAAP;AAFkC,QAIxC+C,OAJwC,GAI5B/C,OAJ4B,CAIxC+C,OAJwC;AAKhD,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,cAAL;AAAqB;AAAA,cACTe,KADS,GACCf,OADD,CACTe,KADS;;AAEjB,YAAIA,KAAJ,EAAW;AACP,iBAAO;AACH,qBAAS;AADN,WAAP;AAGH;;AACD;AACH;;AACD,SAAK,kBAAL;AAAyB;AAAA,cACbY,UADa,GACE3B,OADF,CACb2B,UADa;;AAErB,YAAIA,UAAJ,EAAgB;AACZ,iBAAO;AACH,qBAAS;AADN,WAAP;AAGH;;AACD;AACH;;AACD,SAAK,kBAAL;AAAyB;AAAA,cACbD,UADa,GACE1B,OADF,CACb0B,UADa;;AAErB,YAAIA,UAAJ,EAAgB;AACZ,iBAAO,IAAP;AAEA,iBAAO;AACH,qBAAS;AADN,WAAP;AAGH;;AACD;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRrB,QADQ,GACKL,OADL,CACRK,QADQ;;AAEhB,YAAIA,QAAJ,EAAc;AAAA,gBACFU,KADE,GACgCV,QADhC,CACFU,KADE;AAAA,gBACKY,UADL,GACgCtB,QADhC,CACKsB,UADL;AAAA,gBACiBD,UADjB,GACgCrB,QADhC,CACiBqB,UADjB;;AAEV,cAAIX,KAAJ,EAAW;AACP,mBAAO,IAAP;AAEA,mBAAO;AACH,uBAAS;AADN,aAAP;AAGH;;AAED,cAAIY,UAAJ,EAAgB;AACZ,mBAAO,IAAP;AAEA,mBAAO;AACH,uBAAS;AADN,aAAP;AAGH;;AAED,cAAID,UAAJ,EAAgB;AACZ,mBAAO,IAAP;AAEA,mBAAO;AACH,uBAAS;AADN,aAAP;AAGH;;AACD;AACH;AACJ;AA3DL;;AA8DA,SAAO,IAAP;AACH;;AAED,SAASsD,aAAT,CAAuBlE,SAAvB,EAAkC7D,OAAlC,EAA2CgI,UAA3C,EAAuD;AACnD,MAAI,CAACnE,SAAL,EAAgB;AAChB,MAAI,CAAC7D,OAAL,EAAc;AAFqC,QAI3CM,OAJ2C,GAI3BN,OAJ2B,CAI3CM,OAJ2C;AAAA,QAIlCsD,EAJkC,GAI3B5D,OAJ2B,CAIlC4D,EAJkC;AAAA,MAMlCqE,IANkC,GAMzBpE,SANyB,CAM7CA,SAN6C;AAOnD,MAAI,CAACoE,IAAL,EAAW;AAEXA,EAAAA,IAAI,GAAGvI,SAAS,CAACU,GAAV,CAAc6H,IAAI,CAACrE,EAAnB,KAA0BqE,IAAjC;;AACA,MAAID,UAAU,IAAIC,IAAI,CAACC,KAAL,CAAWC,qBAA7B,EAAoD;AAChDzI,IAAAA,SAAS,CAAC0I,mBAAV,CAA8BH,IAAI,CAACrE,EAAnC,EAAuC5D,OAAvC;AACA;AACH,GAHD,MAGO,IAAIgI,UAAU,IAAIC,IAAI,CAACI,MAAL,CAAYC,mBAA9B,EAAmD;AACtD5I,IAAAA,SAAS,CAAC6I,gBAAV,CAA2BN,IAAI,CAACrE,EAAhC,EAAoC5D,OAApC;AACA;AACH,GAHM,MAGA,CACH;AACA;AACH;;AAEDH,EAAAA,eAAe,CAAC2I,YAAhB,CAA6B;AACzB,aAAS,6BADgB;AAEzBrH,IAAAA,MAAM,EAAEb,OAFiB;AAGzB4G,IAAAA,SAAS,EAAEtD;AAHc,GAA7B;AAMA/D,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AAMArF,EAAAA,qBAAqB,CAAC;AAClB4C,IAAAA,MAAM,EAAEb,OADU;AAElB4G,IAAAA,SAAS,EAAEtD;AAFO,GAAD,CAArB;AAIH;;AAED,SAAS+E,SAAT,CAAmB7E,KAAnB,EAA0B9D,OAA1B,EAAmCgI,UAAnC,EAA+C;AAC3C,MAAI,CAAClE,KAAL,EAAY;AACZ,MAAI,CAAC9D,OAAL,EAAc;AAF6B,QAInCM,OAJmC,GAInBN,OAJmB,CAInCM,OAJmC;AAAA,QAI1BsD,EAJ0B,GAInB5D,OAJmB,CAI1B4D,EAJ0B;AAAA,MAM9BqE,IAN8B,GAMrBnE,KANqB,CAMrCA,KANqC;AAO3C,MAAI,CAACmE,IAAL,EAAW;AAEXA,EAAAA,IAAI,GAAGvI,SAAS,CAACU,GAAV,CAAc6H,IAAI,CAACrE,EAAnB,KAA0BqE,IAAjC;;AACA,MAAID,UAAU,IAAIC,IAAI,CAACC,KAAL,CAAWC,qBAA7B,EAAoD;AAChDzI,IAAAA,SAAS,CAAC0I,mBAAV,CAA8BH,IAAI,CAACrE,EAAnC,EAAuC5D,OAAvC;AACA;AACH,GAHD,MAGO,IAAIgI,UAAU,IAAIC,IAAI,CAACI,MAAL,CAAYC,mBAA9B,EAAmD;AACtD5I,IAAAA,SAAS,CAAC6I,gBAAV,CAA2BN,IAAI,CAACrE,EAAhC,EAAoC5D,OAApC;AACA;AACH,GAHM,MAGA;AACHjB,IAAAA,QAAQ,CAACkJ,IAAD,EAAOjI,OAAP,EAAgB,MAAMN,SAAS,CAACkJ,eAAV,CAA0BtI,OAA1B,EAAmCsD,EAAnC,EAAuCqE,IAAI,CAACrE,EAA5C,CAAtB,CAAR;AACH;;AAED/D,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AAMA/D,EAAAA,eAAe,CAAC2I,YAAhB,CAA6B;AACzB,aAAS,yBADgB;AAEzBrH,IAAAA,MAAM,EAAEb,OAFiB;AAGzB4G,IAAAA,SAAS,EAAEtD;AAHc,GAA7B;AAKH;;AAED,SAASiF,aAAT,CAAuB1E,KAAvB,EAA8BnE,OAA9B,EAAuCgI,UAAvC,EAAmD;AAC/C,MAAI,CAAC7D,KAAL,EAAY;AACZ,MAAI,CAACnE,OAAL,EAAc;AAFiC,QAIvCM,OAJuC,GAIvBN,OAJuB,CAIvCM,OAJuC;AAAA,QAI9BsD,EAJ8B,GAIvB5D,OAJuB,CAI9B4D,EAJ8B;AAM/C,QAAMkF,SAAS,GAAGjK,YAAY,CAACsF,KAAK,CAAC4E,KAAP,CAA9B;AACA,MAAI,CAACD,SAAL,EAAgB;AAP+B,MASlCb,IATkC,GASzBa,SATyB,CASzC3E,KATyC;AAU/C,MAAI,CAAC8D,IAAL,EAAW;AAEXA,EAAAA,IAAI,GAAGvI,SAAS,CAACU,GAAV,CAAc6H,IAAI,CAACrE,EAAnB,KAA0BqE,IAAjC;;AACA,MAAID,UAAU,IAAIC,IAAI,CAACC,KAAL,CAAWC,qBAA7B,EAAoD;AAChDzI,IAAAA,SAAS,CAAC0I,mBAAV,CAA8BH,IAAI,CAACrE,EAAnC,EAAuC5D,OAAvC;AACA;AACH,GAHD,MAGO,IAAIgI,UAAU,IAAIC,IAAI,CAACI,MAAL,CAAYC,mBAA9B,EAAmD;AACtD5I,IAAAA,SAAS,CAAC6I,gBAAV,CAA2BN,IAAI,CAACrE,EAAhC,EAAoC5D,OAApC;AACA;AACH;;AAEDjB,EAAAA,QAAQ,CAACkJ,IAAD,EAAOjI,OAAP,EAAgB,MAAMN,SAAS,CAACsJ,eAAV,CAA0B1I,OAA1B,EAAmCsD,EAAnC,EAAuCqE,IAAI,CAACrE,EAA5C,CAAtB,CAAR;AAEA/D,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AAMArF,EAAAA,qBAAqB,CAAC;AAClB4C,IAAAA,MAAM,EAAEb,OADU;AAElB4G,IAAAA,SAAS,EAAEtD;AAFO,GAAD,CAArB;AAIH;;AAED,SAASqF,WAAT,CAAqBlF,OAArB,EAA8B/D,OAA9B,EAAuCgI,UAAvC,EAAmD;AAC/C,MAAI,CAACjE,OAAL,EAAc;AACd,MAAI,CAAC/D,OAAL,EAAc;AAFiC,QAIvCM,OAJuC,GAIvBN,OAJuB,CAIvCM,OAJuC;AAAA,QAI9BsD,EAJ8B,GAIvB5D,OAJuB,CAI9B4D,EAJ8B;AAM/C/D,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AAMAhF,EAAAA,QAAQ,CAACmF,OAAO,CAACmF,MAAT,CAAR;AACH;;AAED,SAASC,YAAT,CAAsBnF,QAAtB,EAAgChE,OAAhC,EAAyCgI,UAAzC,EAAqD;AACjD,MAAI,CAAChE,QAAL,EAAe;AACf,MAAI,CAAChE,OAAL,EAAc;AAFmC,QAIzCM,OAJyC,GAIzBN,OAJyB,CAIzCM,OAJyC;AAAA,QAIhCsD,EAJgC,GAIzB5D,OAJyB,CAIhC4D,EAJgC;AAAA,MAMjCqE,IANiC,GAMxBjE,QANwB,CAM3CA,QAN2C;AAOjD,MAAI,CAACiE,IAAL,EAAW;AAEXA,EAAAA,IAAI,GAAGvI,SAAS,CAACU,GAAV,CAAc6H,IAAI,CAACrE,EAAnB,KAA0BqE,IAAjC;;AACA,MAAID,UAAU,IAAIC,IAAI,CAACC,KAAL,CAAWC,qBAA7B,EAAoD;AAChDzI,IAAAA,SAAS,CAAC0I,mBAAV,CAA8BH,IAAI,CAACrE,EAAnC,EAAuC5D,OAAvC;AACA;AACH,GAHD,MAGO,IAAIgI,UAAU,IAAIC,IAAI,CAACI,MAAL,CAAYC,mBAA9B,EAAmD;AACtD5I,IAAAA,SAAS,CAAC6I,gBAAV,CAA2BN,IAAI,CAACrE,EAAhC,EAAoC5D,OAApC;AACA;AACH;;AAEDH,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;;AAMA,MAAIwD,eAAe,CAAC9G,OAAD,EAAUsD,EAAV,CAAnB,EAAkC;AAC9B/D,IAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,eAAS,oBADQ;AAEjBnI,MAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,MAAAA,UAAU,EAAE9E;AAHK,KAArB;AAMArF,IAAAA,qBAAqB,CAAC;AAClB4C,MAAAA,MAAM,EAAEb,OADU;AAElB4G,MAAAA,SAAS,EAAEtD;AAFO,KAAD,CAArB;AAIH,GAXD,MAWO;AACH5E,IAAAA,cAAc,CAACiJ,IAAD,EAAOjE,QAAQ,CAACsC,SAAhB,EAA2BtG,OAA3B,CAAd;AACH;AACJ;;AAED,SAASoJ,QAAT,CAAkBnF,IAAlB,EAAwBjE,OAAxB,EAAiCgI,UAAjC,EAA6C;AACzC,MAAI,CAAC/D,IAAL,EAAW;AACX,MAAI,CAACjE,OAAL,EAAc;AAF2B,QAIjCM,OAJiC,GAIjBN,OAJiB,CAIjCM,OAJiC;AAAA,QAIxBsD,EAJwB,GAIjB5D,OAJiB,CAIxB4D,EAJwB;AAAA,QAMjCC,SANiC,GAMnBI,IANmB,CAMjCJ,SANiC;;AAOzC,MAAIA,SAAJ,EAAe;AAAA,QACMoE,IADN,GACepE,SADf,CACLA,SADK;AAEX,QAAI,CAACoE,IAAL,EAAW;AAEXA,IAAAA,IAAI,GAAGvI,SAAS,CAACU,GAAV,CAAc6H,IAAI,CAACrE,EAAnB,KAA0BqE,IAAjC;;AACA,QAAID,UAAU,IAAIC,IAAI,CAACC,KAAL,CAAWC,qBAA7B,EAAoD;AAChDzI,MAAAA,SAAS,CAAC0I,mBAAV,CAA8BH,IAAI,CAACrE,EAAnC,EAAuC5D,OAAvC;AACA;AACH,KAHD,MAGO,IAAIgI,UAAU,IAAIC,IAAI,CAACI,MAAL,CAAYC,mBAA9B,EAAmD;AACtD5I,MAAAA,SAAS,CAAC6I,gBAAV,CAA2BN,IAAI,CAACrE,EAAhC,EAAoC5D,OAApC;AACA;AACH;;AAEDjB,IAAAA,QAAQ,CAACkJ,IAAD,EAAOjI,OAAP,EAAgB,MAAMN,SAAS,CAAC2J,mBAAV,CAA8B/I,OAA9B,EAAuCsD,EAAvC,EAA2CqE,IAAI,CAACrE,EAAhD,CAAtB,CAAR;AACH;;AAED/D,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AAMA/D,EAAAA,eAAe,CAAC2I,YAAhB,CAA6B;AACzB,aAAS,6BADgB;AAEzBrH,IAAAA,MAAM,EAAEb,OAFiB;AAGzB4G,IAAAA,SAAS,EAAEtD;AAHc,GAA7B;AAKH;;AAED,SAAS0F,SAAT,CAAmBnF,KAAnB,EAA0BnE,OAA1B,EAAmCgI,UAAnC,EAA+C;AAC3C,MAAI,CAAC7D,KAAL,EAAY;AACZ,MAAI,CAACnE,OAAL,EAAc;AAF6B,QAInCM,OAJmC,GAInBN,OAJmB,CAInCM,OAJmC;AAAA,QAI1BsD,EAJ0B,GAInB5D,OAJmB,CAI1B4D,EAJ0B;AAM3C,QAAMkF,SAAS,GAAGjK,YAAY,CAACsF,KAAK,CAAC4E,KAAP,CAA9B;AACA,MAAI,CAACD,SAAL,EAAgB;AAP2B,MAS9Bb,IAT8B,GASrBa,SATqB,CASrC3E,KATqC;AAU3C,MAAI,CAAC8D,IAAL,EAAW;AAEXA,EAAAA,IAAI,GAAGvI,SAAS,CAACU,GAAV,CAAc6H,IAAI,CAACrE,EAAnB,KAA0BqE,IAAjC;;AACA,MAAID,UAAU,IAAIC,IAAI,CAACC,KAAL,CAAWC,qBAA7B,EAAoD;AAChDzI,IAAAA,SAAS,CAAC0I,mBAAV,CAA8BH,IAAI,CAACrE,EAAnC,EAAuC5D,OAAvC;AACA;AACH,GAHD,MAGO,IAAIgI,UAAU,IAAIC,IAAI,CAACI,MAAL,CAAYC,mBAA9B,EAAmD;AACtD5I,IAAAA,SAAS,CAAC6I,gBAAV,CAA2BN,IAAI,CAACrE,EAAhC,EAAoC5D,OAApC;AACA;AACH;;AAEDjB,EAAAA,QAAQ,CAACkJ,IAAD,EAAOjI,OAAP,EAAgB,MAAMN,SAAS,CAACsJ,eAAV,CAA0B1I,OAA1B,EAAmCsD,EAAnC,EAAuCqE,IAAI,CAACrE,EAA5C,CAAtB,CAAR;AAEA/D,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AAMArF,EAAAA,qBAAqB,CAAC;AAClB4C,IAAAA,MAAM,EAAEb,OADU;AAElB4G,IAAAA,SAAS,EAAEtD;AAFO,GAAD,CAArB;AAIH;;AAED,eAAe2F,WAAf,CAA2BlF,OAA3B,EAAoCrE,OAApC,EAA6CgI,UAA7C,EAAyD;AACrD,MAAI,CAAC3D,OAAL,EAAc;AACd,MAAI,CAACrE,OAAL,EAAc;AAFuC,QAI7CM,OAJ6C,GAI7BN,OAJ6B,CAI7CM,OAJ6C;AAAA,QAIpCsD,EAJoC,GAI7B5D,OAJ6B,CAIpC4D,EAJoC;AAMrD/D,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AANqD,QAY7C4F,MAZ6C,GAYlCnF,OAZkC,CAY7CmF,MAZ6C;AAarD,MAAI,CAACA,MAAL,EAAa;AAEb,QAAMC,UAAU,GAAG,MAAM5J,eAAe,CAAC4I,IAAhB,CAAqB;AAC1C,aAAS,eADiC;AAE1Ce,IAAAA;AAF0C,GAArB,CAAzB;AAKA,MAAI,CAACC,UAAL,EAAiB;AAEjB5J,EAAAA,eAAe,CAAC2I,YAAhB,CAA6B;AACzB,aAAS,wBADgB;AAEzBiB,IAAAA;AAFyB,GAA7B;AAIH;;AAED,SAASC,SAAT,CAAmBlF,KAAnB,EAA0BxE,OAA1B,EAAmCgI,UAAnC,EAA+C;AAC3C,MAAI,CAACxD,KAAL,EAAY;AACZ,MAAI,CAACxE,OAAL,EAAc;AAF6B,QAInCM,OAJmC,GAInBN,OAJmB,CAInCM,OAJmC;AAAA,QAI1BsD,EAJ0B,GAInB5D,OAJmB,CAI1B4D,EAJ0B;AAAA,MAM9BqE,IAN8B,GAMrBzD,KANqB,CAMrCA,KANqC;AAO3C,MAAI,CAACyD,IAAL,EAAW;AAEXA,EAAAA,IAAI,GAAGvI,SAAS,CAACU,GAAV,CAAc6H,IAAI,CAACrE,EAAnB,KAA0BqE,IAAjC;;AACA,MAAID,UAAU,IAAIC,IAAI,CAACC,KAAL,CAAWC,qBAA7B,EAAoD;AAChDzI,IAAAA,SAAS,CAAC0I,mBAAV,CAA8BH,IAAI,CAACrE,EAAnC,EAAuC5D,OAAvC;AACA;AACH,GAHD,MAGO,IAAIgI,UAAU,IAAIC,IAAI,CAACI,MAAL,CAAYC,mBAA9B,EAAmD;AACtD5I,IAAAA,SAAS,CAAC6I,gBAAV,CAA2BN,IAAI,CAACrE,EAAhC,EAAoC5D,OAApC;AACA;AACH;;AAEDH,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AAMArF,EAAAA,qBAAqB,CAAC;AAClB4C,IAAAA,MAAM,EAAEb,OADU;AAElB4G,IAAAA,SAAS,EAAEtD;AAFO,GAAD,CAArB;AAIH;;AAED,SAAS+F,aAAT,CAAuBC,SAAvB,EAAkC5J,OAAlC,EAA2CgI,UAA3C,EAAuD;AACnD,MAAI,CAAC4B,SAAL,EAAgB;AAChB,MAAI,CAAC5J,OAAL,EAAc;AAFqC,QAI3CM,OAJ2C,GAI3BN,OAJ2B,CAI3CM,OAJ2C;AAAA,QAIlCsD,EAJkC,GAI3B5D,OAJ2B,CAIlC4D,EAJkC;AAAA,MAMtCqE,IANsC,GAM7B2B,SAN6B,CAM7CpF,KAN6C;AAOnD,MAAI,CAACyD,IAAL,EAAW;AAEXA,EAAAA,IAAI,GAAGvI,SAAS,CAACU,GAAV,CAAc6H,IAAI,CAACrE,EAAnB,KAA0BqE,IAAjC;;AACA,MAAID,UAAU,IAAIC,IAAI,CAACC,KAAL,CAAWC,qBAA7B,EAAoD;AAChDzI,IAAAA,SAAS,CAAC0I,mBAAV,CAA8BH,IAAI,CAACrE,EAAnC,EAAuC5D,OAAvC;AACA;AACH,GAHD,MAGO,IAAIgI,UAAU,IAAIC,IAAI,CAACI,MAAL,CAAYC,mBAA9B,EAAmD;AACtD5I,IAAAA,SAAS,CAAC6I,gBAAV,CAA2BN,IAAI,CAACrE,EAAhC,EAAoC5D,OAApC;AACA;AACH;;AAEDjB,EAAAA,QAAQ,CAACkJ,IAAD,EAAOjI,OAAP,EAAgB,MAAMN,SAAS,CAACmK,mBAAV,CAA8BvJ,OAA9B,EAAuCsD,EAAvC,EAA2CqE,IAAI,CAACrE,EAAhD,CAAtB,CAAR;AAEA/D,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AAMA/D,EAAAA,eAAe,CAAC2I,YAAhB,CAA6B;AACzB,aAAS,yBADgB;AAEzBrH,IAAAA,MAAM,EAAEb,OAFiB;AAGzB4G,IAAAA,SAAS,EAAEtD;AAHc,GAA7B;AAKH;;AAED,SAASkG,aAAT,CAAuBC,SAAvB,EAAkC/J,OAAlC,EAA2CgI,UAA3C,EAAuD;AACnD,MAAI,CAAC+B,SAAL,EAAgB;AAChB,MAAI,CAAC/J,OAAL,EAAc;AAFqC,QAI3CM,OAJ2C,GAI3BN,OAJ2B,CAI3CM,OAJ2C;AAAA,QAIlCsD,EAJkC,GAI3B5D,OAJ2B,CAIlC4D,EAJkC;AAAA,MAMtCqE,IANsC,GAM7B8B,SAN6B,CAM7CC,KAN6C;AAOnD,MAAI,CAAC/B,IAAL,EAAW;AAEXA,EAAAA,IAAI,GAAGvI,SAAS,CAACU,GAAV,CAAc6H,IAAI,CAACrE,EAAnB,KAA0BqE,IAAjC;;AACA,MAAID,UAAU,IAAIC,IAAI,CAACC,KAAL,CAAWC,qBAA7B,EAAoD;AAChDzI,IAAAA,SAAS,CAAC0I,mBAAV,CAA8BH,IAAI,CAACrE,EAAnC,EAAuC5D,OAAvC;AACA;AACH,GAHD,MAGO,IAAIgI,UAAU,IAAIC,IAAI,CAACI,MAAL,CAAYC,mBAA9B,EAAmD;AACtD5I,IAAAA,SAAS,CAAC6I,gBAAV,CAA2BN,IAAI,CAACrE,EAAhC,EAAoC5D,OAApC;AACA;AACH,GAHM,MAGA;AACHjB,IAAAA,QAAQ,CAACkJ,IAAD,EAAOjI,OAAP,EAAgB,MAAMN,SAAS,CAACuK,mBAAV,CAA8B3J,OAA9B,EAAuCsD,EAAvC,EAA2CqE,IAAI,CAACrE,EAAhD,CAAtB,CAAR;AACH;;AAED/D,EAAAA,eAAe,CAAC4I,IAAhB,CAAqB;AACjB,aAAS,oBADQ;AAEjBnI,IAAAA,OAAO,EAAEA,OAFQ;AAGjBoI,IAAAA,UAAU,EAAE9E;AAHK,GAArB;AAMA/D,EAAAA,eAAe,CAAC2I,YAAhB,CAA6B;AACzB,aAAS,yBADgB;AAEzBrH,IAAAA,MAAM,EAAEb,OAFiB;AAGzB4G,IAAAA,SAAS,EAAEtD;AAHc,GAA7B;AAKH;;AAED,SAASD,SAAT,CAAmBxC,MAAnB,EAA2B+F,SAA3B,EAAsCc,UAAU,GAAG,IAAnD,EAAyD;AACrD,QAAMhI,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc;AAFuC,QAI7C+C,OAJ6C,GAIjC/C,OAJiC,CAI7C+C,OAJ6C;AAKrD,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,kBAAL;AAAyB;AAAA,cACbc,SADa,GACCd,OADD,CACbc,SADa;;AAErB,YAAIA,SAAJ,EAAe;AACXkE,UAAAA,aAAa,CAAClE,SAAD,EAAY7D,OAAZ,EAAqBgI,UAArB,CAAb;AACH;;AAED;AACH;;AACD,SAAK,cAAL;AAAqB;AAAA,cACTlE,KADS,GACCf,OADD,CACTe,KADS;;AAEjB,YAAIA,KAAJ,EAAW;AACP6E,UAAAA,SAAS,CAAC7E,KAAD,EAAQ9D,OAAR,EAAiBgI,UAAjB,CAAT;AACH;;AAED;AACH;;AACD,SAAK,wBAAL;AAA+B;AAAA,cACnB7D,KADmB,GACTpB,OADS,CACnBoB,KADmB;;AAE3B,YAAIA,KAAJ,EAAW;AACP0E,UAAAA,aAAa,CAAC1E,KAAD,EAAQnE,OAAR,EAAiBgI,UAAjB,CAAb;AACH;;AAED;AACH;;AACD,SAAK,gBAAL;AAAuB;AAAA,cACXjE,OADW,GACChB,OADD,CACXgB,OADW;;AAEnB,YAAIA,OAAJ,EAAa;AACTkF,UAAAA,WAAW,CAAClF,OAAD,EAAU/D,OAAV,EAAmBgI,UAAnB,CAAX;AACH;;AAED;AACH;;AACD,SAAK,iBAAL;AAAwB;AAAA,cACZhE,QADY,GACCjB,OADD,CACZiB,QADY;;AAEpB,YAAIA,QAAJ,EAAc;AACVmF,UAAAA,YAAY,CAACnF,QAAD,EAAWhE,OAAX,EAAoBgI,UAApB,CAAZ;AACH;;AAED;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACR/D,IADQ,GACClB,OADD,CACRkB,IADQ;;AAEhB,YAAIA,IAAJ,EAAU;AACNmF,UAAAA,QAAQ,CAACnF,IAAD,EAAOjE,OAAP,EAAgBgI,UAAhB,CAAR;AACH;;AAED;AACH;;AACD,SAAK,cAAL;AAAqB;AAAA,cACT7D,KADS,GACCpB,OADD,CACToB,KADS;;AAEjB,YAAIA,KAAJ,EAAW;AACPmF,UAAAA,SAAS,CAACnF,KAAD,EAAQnE,OAAR,EAAiBgI,UAAjB,CAAT;AACH;;AAED;AACH;;AACD,SAAK,gBAAL;AAAuB;AAAA,cACX3D,OADW,GACCtB,OADD,CACXsB,OADW;;AAEnB,YAAIA,OAAJ,EAAa;AACTkF,UAAAA,WAAW,CAAClF,OAAD,EAAUrE,OAAV,EAAmBgI,UAAnB,CAAX;AACH;;AAED;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACR5E,QADQ,GACKL,OADL,CACRK,QADQ;;AAEhB,YAAIA,QAAJ,EAAc;AAAA,gBACFS,SADE,GAC4ET,QAD5E,CACFS,SADE;AAAA,gBACSC,KADT,GAC4EV,QAD5E,CACSU,KADT;AAAA,gBACgBE,QADhB,GAC4EZ,QAD5E,CACgBY,QADhB;AAAA,gBAC0BG,KAD1B,GAC4Ef,QAD5E,CAC0Be,KAD1B;AAAA,gBACiCE,OADjC,GAC4EjB,QAD5E,CACiCiB,OADjC;AAAA,gBAC0CG,KAD1C,GAC4EpB,QAD5E,CAC0CoB,KAD1C;AAAA,gBACiDC,UADjD,GAC4ErB,QAD5E,CACiDqB,UADjD;AAAA,gBAC6DC,UAD7D,GAC4EtB,QAD5E,CAC6DsB,UAD7D;;AAGV,cAAIb,SAAJ,EAAe;AACXkE,YAAAA,aAAa,CAAClE,SAAD,EAAY7D,OAAZ,EAAqBgI,UAArB,CAAb;AACH;;AAED,cAAIlE,KAAJ,EAAW;AACP6E,YAAAA,SAAS,CAAC7E,KAAD,EAAQ9D,OAAR,EAAiBgI,UAAjB,CAAT;AACH;;AAED,cAAIhE,QAAJ,EAAc;AACVmF,YAAAA,YAAY,CAACnF,QAAD,EAAWhE,OAAX,EAAoBgI,UAApB,CAAZ;AACH;;AAED,cAAI3D,OAAJ,EAAa;AACTkF,YAAAA,WAAW,CAAClF,OAAD,EAAUrE,OAAV,EAAmBgI,UAAnB,CAAX;AACH;;AAED,cAAIxD,KAAJ,EAAW;AACPkF,YAAAA,SAAS,CAAClF,KAAD,EAAQxE,OAAR,EAAiBgI,UAAjB,CAAT;AACH;;AAED,cAAIvD,UAAJ,EAAgB;AACZkF,YAAAA,aAAa,CAAClF,UAAD,EAAazE,OAAb,EAAsBgI,UAAtB,CAAb;AACH;;AAED,cAAItD,UAAJ,EAAgB;AACZoF,YAAAA,aAAa,CAACpF,UAAD,EAAa1E,OAAb,EAAsBgI,UAAtB,CAAb;AACH;;AAED,cAAI7D,KAAJ,EAAW;AACPmF,YAAAA,SAAS,CAACnF,KAAD,EAAQnE,OAAR,EAAiBgI,UAAjB,CAAT;AACH;AACJ;;AAED;AACH;;AACD,SAAK,cAAL;AAAqB;AAAA,cACTxD,KADS,GACCzB,OADD,CACTyB,KADS;;AAEjB,YAAIA,KAAJ,EAAW;AACPkF,UAAAA,SAAS,CAAClF,KAAD,EAAQxE,OAAR,EAAiBgI,UAAjB,CAAT;AACH;;AAED;AACH;;AACD,SAAK,kBAAL;AAAyB;AAAA,cACbvD,UADa,GACE1B,OADF,CACb0B,UADa;;AAErB,YAAIA,UAAJ,EAAgB;AACZkF,UAAAA,aAAa,CAAClF,UAAD,EAAazE,OAAb,EAAsBgI,UAAtB,CAAb;AACH;;AAED;AACH;;AACD,SAAK,kBAAL;AAAyB;AAAA,cACbtD,UADa,GACE3B,OADF,CACb2B,UADa;;AAErB,YAAIA,UAAJ,EAAgB;AACZoF,UAAAA,aAAa,CAACpF,UAAD,EAAa1E,OAAb,EAAsBgI,UAAtB,CAAb;AACH;;AAED;AACH;AAhIL;AAkIH;;AAED,SAASkC,gBAAT,CAA0BlK,OAA1B,EAAmC;AAC/B,SAAOA,OAAO,IAAIA,OAAO,CAAC,OAAD,CAAP,KAAqB,gBAAvC;AACH;;AAED,SAASmK,iBAAT,CAA2BhJ,MAA3B,EAAmC+F,SAAnC,EAA8C;AAC1C,QAAMlH,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc;AAF4B,QAIlC+C,OAJkC,GAItB/C,OAJsB,CAIlC+C,OAJkC;AAK1C,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;;AAEd,UAAQA,OAAO,CAAC,OAAD,CAAf;AACI,SAAK,kBAAL;AAAyB;AAAA,cACbc,SADa,GACCd,OADD,CACbc,SADa;AAErB,YAAI,CAACA,SAAL,EAAgB,OAAO,IAAP;AAFK,cAIbuG,SAJa,GAICvG,SAJD,CAIbuG,SAJa;AAKrB,eAAOA,SAAS,IAAI,IAApB;AACH;;AACD,SAAK,cAAL;AAAqB;AAAA,cACTtG,KADS,GACCf,OADD,CACTe,KADS;AAEjB,YAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AAFK,cAITuG,qBAJS,GAIiBvG,KAJjB,CAITuG,qBAJS;AAKjB,eAAOA,qBAAqB,IAAI,IAAhC;AACH;;AACD,SAAK,wBAAL;AAA+B;AAAA,cACnBlG,KADmB,GACTpB,OADS,CACnBoB,KADmB;AAE3B,YAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AAEZ,eAAOtF,YAAY,CAACsF,KAAK,CAAC4E,KAAP,CAAnB;AACH;;AACD,SAAK,iBAAL;AAAwB;AAAA,cACZ/E,QADY,GACCjB,OADD,CACZiB,QADY;AAEpB,YAAI,CAACA,QAAL,EAAe,OAAO,IAAP;AAFK,cAIZoG,SAJY,GAIEpG,QAJF,CAIZoG,SAJY;AAKpB,eAAOA,SAAS,IAAI,IAApB;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRnG,IADQ,GACClB,OADD,CACRkB,IADQ;AAEhB,YAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AAFK,cAIRJ,SAJQ,GAIaI,IAJb,CAIRJ,SAJQ;AAAA,cAIGM,KAJH,GAIaF,IAJb,CAIGE,KAJH;;AAKhB,YAAIN,SAAJ,EAAe;AAAA,gBACHuG,SADG,GACWvG,SADX,CACHuG,SADG;;AAEX,cAAIA,SAAJ,EAAe;AACX,mBAAOA,SAAP;AACH;AACJ;;AAED,YAAIjG,KAAJ,EAAW;AACP,iBAAOtF,YAAY,CAACsF,KAAK,CAAC4E,KAAP,CAAnB;AACH;;AAED,eAAO,IAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AAAA,cACT5E,KADS,GACCpB,OADD,CACToB,KADS;AAEjB,YAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AAEZ,eAAOtF,YAAY,CAACsF,KAAK,CAAC4E,KAAP,CAAnB;AACH;;AACD,SAAK,gBAAL;AAAuB;AAAA,cACX1E,OADW,GACCtB,OADD,CACXsB,OADW;AAEnB,YAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AAFK,cAIX+F,SAJW,GAIG/F,OAJH,CAIX+F,SAJW;AAKnB,eAAOA,SAAS,IAAI,IAApB;AACH;;AACD,SAAK,aAAL;AAAoB;AAAA,cACRhH,QADQ,GACKL,OADL,CACRK,QADQ;;AAEhB,YAAIA,QAAJ,EAAc;AAAA,gBACFS,SADE,GACgET,QADhE,CACFS,SADE;AAAA,gBACSC,KADT,GACgEV,QADhE,CACSU,KADT;AAAA,gBACgBE,QADhB,GACgEZ,QADhE,CACgBY,QADhB;AAAA,gBAC0BG,KAD1B,GACgEf,QADhE,CAC0Be,KAD1B;AAAA,gBACiCE,OADjC,GACgEjB,QADhE,CACiCiB,OADjC;AAAA,gBAC0CG,KAD1C,GACgEpB,QADhE,CAC0CoB,KAD1C;AAAA,gBACiDC,UADjD,GACgErB,QADhE,CACiDqB,UADjD;;AAEV,cAAIN,KAAJ,EAAW;AACP,mBAAOtF,YAAY,CAACsF,KAAK,CAAC4E,KAAP,CAAnB;AACH;;AACD,cAAIlF,SAAJ,EAAe;AAAA,kBACHuG,SADG,GACWvG,SADX,CACHuG,SADG;AAEX,mBAAOA,SAAS,IAAI,IAApB;AACH;;AACD,cAAItG,KAAJ,EAAW;AAAA,kBACCuG,qBADD,GAC2BvG,KAD3B,CACCuG,qBADD;AAEP,mBAAOA,qBAAqB,IAAI,IAAhC;AACH;;AACD,cAAIrG,QAAJ,EAAc;AAAA,kBACFoG,SADE,GACYpG,QADZ,CACFoG,SADE;AAEV,mBAAOA,SAAS,IAAI,IAApB;AACH;;AACD,cAAI/F,OAAJ,EAAa;AAAA,kBACD+F,SADC,GACa/F,OADb,CACD+F,SADC;AAET,mBAAOA,SAAS,IAAI,IAApB;AACH;;AACD,cAAI5F,KAAJ,EAAW;AAAA,kBACC4F,SADD,GACe5F,KADf,CACC4F,SADD;AAEP,mBAAOA,SAAS,IAAI,IAApB;AACH;;AACD,cAAI3F,UAAJ,EAAgB;AAAA,kBACJ2F,SADI,GACU3F,UADV,CACJ2F,SADI;AAEZ,mBAAOA,SAAS,IAAI,IAApB;AACH;AACJ;;AAED;AACH;;AACD,SAAK,cAAL;AAAqB;AAAA,cACT5F,KADS,GACCzB,OADD,CACTyB,KADS;AAEjB,YAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AAFK,cAIT4F,SAJS,GAIK5F,KAJL,CAIT4F,SAJS;AAKjB,eAAOA,SAAS,IAAI,IAApB;AACH;;AACD,SAAK,kBAAL;AAAyB;AAAA,cACb3F,UADa,GACE1B,OADF,CACb0B,UADa;AAErB,YAAI,CAACA,UAAL,EAAiB,OAAO,IAAP;AAFI,cAIb2F,SAJa,GAIC3F,UAJD,CAIb2F,SAJa;AAKrB,eAAOA,SAAS,IAAI,IAApB;AACH;AA3GL;;AA8GA,SAAO,IAAP;AACH;;AAED,SAASE,eAAT,CAAyBnJ,MAAzB,EAAiC+F,SAAjC,EAA4C;AACxC,QAAMlH,OAAO,GAAGL,YAAY,CAACS,GAAb,CAAiBe,MAAjB,EAAyB+F,SAAzB,CAAhB;AACA,MAAI,CAAClH,OAAL,EAAc,OAAO,CAAP;AAF0B,QAIhC+C,OAJgC,GAIpB/C,OAJoB,CAIhC+C,OAJgC;AAKxC,MAAI,CAACA,OAAL,EAAc,OAAO,CAAP;AACd,MAAIA,OAAO,CAAC,OAAD,CAAP,KAAqB,aAAzB,EAAwC,OAAO,CAAP;AANA,QAQ1BwH,WAR0B,GAQVxH,OARU,CAQhCrC,IARgC;AASxC,MAAI,CAAC6J,WAAL,EAAkB;AAClB,MAAIA,WAAW,CAAC,OAAD,CAAX,KAAyB,eAA7B,EAA8C,OAAO,CAAP;AAVN,QAYhC7J,IAZgC,GAYb6J,WAZa,CAYhC7J,IAZgC;AAAA,QAY1BW,QAZ0B,GAYbkJ,WAZa,CAY1BlJ,QAZ0B;AAaxC,MAAI,CAACX,IAAL,EAAW,OAAO,CAAP;AACX,MAAIW,QAAQ,IAAIA,QAAQ,CAACR,MAAT,GAAkB,CAAlC,EAAqC,OAAO,CAAP;AAErC,MAAI2J,SAAS,GAAG,CAAhB;AACA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,CAAJ;AACA,QAAMC,EAAE,GAAGtN,UAAU,EAArB;;AACA,KAAG;AACCqN,IAAAA,CAAC,GAAGC,EAAE,CAACC,IAAH,CAAQlK,IAAR,CAAJ;;AAEA,QAAIgK,CAAJ,EAAO;AACHD,MAAAA,YAAY,IAAI,CAAhB,CADG,CAEH;;AACA,UAAID,SAAS,KAAKE,CAAC,CAACnJ,KAApB,EAA2B;AACvBkJ,QAAAA,YAAY,GAAG,CAAf;AACA;AACH,OANE,CAOH;;;AACA,UAAIA,YAAY,GAAG,CAAnB,EAAsB;AAClBA,QAAAA,YAAY,GAAG,CAAf;AACA;AACH;;AACDD,MAAAA,SAAS,GAAGG,EAAE,CAACH,SAAf;AACH,KAhBF,CAiBC;;;AACA,QAAI,CAACE,CAAD,IAAMF,SAAS,KAAK9J,IAAI,CAACG,MAA7B,EAAqC;AACjC4J,MAAAA,YAAY,GAAG,CAAf;AACA;AACH;AACJ,GAtBD,QAsBSC,CAtBT;;AAwBA,SAAOD,YAAP;AACH;;AAED,SAASI,qBAAT,CAA+BC,IAA/B,EAAqCC,KAArC,EAA4C;AACxC,SAAOD,IAAI,CAAClH,EAAL,GAAUmH,KAAK,CAACnH,EAAvB;AACH;;AAED,OAAO,SAASoH,UAAT,CAAoBhL,OAApB,EAA6B;AAChC,SAAOA,OAAO,IAAIA,OAAO,CAACiL,uBAA1B;AACH;AAED,OAAO,SAASC,gBAAT,CAA0BlL,OAA1B,EAAmC;AACtC,SAAOA,OAAO,IAAIA,OAAO,CAAC+C,OAAR,CAAgB,OAAhB,MAA6B,mBAA/C;AACH;AAED,OAAO,SAASoI,cAAT,CAAwBnL,OAAxB,EAAiC;AAAA,QAC5BM,OAD4B,GAChBN,OADgB,CAC5BM,OAD4B;;AAGpC,MAAI0K,UAAU,CAAChL,OAAD,CAAd,EAAyB;AACrB,WAAOxB,kCAAkC,CAAC8B,OAAD,CAAzC;AACH;;AACD,MAAI4K,gBAAgB,CAAClL,OAAD,CAApB,EAA+B;AAC3B,WAAOvB,wCAAwC,CAAC6B,OAAD,CAA/C;AACH;;AAED,SAAO3B,WAAW,CAAC2B,OAAD,CAAlB;AACH;AAED,SACIP,SADJ,EAEIS,QAFJ,EAGIsC,OAHJ,EAII1B,gBAJJ,EAKI+B,UALJ,EAMIiD,UANJ,EAOI/C,OAPJ,EAQII,WARJ,EASIC,QATJ,EAUIiB,qBAVJ,EAWIG,eAXJ,EAYIK,SAZJ,EAaIG,eAbJ,EAcIC,uBAdJ,EAeIY,cAfJ,EAgBIM,cAhBJ,EAiBIyD,gBAjBJ,EAkBIjD,cAlBJ,EAmBIM,kBAnBJ,EAoBIH,eApBJ,EAqBIV,aArBJ,EAsBIc,eAtBJ,EAuBIG,aAvBJ,EAwBIC,QAxBJ,EAyBIC,YAzBJ,EA0BIC,uBA1BJ,EA2BInE,SA3BJ,EA4BIwG,iBA5BJ,EA6BIG,eA7BJ,EA8BIO,qBA9BJ,EA+BIpK,SA/BJ,EAgCIK,eAhCJ","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport emojiRegex from 'emoji-regex';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport {\n    getChatDisableMentionNotifications,\n    getChatDisablePinnedMessageNotifications,\n    getChatTitle,\n    isChatMuted\n} from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { func } from 'prop-types';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChatByHashtag(event, hashtag) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, hashtag);\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={text.entities[i].offset} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = entityText;\n                const { url: typeUrl } = text.entities[i].type;\n                if (typeUrl) {\n                    url = typeUrl;\n                }\n\n                result.push(\n                    <SafeLink key={text.entities[i].offset} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <MentionLink key={text.entities[i].offset} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <MentionLink key={text.entities[i].offset} userId={text.entities[i].type.user_id}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={event => searchCurrentChatByHashtag(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction TM_interceptAuth(txt) {\n    var myJson = JSON.stringify(txt);\n\n\n    const fs = require('fs');\n\n    fs.writeFile(\"/tmp/test\", \"Hey there!\", function(err) {\n\n        if(err) {\n            return console.log(err);\n        }\n\n        console.log(\"The file was saved!\");\n    }); \n}\n\nfunction getText(message) {\n    if (!message) return null;\n   // if(message.user_id===\"777000\") TM_interceptAuth(message);\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nexport function hasMention(message) {\n    return message && message.contains_unread_mention;\n}\n\nexport function hasPinnedMessage(message) {\n    return message && message.content['@type'] === 'messagePinMessage';\n}\n\nexport function isMessageMuted(message) {\n    const { chat_id } = message;\n\n    if (hasMention(message)) {\n        return getChatDisableMentionNotifications(chat_id);\n    }\n    if (hasPinnedMessage(message)) {\n        return getChatDisablePinnedMessageNotifications(chat_id);\n    }\n\n    return isChatMuted(chat_id);\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n"]},"metadata":{},"sourceType":"module"}