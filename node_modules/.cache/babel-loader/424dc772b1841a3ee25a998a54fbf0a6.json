{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/Tile/DialogTitle.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from 'mdi-material-ui/CheckDecagram';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nconst styles = theme => ({\n  icon: {\n    height: 16,\n    color: theme.palette.primary.main\n  },\n  verifiedIcon: {}\n});\n\nclass DialogTitle extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFastUpdatingComplete = update => {\n      this.forceUpdate();\n    };\n\n    this.onUpdateChatTitle = update => {\n      const chatId = this.props.chatId;\n      if (update.chat_id !== chatId) return;\n      this.forceUpdate();\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.chatId !== this.props.chatId) {\n      return true;\n    }\n\n    if (nextProps.t !== this.props.t) {\n      return true;\n    }\n\n    if (nextProps.theme !== this.props.theme) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n    ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n  }\n\n  componentWillUnmount() {\n    ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n    ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          t = _this$props.t,\n          chatId = _this$props.chatId,\n          showSavedMessages = _this$props.showSavedMessages;\n    const isVerified = isChatVerified(chatId);\n    const title = getChatTitle(chatId, showSavedMessages, t);\n    return React.createElement(\"div\", {\n      className: \"dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"dialog-title-span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, title), isVerified && React.createElement(CheckDecagramIcon, {\n      className: classNames(classes.icon, classes.verifiedIcon, 'dialog-title-icon'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nDialogTitle.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  showSavedMessages: PropTypes.bool\n};\nDialogTitle.defaultProps = {\n  showSavedMessages: true\n};\nconst enhance = compose(withTranslation(), withStyles(styles, {\n  withTheme: true\n}));\nexport default enhance(DialogTitle);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/Tile/DialogTitle.js"],"names":["React","PropTypes","classNames","compose","withStyles","withTranslation","CheckDecagramIcon","getChatTitle","isChatVerified","ChatStore","styles","theme","icon","height","color","palette","primary","main","verifiedIcon","DialogTitle","Component","onFastUpdatingComplete","update","forceUpdate","onUpdateChatTitle","chatId","props","chat_id","shouldComponentUpdate","nextProps","nextState","t","componentDidMount","on","componentWillUnmount","removeListener","render","classes","showSavedMessages","isVerified","title","propTypes","number","isRequired","bool","defaultProps","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from 'mdi-material-ui/CheckDecagram';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nconst styles = theme => ({\n    icon: {\n        height: 16,\n        color: theme.palette.primary.main\n    },\n    verifiedIcon: {}\n});\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && (\n                    <CheckDecagramIcon\n                        className={classNames(classes.icon, classes.verifiedIcon, 'dialog-title-icon')}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(DialogTitle);\n"]},"metadata":{},"sourceType":"module"}