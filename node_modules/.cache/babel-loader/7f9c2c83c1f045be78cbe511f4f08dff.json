{"ast":null,"code":"var _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/InstantView/Blocks/Caption.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n  const text = props.text,\n        credit = props.credit;\n  const hasText = !isEmptyText(text);\n  const hastCredit = !isEmptyText(credit);\n  if (!hasText && !hastCredit) return null;\n  return React.createElement(\"figcaption\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, hasText && React.createElement(RichText, {\n    text: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), hastCredit && React.createElement(\"cite\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(RichText, {\n    text: credit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n}\n\nCaption.propTypes = {\n  text: PropTypes.object.isRequired,\n  credit: PropTypes.object.isRequired\n};\nexport default Caption;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/InstantView/Blocks/Caption.js"],"names":["React","PropTypes","RichText","isEmptyText","Caption","props","text","credit","hasText","hastCredit","propTypes","object","isRequired"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,QACZC,IADY,GACKD,KADL,CACZC,IADY;AAAA,QACNC,MADM,GACKF,KADL,CACNE,MADM;AAGpB,QAAMC,OAAO,GAAG,CAACL,WAAW,CAACG,IAAD,CAA5B;AACA,QAAMG,UAAU,GAAG,CAACN,WAAW,CAACI,MAAD,CAA/B;AACA,MAAI,CAACC,OAAD,IAAY,CAACC,UAAjB,EAA6B,OAAO,IAAP;AAE7B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OAAO,IAAI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEKG,UAAU,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,CADJ;AAUH;;AAEDH,OAAO,CAACM,SAAR,GAAoB;AAChBJ,EAAAA,IAAI,EAAEL,SAAS,CAACU,MAAV,CAAiBC,UADP;AAEhBL,EAAAA,MAAM,EAAEN,SAAS,CAACU,MAAV,CAAiBC;AAFT,CAApB;AAKA,eAAeR,OAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n"]},"metadata":{},"sourceType":"module"}