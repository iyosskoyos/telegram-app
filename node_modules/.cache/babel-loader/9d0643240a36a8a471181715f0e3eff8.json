{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _defineProperty from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React,{Component}from'react';import classNames from'classnames';import{compose}from'recompose';import emojiRegex from'emoji-regex';import{withTranslation}from'react-i18next';import withStyles from'@material-ui/core/styles/withStyles';import SendIcon from'@material-ui/icons/Send';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import DialogTitle from'@material-ui/core/DialogTitle';import InsertEmoticonIcon from'@material-ui/icons/InsertEmoticon';import AttachButton from'./../ColumnMiddle/AttachButton';import CreatePollDialog from'../Popup/CreatePollDialog';import IconButton from'@material-ui/core/IconButton';import InputBoxHeader from'./InputBoxHeader';import OutputTypingManager from'../../Utils/OutputTypingManager';import{getSize,readImageSize}from'../../Utils/Common';import{getChatDraft,getChatDraftReplyToMessageId,isMeChat,isPrivateChat}from'../../Utils/Chat';import{borderStyle}from'../Theme';import{PHOTO_SIZE}from'../../Constants';import MessageStore from'../../Stores/MessageStore';import ChatStore from'../../Stores/ChatStore';import ApplicationStore from'../../Stores/ApplicationStore';import FileStore from'../../Stores/FileStore';import StickerStore from'../../Stores/StickerStore';import TdLibController from'../../Controllers/TdLibController';import'./InputBoxControl.css';var EmojiPickerButton=React.lazy(function(){return import('./../ColumnMiddle/EmojiPickerButton');});var styles=function styles(theme){return _objectSpread({iconButton:{margin:'8px 0'},closeIconButton:{margin:0}},borderStyle(theme));};var InputBoxControl=/*#__PURE__*/function(_Component){_inherits(InputBoxControl,_Component);function InputBoxControl(props){var _this;_classCallCheck(this,InputBoxControl);_this=_possibleConstructorReturn(this,_getPrototypeOf(InputBoxControl).call(this,props));_this.onClientUpdateStickerSend=function(update){var item=update.sticker;if(!item)return;var sticker=item.sticker,thumbnail=item.thumbnail,width=item.width,height=item.height;if(!sticker)return;_this.newMessageRef.current.innerText=null;_this.newMessageRef.current.textContent=null;_this.innerHTML=null;var content={'@type':'inputMessageSticker',sticker:{'@type':'inputFileId',id:sticker.id},width:width,height:height};if(thumbnail){var thumbnailWidth=thumbnail.width,thumbnailHeight=thumbnail.height,photo=thumbnail.photo;content.thumbnail={thumbnail:{'@type':'inputFileId',id:photo.id},width:thumbnailWidth,height:thumbnailHeight};}_this.onSendInternal(content,true,function(result){});TdLibController.clientUpdate({'@type':'clientUpdateLocalStickersHint',hint:null});};_this.onClientUpdateReply=function(update){var currentChatId=_this.state.chatId;var chatId=update.chatId,messageId=update.messageId;if(currentChatId!==chatId){return;}_this.setState({replyToMessageId:messageId});if(messageId){_this.setInputFocus();}};_this.onClientUpdateChatId=function(update){var chatId=_this.state.chatId;if(chatId===update.nextChatId)return;_this.innerHTML=null;_this.setState({chatId:update.nextChatId,replyToMessageId:getChatDraftReplyToMessageId(update.nextChatId),openPasteDialog:false});};_this.setDraft=function(){var chatId=_this.state.chatId;var element=_this.newMessageRef.current;var draft=getChatDraft(chatId);if(draft){element.innerText=draft.text;_this.innerHTML=draft.text;}else{element.innerText=null;_this.innerHTML=null;}};_this.setInputFocus=function(){setTimeout(function(){if(_this.newMessageRef.current){var element=_this.newMessageRef.current;if(element.childNodes.length>0){var range=document.createRange();range.setStart(element.childNodes[0],element.childNodes[0].length);range.collapse(true);var selection=window.getSelection();selection.removeAllRanges();selection.addRange(range);}element.focus();}},100);};_this.setChatDraftMessage=function(chatDraftMessage){if(!chatDraftMessage)return;var chatId=chatDraftMessage.chatId,draftMessage=chatDraftMessage.draftMessage;if(!chatId)return;TdLibController.send({'@type':'setChatDraftMessage',chat_id:chatId,draft_message:draftMessage});};_this.getNewChatDraftMessage=function(chatId,replyToMessageId){var chat=ChatStore.get(chatId);if(!chat)return;var newDraft=_this.getInputText();var previousDraft='';var previousReplyToMessageId=0;var draft_message=chat.draft_message;if(draft_message&&draft_message.input_message_text&&draft_message.input_message_text.text){var reply_to_message_id=draft_message.reply_to_message_id,input_message_text=draft_message.input_message_text;previousReplyToMessageId=reply_to_message_id;if(input_message_text&&input_message_text.text){previousDraft=input_message_text.text.text;}}if(newDraft!==previousDraft||replyToMessageId!==previousReplyToMessageId){var draftMessage={'@type':'draftMessage',reply_to_message_id:replyToMessageId,input_message_text:{'@type':'inputMessageText',text:{'@type':'formattedText',text:newDraft,entities:null},disable_web_page_preview:true,clear_draft:false}};return{chatId:chatId,draftMessage:draftMessage};}return null;};_this.handleSubmit=function(){var text=_this.getInputText();_this.newMessageRef.current.innerText=null;_this.newMessageRef.current.textContent=null;_this.innerHTML=null;_this.handleInput();if(!text)return;if(!text.trim())return;var content={'@type':'inputMessageText',text:{'@type':'formattedText',text:text,entities:null},disable_web_page_preview:false,clear_draft:true};_this.onSendInternal(content,false,function(result){});};_this.handleAttachPoll=function(){TdLibController.clientUpdate({'@type':'clientUpdateNewPoll'});};_this.handleAttachPhoto=function(){if(!_this.attachPhotoRef)return;_this.attachPhotoRef.current.click();};_this.handleAttachPhotoComplete=function(){var files=_this.attachPhotoRef.current.files;if(files.length===0)return;Array.from(files).forEach(function(file){readImageSize(file,function(result){_this.handleSendPhoto(result);});});_this.attachPhotoRef.current.value='';};_this.handleAttachDocument=function(){if(!_this.attachDocumentRef)return;_this.attachDocumentRef.current.click();};_this.handleAttachDocumentComplete=function(){var files=_this.attachDocumentRef.current.files;if(files.length===0)return;Array.from(files).forEach(function(file){_this.handleSendDocument(file);});_this.attachDocumentRef.current.value='';};_this.handleKeyUp=function(){var chatId=_this.state.chatId;if(isMeChat(chatId))return;var chat=ChatStore.get(chatId);if(!chat)return;var innerText=_this.newMessageRef.current.innerText;var innerHTML=_this.newMessageRef.current.innerHTML;if(innerText&&innerText==='\\n'&&innerHTML&&(innerHTML==='<br>'||innerHTML==='<div><br></div>')){_this.newMessageRef.current.innerHTML='';}if(!innerText)return;var typingManager=chat.OutputTypingManager||(chat.OutputTypingManager=new OutputTypingManager(chat.id));typingManager.setTyping({'@type':'chatActionTyping'});};_this.handleKeyDown=function(e){var innerText=_this.newMessageRef.current.innerText;var innerHTML=_this.newMessageRef.current.innerHTML;_this.innerHTML=innerHTML;if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();_this.handleSubmit();}};_this.handleSendPhoto=function(file){if(!file)return;var content={'@type':'inputMessagePhoto',photo:{'@type':'inputFileBlob',name:file.name,data:file},width:file.photoWidth,height:file.photoHeight};_this.onSendInternal(content,true,function(result){var cachedMessage=MessageStore.get(result.chat_id,result.id);if(cachedMessage!=null){_this.handleSendingMessage(cachedMessage,file);}FileStore.uploadFile(result.content.photo.sizes[0].photo.id,result);});};_this.handleSendPoll=function(poll){_this.onSendInternal(poll,true,function(){});};_this.handleSendDocument=function(file){if(!file)return;var content={'@type':'inputMessageDocument',document:{'@type':'inputFileBlob',name:file.name,data:file}};_this.onSendInternal(content,true,function(result){return FileStore.uploadFile(result.content.document.document.id,result);});};_this.handlePaste=function(event){var items=(event.clipboardData||event.originalEvent.clipboardData).items;var files=[];for(var i=0;i<items.length;i++){if(items[i].kind.indexOf('file')===0){files.push(items[i].getAsFile());}}if(files.length>0){event.preventDefault();_this.files=files;_this.setState({openPasteDialog:true});return;}var plainText=event.clipboardData.getData('text/plain');if(plainText){event.preventDefault();document.execCommand('insertHTML',false,plainText);_this.innerHTML=plainText;return;}};_this.handlePasteContinue=function(){_this.handleClosePaste();var files=_this.files;if(!files)return;if(!files.length)return;files.forEach(function(file){_this.handleSendDocument(file);});_this.files=null;};_this.handleClosePaste=function(){_this.setState({openPasteDialog:false});};_this.handleSendingMessage=function(message,blob){if(message&&message.sending_state&&message.sending_state['@type']==='messageSendingStatePending'){if(message.content&&message.content['@type']==='messagePhoto'&&message.content.photo){var size=getSize(message.content.photo.sizes,PHOTO_SIZE);if(!size)return;var file=size.photo;if(file&&file.local&&file.local.is_downloading_completed&&!file.blob){file.blob=blob;FileStore.updatePhotoBlob(message.chat_id,message.id,file.id);}}}};_this.onSendInternal=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(content,clearDraft,callback){var _this$state,chatId,replyToMessageId,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$state=_this.state,chatId=_this$state.chatId,replyToMessageId=_this$state.replyToMessageId;if(chatId){_context.next=3;break;}return _context.abrupt(\"return\");case 3:if(content){_context.next=5;break;}return _context.abrupt(\"return\");case 5:_context.prev=5;_context.next=8;return ApplicationStore.invokeScheduledAction(\"clientUpdateClearHistory chatId=\".concat(chatId));case 8:_context.next=10;return TdLibController.send({'@type':'sendMessage',chat_id:chatId,reply_to_message_id:replyToMessageId,input_message_content:content});case 10:result=_context.sent;_this.setState({replyToMessageId:0},function(){if(clearDraft){var newChatDraftMessage=_this.getNewChatDraftMessage(_this.state.chatId,_this.state.replyToMessageId);_this.setChatDraftMessage(newChatDraftMessage);}});//MessageStore.set(result);\nTdLibController.send({'@type':'viewMessages',chat_id:chatId,message_ids:[result.id]});callback(result);_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](5);alert('sendMessage error '+JSON.stringify(_context.t0));case 19:case\"end\":return _context.stop();}}},_callee,null,[[5,16]]);}));return function(_x,_x2,_x3){return _ref.apply(this,arguments);};}();_this.handleEmojiSelect=function(emoji){if(!emoji)return;_this.newMessageRef.current.innerText+=emoji.native;_this.handleInput();};_this.handleInput=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var innerText,hint,t0,regex,match,t1,_hint,timestamp;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:innerText=_this.newMessageRef.current.innerText;if(!(!innerText||innerText.length>11)){_context2.next=5;break;}hint=StickerStore.hint;if(hint){TdLibController.clientUpdate({'@type':'clientUpdateLocalStickersHint',hint:null});}return _context2.abrupt(\"return\");case 5:t0=performance.now();regex=emojiRegex();match=regex.exec(innerText);t1=performance.now();console.log('Matched '+(t1-t0)+'ms',match);if(!(!match||innerText!==match[0])){_context2.next=14;break;}_hint=StickerStore.hint;if(_hint){TdLibController.clientUpdate({'@type':'clientUpdateLocalStickersHint',hint:null});}return _context2.abrupt(\"return\");case 14:timestamp=Date.now();TdLibController.send({'@type':'getStickers',emoji:match[0],limit:100}).then(function(stickers){TdLibController.clientUpdate({'@type':'clientUpdateLocalStickersHint',hint:{timestamp:timestamp,emoji:match[0],stickers:stickers}});});TdLibController.send({'@type':'searchStickers',emoji:match[0],limit:100}).then(function(stickers){TdLibController.clientUpdate({'@type':'clientUpdateRemoteStickersHint',hint:{timestamp:timestamp,emoji:match[0],stickers:stickers}});});case 17:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4){return _ref2.apply(this,arguments);};}();_this.attachDocumentRef=React.createRef();_this.attachPhotoRef=React.createRef();_this.newMessageRef=React.createRef();var _chatId=ApplicationStore.getChatId();_this.innerHTML=null;_this.state={chatId:_chatId,replyToMessageId:getChatDraftReplyToMessageId(_chatId),openPasteDialog:false};return _this;}_createClass(InputBoxControl,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){var _this$props=this.props,theme=_this$props.theme,t=_this$props.t;var _this$state2=this.state,chatId=_this$state2.chatId,replyToMessageId=_this$state2.replyToMessageId,openPasteDialog=_this$state2.openPasteDialog;if(nextProps.theme!==theme){return true;}if(nextProps.t!==t){return true;}if(nextState.chatId!==chatId){return true;}if(nextState.replyToMessageId!==replyToMessageId){return true;}if(nextState.openPasteDialog!==openPasteDialog){return true;}return false;}},{key:\"componentDidMount\",value:function componentDidMount(){//console.log('Perf componentDidMount');\nApplicationStore.on('clientUpdateChatId',this.onClientUpdateChatId);MessageStore.on('clientUpdateReply',this.onClientUpdateReply);StickerStore.on('clientUpdateStickerSend',this.onClientUpdateStickerSend);this.setInputFocus();this.setDraft();this.handleInput();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var newChatDraftMessage=this.getNewChatDraftMessage(this.state.chatId,this.state.replyToMessageId);this.setChatDraftMessage(newChatDraftMessage);ApplicationStore.removeListener('clientUpdateChatId',this.onClientUpdateChatId);MessageStore.removeListener('clientUpdateReply',this.onClientUpdateReply);StickerStore.removeListener('clientUpdateStickerSend',this.onClientUpdateStickerSend);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){//console.log('Perf componentDidUpdate');\nthis.setChatDraftMessage(snapshot);if(prevState.chatId!==this.state.chatId){this.setInputFocus();this.setDraft();this.handleInput();}}},{key:\"getSnapshotBeforeUpdate\",value:function getSnapshotBeforeUpdate(prevProps,prevState){if(prevState.chatId===this.state.chatId)return null;return this.getNewChatDraftMessage(prevState.chatId,prevState.replyToMessageId);}},{key:\"getInputText\",value:function getInputText(){var innerText=this.newMessageRef.current.innerText;var innerHTML=this.newMessageRef.current.innerHTML;if(innerText&&innerText==='\\n'&&innerHTML&&(innerHTML==='<br>'||innerHTML==='<div><br></div>')){this.newMessageRef.current.innerHTML='';}return innerText;}},{key:\"render\",value:function render(){var _this$props2=this.props,classes=_this$props2.classes,t=_this$props2.t;var _this$state3=this.state,chatId=_this$state3.chatId,replyToMessageId=_this$state3.replyToMessageId,openPasteDialog=_this$state3.openPasteDialog;var content=this.innerHTML!==null?this.innerHTML:null;return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:classNames(classes.borderColor,'inputbox')},React.createElement(InputBoxHeader,{chatId:chatId,messageId:replyToMessageId}),React.createElement(\"div\",{className:\"inputbox-wrapper\"},React.createElement(\"div\",{className:\"inputbox-left-column\"},React.createElement(React.Suspense,{fallback:React.createElement(IconButton,{className:classes.iconButton,\"aria-label\":\"Emoticon\"},React.createElement(InsertEmoticonIcon,null))},React.createElement(EmojiPickerButton,{onSelect:this.handleEmojiSelect}))),React.createElement(\"div\",{className:\"inputbox-middle-column\"},React.createElement(\"div\",{id:\"inputbox-message\",ref:this.newMessageRef,key:new Date(),placeholder:t('Message'),contentEditable:true,suppressContentEditableWarning:true,onKeyDown:this.handleKeyDown,onKeyUp:this.handleKeyUp,onPaste:this.handlePaste,onInput:this.handleInput},content)),React.createElement(\"div\",{className:\"inputbox-right-column\"},React.createElement(\"input\",{ref:this.attachDocumentRef,className:\"inputbox-attach-button\",type:\"file\",multiple:\"multiple\",onChange:this.handleAttachDocumentComplete}),React.createElement(\"input\",{ref:this.attachPhotoRef,className:\"inputbox-attach-button\",type:\"file\",multiple:\"multiple\",accept:\"image/*\",onChange:this.handleAttachPhotoComplete}),React.createElement(AttachButton,{chatId:chatId,onAttachPhoto:this.handleAttachPhoto,onAttachDocument:this.handleAttachDocument,onAttachPoll:this.handleAttachPoll}),React.createElement(IconButton,{color:\"primary\",className:classes.iconButton,\"aria-label\":\"Send\",onClick:this.handleSubmit},React.createElement(SendIcon,null))))),!isPrivateChat(chatId)&&React.createElement(CreatePollDialog,{onSend:this.handleSendPoll}),React.createElement(Dialog,{transitionDuration:0,open:openPasteDialog,onClose:this.handleClosePaste,\"aria-labelledby\":\"delete-dialog-title\"},React.createElement(DialogTitle,{id:\"delete-dialog-title\"},t('AppName')),React.createElement(DialogContent,null,React.createElement(DialogContentText,null,this.files&&this.files.length>1?'Are you sure you want to send files?':'Are you sure you want to send file?')),React.createElement(DialogActions,null,React.createElement(Button,{onClick:this.handleClosePaste,color:\"primary\"},t('Cancel')),React.createElement(Button,{onClick:this.handlePasteContinue,color:\"primary\"},t('Ok')))));}}]);return InputBoxControl;}(Component);var enhance=compose(withStyles(styles,{withTheme:true}),withTranslation());export default enhance(InputBoxControl);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnMiddle/InputBoxControl.js"],"names":["React","Component","classNames","compose","emojiRegex","withTranslation","withStyles","SendIcon","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","InsertEmoticonIcon","AttachButton","CreatePollDialog","IconButton","InputBoxHeader","OutputTypingManager","getSize","readImageSize","getChatDraft","getChatDraftReplyToMessageId","isMeChat","isPrivateChat","borderStyle","PHOTO_SIZE","MessageStore","ChatStore","ApplicationStore","FileStore","StickerStore","TdLibController","EmojiPickerButton","lazy","styles","theme","iconButton","margin","closeIconButton","InputBoxControl","props","onClientUpdateStickerSend","update","item","sticker","thumbnail","width","height","newMessageRef","current","innerText","textContent","innerHTML","content","id","thumbnailWidth","thumbnailHeight","photo","onSendInternal","result","clientUpdate","hint","onClientUpdateReply","currentChatId","state","chatId","messageId","setState","replyToMessageId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","text","setTimeout","childNodes","length","range","document","createRange","setStart","collapse","selection","window","getSelection","removeAllRanges","addRange","focus","setChatDraftMessage","chatDraftMessage","draftMessage","send","chat_id","draft_message","getNewChatDraftMessage","chat","get","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","reply_to_message_id","entities","disable_web_page_preview","clear_draft","handleSubmit","handleInput","trim","handleAttachPoll","handleAttachPhoto","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","forEach","file","handleSendPhoto","value","handleAttachDocument","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","typingManager","setTyping","handleKeyDown","e","key","shiftKey","preventDefault","name","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","sizes","handleSendPoll","poll","handlePaste","event","items","clipboardData","originalEvent","i","kind","indexOf","push","getAsFile","plainText","getData","execCommand","handlePasteContinue","handleClosePaste","message","blob","sending_state","size","local","is_downloading_completed","updatePhotoBlob","clearDraft","callback","invokeScheduledAction","input_message_content","newChatDraftMessage","message_ids","alert","JSON","stringify","handleEmojiSelect","emoji","native","t0","performance","now","regex","match","exec","t1","console","log","timestamp","Date","limit","then","stickers","createRef","getChatId","nextProps","nextState","t","on","removeListener","prevProps","prevState","snapshot","classes","borderColor","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n"]},"metadata":{},"sourceType":"module"}