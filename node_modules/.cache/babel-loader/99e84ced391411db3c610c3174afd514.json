{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import{EventEmitter}from'events';import OptionStore from'../Stores/OptionStore';import TdLibController from'../Controllers/TdLibController';var UserStore=/*#__PURE__*/function(_EventEmitter){_inherits(UserStore,_EventEmitter);function UserStore(){var _this;_classCallCheck(this,UserStore);_this=_possibleConstructorReturn(this,_getPrototypeOf(UserStore).call(this));_this.reset=function(){_this.items=new Map();_this.fullInfoItems=new Map();};_this.onUpdate=function(update){switch(update['@type']){case'updateAuthorizationState':{var authorization_state=update.authorization_state;if(!authorization_state)break;switch(authorization_state['@type']){case'authorizationStateClosed':{_this.reset();break;}}break;}case'updateUser':{_this.set(update.user);_this.emit(update['@type'],update);break;}case'updateUserFullInfo':_this.setFullInfo(update.user_id,update.user_full_info);_this.emit(update['@type'],update);break;case'updateUserStatus':{var user=_this.get(update.user_id);if(user){_this.assign(user,{status:update.status});}_this.emit(update['@type'],update);break;}default:break;}};_this.onClientUpdate=function(update){switch(update['@type']){case'clientUpdateOpenUser':{_this.emit(update['@type'],update);break;}default:break;}};_this.addTdLibListener=function(){TdLibController.addListener('update',_this.onUpdate);TdLibController.addListener('clientUpdate',_this.onClientUpdate);};_this.removeTdLibListener=function(){TdLibController.removeListener('update',_this.onUpdate);TdLibController.removeListener('clientUpdate',_this.onClientUpdate);};_this.reset();_this.addTdLibListener();_this.setMaxListeners(Infinity);return _this;}_createClass(UserStore,[{key:\"assign\",value:function assign(source1,source2){Object.assign(source1,source2);//this.set(Object.assign({}, source1, source2));\n}},{key:\"getMyId\",value:function getMyId(){var myId=OptionStore.get('my_id');if(!myId)return null;if(!myId.value)return null;return myId.value;}},{key:\"get\",value:function get(userId){return this.items.get(userId);}},{key:\"set\",value:function set(user){this.items.set(user.id,user);}},{key:\"getFullInfo\",value:function getFullInfo(id){return this.fullInfoItems.get(id);}},{key:\"setFullInfo\",value:function setFullInfo(id,fullInfo){this.fullInfoItems.set(id,fullInfo);}}]);return UserStore;}(EventEmitter);var store=new UserStore();window.user=store;export default store;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Stores/UserStore.js"],"names":["EventEmitter","OptionStore","TdLibController","UserStore","reset","items","Map","fullInfoItems","onUpdate","update","authorization_state","set","user","emit","setFullInfo","user_id","user_full_info","get","assign","status","onClientUpdate","addTdLibListener","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","source1","source2","Object","myId","value","userId","id","fullInfo","store","window"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport OptionStore from '../Stores/OptionStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass UserStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateUser': {\n                this.set(update.user);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateUserFullInfo':\n                this.setFullInfo(update.user_id, update.user_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateUserStatus': {\n                let user = this.get(update.user_id);\n                if (user) {\n                    this.assign(user, { status: update.status });\n                }\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateOpenUser': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        Object.assign(source1, source2);\n        //this.set(Object.assign({}, source1, source2));\n    }\n\n    getMyId() {\n        const myId = OptionStore.get('my_id');\n        if (!myId) return null;\n        if (!myId.value) return null;\n\n        return myId.value;\n    }\n\n    get(userId) {\n        return this.items.get(userId);\n    }\n\n    set(user) {\n        this.items.set(user.id, user);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new UserStore();\nwindow.user = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}