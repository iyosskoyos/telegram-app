{"ast":null,"code":"/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateMediaTime = update => {\n      const currentTime = update.currentTime;\n      this.setState({\n        currentTime: currentTime,\n        currentTimeString: getDurationString(Math.floor(currentTime || 0))\n      });\n    };\n\n    this.getTimeString = (currentTime, duration) => {\n      const type = 0;\n      const durationString = getDurationString(Math.floor(duration || 0));\n      const currentTimeString = getDurationString(Math.floor(currentTime || 0)); //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n      return currentTimeString;\n    };\n\n    this.state = {\n      currentTime: 0,\n      duration: 0,\n      timeString: this.getTimeString(0, 0)\n    };\n  }\n\n  componentDidMount() {\n    PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n  }\n\n  componentWillUnmount() {\n    PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n  }\n\n  render() {\n    const currentTimeString = this.state.currentTimeString;\n    return React.createElement(React.Fragment, null, currentTimeString);\n  }\n\n}\n\nexport default Time;","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/Player/Time.js"],"names":["React","getDurationString","PlayerStore","Time","Component","constructor","props","onClientUpdateMediaTime","update","currentTime","setState","currentTimeString","Math","floor","getTimeString","duration","type","durationString","state","timeString","componentDidMount","on","componentWillUnmount","removeListener","render"],"mappings":"AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,uBAlBmB,GAkBOC,MAAM,IAAI;AAAA,YACxBC,WADwB,GACRD,MADQ,CACxBC,WADwB;AAGhC,WAAKC,QAAL,CAAc;AACVD,QAAAA,WAAW,EAAEA,WADH;AAEVE,QAAAA,iBAAiB,EAAEV,iBAAiB,CAACW,IAAI,CAACC,KAAL,CAAWJ,WAAW,IAAI,CAA1B,CAAD;AAF1B,OAAd;AAIH,KAzBkB;;AAAA,SA2BnBK,aA3BmB,GA2BH,CAACL,WAAD,EAAcM,QAAd,KAA2B;AACvC,YAAMC,IAAI,GAAG,CAAb;AAEA,YAAMC,cAAc,GAAGhB,iBAAiB,CAACW,IAAI,CAACC,KAAL,CAAWE,QAAQ,IAAI,CAAvB,CAAD,CAAxC;AACA,YAAMJ,iBAAiB,GAAGV,iBAAiB,CAACW,IAAI,CAACC,KAAL,CAAWJ,WAAW,IAAI,CAA1B,CAAD,CAA3C,CAJuC,CAMvC;;AAEA,aAAOE,iBAAP;AACH,KApCkB;;AAGf,SAAKO,KAAL,GAAa;AACTT,MAAAA,WAAW,EAAE,CADJ;AAETM,MAAAA,QAAQ,EAAE,CAFD;AAGTI,MAAAA,UAAU,EAAE,KAAKL,aAAL,CAAmB,CAAnB,EAAsB,CAAtB;AAHH,KAAb;AAKH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChBlB,IAAAA,WAAW,CAACmB,EAAZ,CAAe,uBAAf,EAAwC,KAAKd,uBAA7C;AACH;;AAEDe,EAAAA,oBAAoB,GAAG;AACnBpB,IAAAA,WAAW,CAACqB,cAAZ,CAA2B,uBAA3B,EAAoD,KAAKhB,uBAAzD;AACH;;AAsBDiB,EAAAA,MAAM,GAAG;AAAA,UACGb,iBADH,GACyB,KAAKO,KAD9B,CACGP,iBADH;AAGL,WAAO,0CAAGA,iBAAH,CAAP;AACH;;AA3C8B;;AA8CnC,eAAeR,IAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n"]},"metadata":{},"sourceType":"module"}