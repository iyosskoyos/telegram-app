{"ast":null,"code":"import _defineProperty from \"/home/chilly/Projects/Capacitor/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnMiddle/HeaderCommand.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => _objectSpread({\n  buttonLeft: {\n    margin: '14px 0 14px 14px',\n    minWidth: '100px'\n  },\n  buttonRight: {\n    margin: '14px 14px 14px 0',\n    minWidth: '100px'\n  }\n}, borderStyle(theme));\n\nclass HeaderCommand extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = () => {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateClearSelection'\n      });\n    };\n\n    this.handleDelete = () => {\n      let canBeDeletedForAllUsers = true;\n\n      for (let _ref of MessageStore.selectedItems.values()) {\n        let chatId = _ref.chatId;\n        let messageId = _ref.messageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        if (!message) {\n          canBeDeletedForAllUsers = false;\n          break;\n        }\n\n        if (!message.can_be_deleted_for_all_users) {\n          canBeDeletedForAllUsers = false;\n          break;\n        }\n      }\n\n      this.setState({\n        openDeleteDialog: true,\n        canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n        revoke: canBeDeletedForAllUsers\n      });\n    };\n\n    this.handleDeleteContinue = () => {\n      const revoke = this.state.revoke;\n      let id;\n      const messageIds = [];\n\n      for (let _ref2 of MessageStore.selectedItems.values()) {\n        let chatId = _ref2.chatId;\n        let messageId = _ref2.messageId;\n        id = chatId;\n        messageIds.push(messageId);\n      }\n\n      this.handleCancel();\n      TdLibController.send({\n        '@type': 'deleteMessages',\n        chat_id: id,\n        message_ids: messageIds,\n        revoke: revoke\n      });\n    };\n\n    this.handleRevokeChange = () => {\n      this.setState({\n        revoke: !this.state.revoke\n      });\n    };\n\n    this.handleCloseDelete = () => {\n      this.setState({\n        openDeleteDialog: false\n      });\n    };\n\n    this.handleForward = () => {\n      let id;\n      const messageIds = [];\n\n      for (let _ref3 of MessageStore.selectedItems.values()) {\n        let chatId = _ref3.chatId;\n        let messageId = _ref3.messageId;\n        id = chatId;\n        messageIds.push(messageId);\n      }\n\n      this.handleCancel();\n      forwardMessages(id, messageIds);\n    };\n\n    this.handleReply = () => {\n      if (MessageStore.selectedItems.size !== 1) return;\n      const _MessageStore$selecte = MessageStore.selectedItems.values().next().value,\n            chatId = _MessageStore$selecte.chatId,\n            messageId = _MessageStore$selecte.messageId;\n      this.handleCancel();\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateReply',\n        chatId: chatId,\n        messageId: messageId\n      });\n    };\n\n    this.state = {\n      openDeleteDialog: false\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          t = _this$props.t,\n          count = _this$props.count;\n    const _this$state = this.state,\n          openDeleteDialog = _this$state.openDeleteDialog,\n          canBeDeletedForAllUsers = _this$state.canBeDeletedForAllUsers,\n          revoke = _this$state.revoke;\n    const chatId = ApplicationStore.getChatId();\n    let canBeDeleted = true;\n\n    for (let _ref4 of MessageStore.selectedItems.values()) {\n      let chatId = _ref4.chatId;\n      let messageId = _ref4.messageId;\n      const message = MessageStore.get(chatId, messageId);\n\n      if (!message) {\n        canBeDeleted = false;\n        break;\n      }\n\n      if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n        canBeDeleted = false;\n        break;\n      }\n    }\n\n    let canBeForwarded = true;\n\n    for (let _ref5 of MessageStore.selectedItems.values()) {\n      let chatId = _ref5.chatId;\n      let messageId = _ref5.messageId;\n      const message = MessageStore.get(chatId, messageId);\n\n      if (!message) {\n        canBeForwarded = false;\n        break;\n      }\n\n      if (!message.can_be_forwarded) {\n        canBeForwarded = false;\n        break;\n      }\n    }\n\n    const canBeReplied = count === 1 && canSendMessages(chatId);\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: classNames(classes.borderColor, 'header-command'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, canBeForwarded && React.createElement(Button, {\n      color: \"primary\",\n      className: classes.buttonLeft,\n      onClick: this.handleForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, count <= 1 ? t('Forward') : \"\".concat(t('Forward'), \" \").concat(count)), canBeDeleted && React.createElement(Button, {\n      color: \"primary\",\n      className: classes.buttonLeft,\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, count <= 1 ? t('Delete') : \"\".concat(t('Delete'), \" \").concat(count)), canBeReplied && React.createElement(Button, {\n      color: \"primary\",\n      className: classes.buttonLeft,\n      onClick: this.handleReply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, t('Reply')), React.createElement(\"div\", {\n      className: \"header-command-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      className: classes.buttonRight,\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, t('Cancel'))), React.createElement(Dialog, {\n      transitionDuration: 0,\n      open: openDeleteDialog,\n      onClose: this.handleCloseDelete,\n      \"aria-labelledby\": \"delete-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"delete-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Confirm\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, count === 1 ? 'Are you sure you want to delete 1 message?' : \"Are you sure you want to delete \".concat(count, \" messages?\")), canBeDeletedForAllUsers && React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: revoke,\n        onChange: this.handleRevokeChange,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }),\n      label: isPrivateChat(chatId) ? \"Delete for \".concat(getChatShortTitle(chatId)) : 'Delete for all',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseDelete,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleDeleteContinue,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Ok\"))));\n  }\n\n}\n\nHeaderCommand.propTypes = {\n  count: PropTypes.number\n};\nconst enhance = compose(withStyles(styles, {\n  withTheme: true\n}), withTranslation());\nexport default enhance(HeaderCommand);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnMiddle/HeaderCommand.js"],"names":["React","PropTypes","classNames","compose","withTranslation","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControlLabel","Checkbox","withStyles","borderStyle","canSendMessages","getChatShortTitle","isPrivateChat","forwardMessages","MessageStore","ApplicationStore","TdLibController","styles","theme","buttonLeft","margin","minWidth","buttonRight","HeaderCommand","Component","constructor","props","handleCancel","clientUpdate","handleDelete","canBeDeletedForAllUsers","selectedItems","values","chatId","messageId","message","get","can_be_deleted_for_all_users","setState","openDeleteDialog","revoke","handleDeleteContinue","state","id","messageIds","push","send","chat_id","message_ids","handleRevokeChange","handleCloseDelete","handleForward","handleReply","size","next","value","render","classes","t","count","getChatId","canBeDeleted","can_be_deleted_only_for_self","canBeForwarded","can_be_forwarded","canBeReplied","borderColor","propTypes","number","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n"]},"metadata":{},"sourceType":"module"}