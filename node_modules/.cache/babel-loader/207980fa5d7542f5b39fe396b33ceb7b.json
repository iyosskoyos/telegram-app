{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React,{Component}from'react';import classNames from'classnames';import ChatInfoDialog from'../Popup/ChatInfoDialog';import Footer from'./Footer';import Header from'./Header';import HeaderPlayer from'../Player/HeaderPlayer';import MessagesList from'./MessagesList';import PinnedMessage from'./PinnedMessage';import StickerSetDialog from'../Popup/StickerSetDialog';import ApplicationStore from'../../Stores/ApplicationStore';import'./DialogDetails.css';var DialogDetails=/*#__PURE__*/function(_Component){_inherits(DialogDetails,_Component);function DialogDetails(props){var _this;_classCallCheck(this,DialogDetails);_this=_possibleConstructorReturn(this,_getPrototypeOf(DialogDetails).call(this,props));_this.onUpdateChatDetailsVisibility=function(update){_this.forceUpdate();};_this.onClientUpdateChatId=function(update){_this.setState({chatId:update.nextChatId,messageId:update.nextMessageId});};_this.scrollToBottom=function(){_this.messagesList.scrollToBottom();};_this.scrollToStart=function(){_this.messagesList.scrollToStart();};_this.scrollToMessage=function(){_this.messagesList.scrollToMessage();};_this.state={chatId:ApplicationStore.getChatId(),messageId:ApplicationStore.getMessageId(),selectedCount:0};return _this;}_createClass(DialogDetails,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextState.chatId!==this.state.chatId){return true;}if(nextState.messageId!==this.state.messageId){return true;}if(nextState.selectedCount!==this.state.selectedItems){return true;}return false;}},{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('clientUpdateChatDetailsVisibility',this.onUpdateChatDetailsVisibility);ApplicationStore.on('clientUpdateChatId',this.onClientUpdateChatId);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('clientUpdateChatDetailsVisibility',this.onUpdateChatDetailsVisibility);ApplicationStore.removeListener('clientUpdateChatId',this.onClientUpdateChatId);}},{key:\"render\",value:function render(){var _this2=this;/*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/var _this$state=this.state,chatId=_this$state.chatId,messageId=_this$state.messageId,selectedCount=_this$state.selectedCount;var isChatDetailsVisible=ApplicationStore.isChatDetailsVisible;return React.createElement(\"div\",{className:classNames('dialog-details',{'dialog-details-third-column':isChatDetailsVisible})},React.createElement(HeaderPlayer,null),React.createElement(Header,{chatId:chatId}),React.createElement(MessagesList,{innerRef:function innerRef(ref){return _this2.messagesList=ref;},chatId:chatId,messageId:messageId}),React.createElement(Footer,{chatId:chatId}),React.createElement(StickerSetDialog,null),React.createElement(ChatInfoDialog,null));}}]);return DialogDetails;}(Component);export default DialogDetails;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/ColumnMiddle/DialogDetails.js"],"names":["React","Component","classNames","ChatInfoDialog","Footer","Header","HeaderPlayer","MessagesList","PinnedMessage","StickerSetDialog","ApplicationStore","DialogDetails","props","onUpdateChatDetailsVisibility","update","forceUpdate","onClientUpdateChatId","setState","chatId","nextChatId","messageId","nextMessageId","scrollToBottom","messagesList","scrollToStart","scrollToMessage","state","getChatId","getMessageId","selectedCount","nextProps","nextState","selectedItems","on","removeListener","isChatDetailsVisible","ref"],"mappings":"wkBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,CACA,MAAO,qBAAP,C,GAEMC,CAAAA,a,uEACF,uBAAYC,KAAZ,CAAmB,+CACf,+EAAMA,KAAN,GADe,MAkCnBC,6BAlCmB,CAkCa,SAAAC,MAAM,CAAI,CACtC,MAAKC,WAAL,GACH,CApCkB,OAsCnBC,oBAtCmB,CAsCI,SAAAF,MAAM,CAAI,CAC7B,MAAKG,QAAL,CAAc,CACVC,MAAM,CAAEJ,MAAM,CAACK,UADL,CAEVC,SAAS,CAAEN,MAAM,CAACO,aAFR,CAAd,EAIH,CA3CkB,OA6CnBC,cA7CmB,CA6CF,UAAM,CACnB,MAAKC,YAAL,CAAkBD,cAAlB,GACH,CA/CkB,OAiDnBE,aAjDmB,CAiDH,UAAM,CAClB,MAAKD,YAAL,CAAkBC,aAAlB,GACH,CAnDkB,OAqDnBC,eArDmB,CAqDD,UAAM,CACpB,MAAKF,YAAL,CAAkBE,eAAlB,GACH,CAvDkB,CAGf,MAAKC,KAAL,CAAa,CACTR,MAAM,CAAER,gBAAgB,CAACiB,SAAjB,EADC,CAETP,SAAS,CAAEV,gBAAgB,CAACkB,YAAjB,EAFF,CAGTC,aAAa,CAAE,CAHN,CAAb,CAHe,aAQlB,C,8FAEqBC,S,CAAWC,S,CAAW,CACxC,GAAIA,SAAS,CAACb,MAAV,GAAqB,KAAKQ,KAAL,CAAWR,MAApC,CAA4C,CACxC,MAAO,KAAP,CACH,CACD,GAAIa,SAAS,CAACX,SAAV,GAAwB,KAAKM,KAAL,CAAWN,SAAvC,CAAkD,CAC9C,MAAO,KAAP,CACH,CACD,GAAIW,SAAS,CAACF,aAAV,GAA4B,KAAKH,KAAL,CAAWM,aAA3C,CAA0D,CACtD,MAAO,KAAP,CACH,CAED,MAAO,MAAP,CACH,C,6DAEmB,CAChBtB,gBAAgB,CAACuB,EAAjB,CAAoB,mCAApB,CAAyD,KAAKpB,6BAA9D,EACAH,gBAAgB,CAACuB,EAAjB,CAAoB,oBAApB,CAA0C,KAAKjB,oBAA/C,EACH,C,mEAEsB,CACnBN,gBAAgB,CAACwB,cAAjB,CAAgC,mCAAhC,CAAqE,KAAKrB,6BAA1E,EACAH,gBAAgB,CAACwB,cAAjB,CAAgC,oBAAhC,CAAsD,KAAKlB,oBAA3D,EACH,C,uCAyBQ,iBACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aADK,gBAiCwC,KAAKU,KAjC7C,CAiCGR,MAjCH,aAiCGA,MAjCH,CAiCWE,SAjCX,aAiCWA,SAjCX,CAiCsBS,aAjCtB,aAiCsBA,aAjCtB,IAkCGM,CAAAA,oBAlCH,CAkC4BzB,gBAlC5B,CAkCGyB,oBAlCH,CAoCL,MACI,4BAAK,SAAS,CAAEjC,UAAU,CAAC,gBAAD,CAAmB,CAAE,8BAA+BiC,oBAAjC,CAAnB,CAA1B,EACI,oBAAC,YAAD,MADJ,CAEI,oBAAC,MAAD,EAAQ,MAAM,CAAEjB,MAAhB,EAFJ,CAGI,oBAAC,YAAD,EAAc,QAAQ,CAAE,kBAAAkB,GAAG,QAAK,CAAA,MAAI,CAACb,YAAL,CAAoBa,GAAzB,EAA3B,CAA0D,MAAM,CAAElB,MAAlE,CAA0E,SAAS,CAAEE,SAArF,EAHJ,CAII,oBAAC,MAAD,EAAQ,MAAM,CAAEF,MAAhB,EAJJ,CAKI,oBAAC,gBAAD,MALJ,CAMI,oBAAC,cAAD,MANJ,CADJ,CAUH,C,2BAxGuBjB,S,EA2G5B,cAAeU,CAAAA,aAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n"]},"metadata":{},"sourceType":"module"}