{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import IconButton from'@material-ui/core/IconButton';import MenuIcon from'@material-ui/icons/Menu';import Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import{compose}from'recompose';import ThemePicker from'./ThemePicker';import LanguagePicker from'./LanguagePicker';import{update}from'../../registerServiceWorker';import{isAuthorizationReady}from'../../Utils/Common';import ApplicationStore from'../../Stores/ApplicationStore';import{WASM_FILE_HASH,WASM_FILE_NAME}from'../../Constants';var styles={menuIconButton:{margin:'8px -2px 8px 12px'},searchIconButton:{margin:'8px 12px 8px 0'}};var menuAnchorOrigin={vertical:'bottom',horizontal:'left'};var MainMenuButton=/*#__PURE__*/function(_React$Component){_inherits(MainMenuButton,_React$Component);function MainMenuButton(props){var _this;_classCallCheck(this,MainMenuButton);_this=_possibleConstructorReturn(this,_getPrototypeOf(MainMenuButton).call(this,props));_this.onUpdateAuthorizationState=function(update){_this.setState({authorizationState:update.authorization_state});};_this.handleMenuOpen=function(event){var authorizationState=_this.state.authorizationState;if(!isAuthorizationReady(authorizationState))return;_this.setState({anchorEl:event.currentTarget});};_this.handleMenuClose=function(){_this.setState({anchorEl:null});};_this.handleLogOut=function(){_this.handleMenuClose();_this.props.onLogOut();};_this.handleCheckUpdates=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.handleMenuClose();_context.next=3;return fetch(\"\".concat(WASM_FILE_NAME,\"?_sw-precache=\").concat(WASM_FILE_HASH));case 3:result=_context.sent;console.log('wasm result',result);//await update();\ncase 5:case\"end\":return _context.stop();}}},_callee);}));_this.handleAppearance=function(event){_this.handleMenuClose();_this.themePicker.open();};_this.handleLanguage=function(event){_this.handleMenuClose();_this.languagePicker.open();};_this.setRef=function(ref){console.log(_assertThisInitialized(_this));_this.languagePicker=ref;};_this.state={authorizationState:ApplicationStore.getAuthorizationState(),anchorEl:null};return _this;}_createClass(MainMenuButton,[{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('updateAuthorizationState',this.onUpdateAuthorizationState);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('updateAuthorizationState',this.onUpdateAuthorizationState);}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,classes=_this$props.classes,t=_this$props.t;var _this$state=this.state,anchorEl=_this$state.anchorEl,authorizationState=_this$state.authorizationState;var mainMenuControl=isAuthorizationReady(authorizationState)?React.createElement(React.Fragment,null,React.createElement(Menu,{id:\"main-menu\",anchorEl:anchorEl,open:Boolean(anchorEl),onClose:this.handleMenuClose,getContentAnchorEl:null,disableAutoFocusItem:true,disableRestoreFocus:true,anchorOrigin:menuAnchorOrigin},React.createElement(MenuItem,{onClick:this.handleCheckUpdates},t('UpdateTelegram')),React.createElement(MenuItem,{onClick:this.handleAppearance},t('Appearance')),React.createElement(MenuItem,{onClick:this.handleLanguage},t('Language')),React.createElement(MenuItem,{onClick:this.handleLogOut},t('LogOut')))):null;return React.createElement(React.Fragment,null,React.createElement(IconButton,{\"aria-owns\":anchorEl?'simple-menu':null,\"aria-haspopup\":\"true\",className:classes.menuIconButton,\"aria-label\":\"Menu\",onClick:this.handleMenuOpen},React.createElement(MenuIcon,null)),mainMenuControl,React.createElement(ThemePicker,{innerRef:function innerRef(ref){return _this2.themePicker=ref;}}),React.createElement(LanguagePicker,{ref:function ref(_ref2){return _this2.languagePicker=_ref2;}}));}}]);return MainMenuButton;}(React.Component);var enhance=compose(withTranslation(),withStyles(styles,{withTheme:true}));export default enhance(MainMenuButton);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnLeft/MainMenuButton.js"],"names":["React","IconButton","MenuIcon","Menu","MenuItem","withStyles","withTranslation","compose","ThemePicker","LanguagePicker","update","isAuthorizationReady","ApplicationStore","WASM_FILE_HASH","WASM_FILE_NAME","styles","menuIconButton","margin","searchIconButton","menuAnchorOrigin","vertical","horizontal","MainMenuButton","props","onUpdateAuthorizationState","setState","authorizationState","authorization_state","handleMenuOpen","event","state","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","result","console","log","handleAppearance","themePicker","open","handleLanguage","languagePicker","setRef","ref","getAuthorizationState","on","removeListener","classes","t","mainMenuControl","Boolean","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n"]},"metadata":{},"sourceType":"module"}