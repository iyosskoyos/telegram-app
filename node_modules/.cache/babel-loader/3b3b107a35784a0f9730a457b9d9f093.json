{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React,{Component}from'react';import classNames from'classnames';import{compose}from'recompose';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import MenuItem from'@material-ui/core/MenuItem';import MenuList from'@material-ui/core/MenuList';import Popover from'@material-ui/core/Popover';import ChatTile from'./ChatTile';import DialogContent from'./DialogContent';import DialogBadge from'./DialogBadge';import DialogTitle from'./DialogTitle';import DialogMeta from'./DialogMeta';import{isChatMuted,isChatSecret,isChatUnread}from'../../Utils/Chat';import{toggleChatIsMarkedAsUnread,toggleChatIsPinned,toggleChatNotificationSettings}from'../../Actions/Chat';import{openChat}from'../../Actions/Client';import{viewMessages}from'../../Actions/Message';import ApplicationStore from'../../Stores/ApplicationStore';import ChatStore from'../../Stores/ChatStore';import OptionStore from'../../Stores/OptionStore';import TdLibController from'../../Controllers/TdLibController';import'./Dialog.css';var styles=function styles(theme){return{menuListRoot:{minWidth:150},statusRoot:{position:'absolute',right:1,bottom:1,zIndex:1},statusIcon:{},iconIndicator:{background:'#80d066'},verifiedIcon:{color:theme.palette.primary.main},unreadIcon:{background:theme.palette.primary.light},dialogActive:{color:'#fff',//theme.palette.primary.contrastText,\nbackgroundColor:theme.palette.primary.main,borderRadius:8,cursor:'pointer',margin:'0 12px','& $verifiedIcon':{color:'#fff'},'& $unreadIcon':{background:'#ffffff77'},'& $statusRoot':{background:theme.palette.primary.main},'& $iconIndicator':{background:'#ffffff'}},dialog:{borderRadius:8,cursor:'pointer',margin:'0 12px','&:hover':{backgroundColor:theme.palette.primary.main+'22','& $statusRoot':{background:theme.palette.type==='dark'?theme.palette.background.default:'#FFFFFF'},'& $statusIcon':{background:theme.palette.primary.main+'22'}}}};};var Dialog=/*#__PURE__*/function(_Component){_inherits(Dialog,_Component);function Dialog(props){var _this;_classCallCheck(this,Dialog);_this=_possibleConstructorReturn(this,_getPrototypeOf(Dialog).call(this,props));_this.onClientUpdateChatId=function(update){var chatId=_this.props.chatId;if(chatId===update.previousChatId||chatId===update.nextChatId){_this.forceUpdate();}};_this.handleSelect=function(event){if(event.button===0){openChat(_this.props.chatId);}};_this.handleContextMenu=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var chatId,contextMenu,left,top,chat,is_pinned,canTogglePin;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(event){event.preventDefault();event.stopPropagation();}chatId=_this.props.chatId;contextMenu=_this.state.contextMenu;if(!contextMenu){_context.next=7;break;}_this.setState({contextMenu:false});_context.next=18;break;case 7:left=event.clientX;top=event.clientY;chat=ChatStore.get(chatId);is_pinned=chat.is_pinned;_context.next=13;return _this.canPinChats(chatId);case 13:_context.t0=_context.sent;if(_context.t0){_context.next=16;break;}_context.t0=is_pinned;case 16:canTogglePin=_context.t0;_this.setState({contextMenu:true,canTogglePin:canTogglePin,left:left,top:top});case 18:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.handleCloseContextMenu=function(event){if(event){event.stopPropagation();}_this.setState({contextMenu:false});};_this.handleMute=function(event){_this.handleCloseContextMenu(event);var chatId=_this.props.chatId;toggleChatNotificationSettings(chatId,!isChatMuted(chatId));};_this.canPinChats=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(chatId){var chat,pinnedSumMaxOption,isSecret,chats,pinnedSum;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:chat=ChatStore.get(chatId);if(chat){_context2.next=3;break;}return _context2.abrupt(\"return\",false);case 3:pinnedSumMaxOption=OptionStore.get('pinned_chat_count_max');if(pinnedSumMaxOption){_context2.next=6;break;}return _context2.abrupt(\"return\",false);case 6:isSecret=isChatSecret(chatId);_context2.next=9;return TdLibController.send({'@type':'getChats',offset_order:'9223372036854775807',offset_chat_id:0,limit:15});case 9:chats=_context2.sent;pinnedSum=chats.chat_ids.reduce(function(x,id){if(isChatSecret(id)!==isSecret)return x;var chat=ChatStore.get(id);if(!chat)return x;return x+(chat.is_pinned?1:0);},0);return _context2.abrupt(\"return\",pinnedSum<pinnedSumMaxOption.value);case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.handlePin=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event){var chatId,chat,is_pinned;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_this.handleCloseContextMenu(event);chatId=_this.props.chatId;chat=ChatStore.get(chatId);if(chat){_context3.next=5;break;}return _context3.abrupt(\"return\");case 5:is_pinned=chat.is_pinned;if(!(!is_pinned&&!_this.canPinChats(chatId))){_context3.next=8;break;}return _context3.abrupt(\"return\");case 8:toggleChatIsPinned(chatId,!is_pinned);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();_this.getViewInfoTitle=function(){var _this$props=_this.props,chatId=_this$props.chatId,t=_this$props.t;var chat=ChatStore.get(chatId);if(!chat)return;var type=chat.type;switch(type['@type']){case'chatTypeBasicGroup':{return t('ViewGroupInfo');}case'chatTypePrivate':case'chatTypeSecret':{return t('ViewProfile');}case'chatTypeSupergroup':{if(type.is_channel){return t('ViewChannelInfo');}return t('ViewGroupInfo');}}};_this.handleViewInfo=function(event){_this.handleCloseContextMenu(event);var chatId=_this.props.chatId;openChat(chatId,null,true);};_this.handleRead=function(event){_this.handleCloseContextMenu(event);var chatId=_this.props.chatId;var isUnread=isChatUnread(chatId);if(isUnread){var chat=ChatStore.get(chatId);if(!chat)return;var is_marked_as_unread=chat.is_marked_as_unread,last_message=chat.last_message,unread_count=chat.unread_count;if(unread_count>0&&last_message){viewMessages(chatId,[last_message.id],true);}else if(is_marked_as_unread){toggleChatIsMarkedAsUnread(chatId,false);}}else{toggleChatIsMarkedAsUnread(chatId,true);}};_this.dialog=React.createRef();var _chat=ChatStore.get(_this.props.chatId);_this.state={chat:_chat,contextMenu:false,left:0,top:0};return _this;}_createClass(Dialog,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextProps.chatId!==this.props.chatId){return true;}if(nextProps.t!==this.props.t){return true;}if(nextProps.theme!==this.props.theme){return true;}if(nextProps.hidden!==this.props.hidden){return true;}if(nextState.contextMenu!==this.state.contextMenu){return true;}return false;}},{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('clientUpdateChatId',this.onClientUpdateChatId);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('clientUpdateChatId',this.onClientUpdateChatId);}},{key:\"render\",value:function render(){var _this$props2=this.props,classes=_this$props2.classes,chatId=_this$props2.chatId,showSavedMessages=_this$props2.showSavedMessages,hidden=_this$props2.hidden,t=_this$props2.t;var _this$state=this.state,contextMenu=_this$state.contextMenu,left=_this$state.left,top=_this$state.top,canTogglePin=_this$state.canTogglePin;if(hidden)return null;var chat=ChatStore.get(chatId);var is_pinned=chat.is_pinned;var currentChatId=ApplicationStore.getChatId();var isSelected=currentChatId===chatId;var isMuted=isChatMuted(chatId);var isUnread=isChatUnread(chatId);return React.createElement(\"div\",{ref:this.dialog,className:classNames(isSelected?classes.dialogActive:classes.dialog,isSelected?'dialog-active':'dialog'),onMouseDown:this.handleSelect,onContextMenu:this.handleContextMenu},React.createElement(\"div\",{className:\"dialog-wrapper\"},React.createElement(ChatTile,{chatId:chatId,showSavedMessages:showSavedMessages,showOnline:true,classes:{statusRoot:classes.statusRoot,statusIcon:classes.statusIcon,iconIndicator:classes.iconIndicator}}),React.createElement(\"div\",{className:\"dialog-inner-wrapper\"},React.createElement(\"div\",{className:\"tile-first-row\"},React.createElement(DialogTitle,{chatId:chatId,classes:{verifiedIcon:classes.verifiedIcon}}),React.createElement(DialogMeta,{chatId:chatId})),React.createElement(\"div\",{className:\"tile-second-row\"},React.createElement(DialogContent,{chatId:chatId}),React.createElement(DialogBadge,{chatId:chatId,classes:{unreadIcon:classes.unreadIcon}})))),React.createElement(Popover,{open:contextMenu,onClose:this.handleCloseContextMenu,anchorReference:\"anchorPosition\",anchorPosition:{top:top,left:left},anchorOrigin:{vertical:'bottom',horizontal:'right'},transformOrigin:{vertical:'top',horizontal:'left'},onMouseDown:function onMouseDown(e){return e.stopPropagation();}},React.createElement(MenuList,{classes:{root:classes.menuListRoot},onClick:function onClick(e){return e.stopPropagation();}},canTogglePin&&React.createElement(MenuItem,{onClick:this.handlePin},is_pinned?t('UnpinFromTop'):t('PinToTop')),React.createElement(MenuItem,{onClick:this.handleViewInfo},this.getViewInfoTitle()),React.createElement(MenuItem,{onClick:this.handleMute},isMuted?t('Unmute'):t('Mute')),React.createElement(MenuItem,{onClick:this.handleRead},isUnread?t('MarkAsRead'):t('MarkAsUnread')))));}}]);return Dialog;}(Component);Dialog.defaultProps={hidden:false,showSavedMessages:true};var enhance=compose(withStyles(styles,{withTheme:true}),withTranslation());export default enhance(Dialog);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/Dialog.js"],"names":["React","Component","classNames","compose","withStyles","withTranslation","MenuItem","MenuList","Popover","ChatTile","DialogContent","DialogBadge","DialogTitle","DialogMeta","isChatMuted","isChatSecret","isChatUnread","toggleChatIsMarkedAsUnread","toggleChatIsPinned","toggleChatNotificationSettings","openChat","viewMessages","ApplicationStore","ChatStore","OptionStore","TdLibController","styles","theme","menuListRoot","minWidth","statusRoot","position","right","bottom","zIndex","statusIcon","iconIndicator","background","verifiedIcon","color","palette","primary","main","unreadIcon","light","dialogActive","backgroundColor","borderRadius","cursor","margin","dialog","type","default","Dialog","props","onClientUpdateChatId","update","chatId","previousChatId","nextChatId","forceUpdate","handleSelect","event","button","handleContextMenu","preventDefault","stopPropagation","contextMenu","state","setState","left","clientX","top","clientY","chat","get","is_pinned","canPinChats","canTogglePin","handleCloseContextMenu","handleMute","pinnedSumMaxOption","isSecret","send","offset_order","offset_chat_id","limit","chats","pinnedSum","chat_ids","reduce","x","id","value","handlePin","getViewInfoTitle","t","is_channel","handleViewInfo","handleRead","isUnread","is_marked_as_unread","last_message","unread_count","createRef","nextProps","nextState","hidden","on","removeListener","classes","showSavedMessages","currentChatId","getChatId","isSelected","isMuted","vertical","horizontal","e","root","defaultProps","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport { isChatMuted, isChatSecret, isChatUnread } from '../../Utils/Chat';\nimport { toggleChatIsMarkedAsUnread, toggleChatIsPinned, toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nconst styles = theme => ({\n    menuListRoot: {\n        minWidth: 150\n    },\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    iconIndicator: {\n        background: '#80d066'\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    unreadIcon: {\n        background: theme.palette.primary.light\n    },\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $verifiedIcon': {\n            color: '#fff'\n        },\n        '& $unreadIcon': {\n            background: '#ffffff77'\n        },\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        },\n        '& $iconIndicator': {\n            background: '#ffffff'\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass Dialog extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== this.state.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const pinnedSumMaxOption = OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 15\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n            if (!chat) return x;\n\n            return x + (chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden, t } = this.props;\n        const { contextMenu, left, top, canTogglePin } = this.state;\n\n        if (hidden) return null;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <ChatTile\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{\n                            statusRoot: classes.statusRoot,\n                            statusIcon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} classes={{ unreadIcon: classes.unreadIcon }} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? t('UnpinFromTop') : t('PinToTop')}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>{this.getViewInfoTitle()}</MenuItem>\n                        <MenuItem onClick={this.handleMute}>{isMuted ? t('Unmute') : t('Mute')}</MenuItem>\n                        <MenuItem onClick={this.handleRead}>{isUnread ? t('MarkAsRead') : t('MarkAsUnread')}</MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Dialog);\n"]},"metadata":{},"sourceType":"module"}