{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/InstantView/Blocks/ErrorHandler.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo\n    });\n  }\n\n  render() {\n    const children = this.props.children;\n    const _this$state = this.state,\n          error = _this$state.error,\n          errorInfo = _this$state.errorInfo;\n\n    if (error || errorInfo) {\n      return React.createElement(\"div\", {\n        className: \"error-handler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"\".concat(error.name, \": \").concat(error.message), errorInfo.componentStack)));\n    }\n\n    return children;\n  }\n\n}\n\nexport default ErrorHandler;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/InstantView/Blocks/ErrorHandler.js"],"names":["React","ErrorHandler","Component","state","error","errorInfo","componentDidCatch","setState","render","children","props","name","message","componentStack"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAD+B;AAAA;;AAMvCC,EAAAA,iBAAiB,CAACF,KAAD,EAAQC,SAAR,EAAmB;AAChC,SAAKE,QAAL,CAAc;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAd;AACH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACGC,QADH,GACgB,KAAKC,KADrB,CACGD,QADH;AAAA,wBAEwB,KAAKN,KAF7B;AAAA,UAEGC,KAFH,eAEGA,KAFH;AAAA,UAEUC,SAFV,eAEUA,SAFV;;AAGL,QAAID,KAAK,IAAIC,SAAb,EAAwB;AACpB,aACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQD,KAAK,CAACO,IADd,eACuBP,KAAK,CAACQ,OAD7B,GAEKP,SAAS,CAACQ,cAFf,CADJ,CADJ,CADJ;AAUH;;AAED,WAAOJ,QAAP;AACH;;AA3BsC;;AA8B3C,eAAeR,YAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n"]},"metadata":{},"sourceType":"module"}