{"ast":null,"code":"import _defineProperty from \"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Message/Media/Game.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => _objectSpread({}, accentStyles(theme));\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getContent = () => {\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            messageId = _this$props.messageId,\n            game = _this$props.game,\n            size = _this$props.size,\n            displaySize = _this$props.displaySize,\n            openMedia = _this$props.openMedia;\n      if (!game) return null;\n      const photo = game.photo,\n            animation = game.animation;\n\n      if (animation) {\n        const animationSrc = getSrc(animation.animation);\n\n        if (animationSrc || animation.thumbnail) {\n          return React.createElement(Animation, {\n            chatId: chatId,\n            messageId: messageId,\n            animation: animation,\n            openMedia: openMedia,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n        }\n      }\n\n      if (photo) {\n        let style = {\n          width: 0,\n          height: 0\n        };\n        const photoSize = getSize(photo.sizes, size);\n\n        if (photoSize) {\n          const fitPhotoSize = getFitSize(photoSize, displaySize);\n\n          if (fitPhotoSize) {\n            style.width = fitPhotoSize.width;\n            style.height = fitPhotoSize.height;\n          }\n        }\n\n        return React.createElement(Photo, {\n          chatId: chatId,\n          messageId: messageId,\n          photo: photo,\n          style: style,\n          openMedia: openMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          classes = _this$props2.classes,\n          game = _this$props2.game;\n    if (!game) return null;\n    const title = game.title,\n          text = game.text,\n          description = game.description;\n    const formattedText = getFormattedText(text);\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('game-border', classes.accentBackgroundLight),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"game-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, title && React.createElement(\"div\", {\n      className: classNames('game-title', classes.accentColorMain),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, title), formattedText && React.createElement(\"div\", {\n      className: \"game-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, formattedText), description && React.createElement(\"div\", {\n      className: \"game-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, description), this.getContent()));\n  }\n\n}\n\nGame.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  game: PropTypes.object.isRequired,\n  openMedia: PropTypes.func.isRequired,\n  size: PropTypes.number,\n  displaySize: PropTypes.number\n};\nGame.defaultProps = {\n  size: PHOTO_SIZE,\n  displaySize: PHOTO_DISPLAY_SIZE\n};\nexport default withStyles(styles)(Game);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Message/Media/Game.js"],"names":["React","PropTypes","classNames","withStyles","Photo","Animation","accentStyles","getFormattedText","getFitSize","getSize","getSrc","PHOTO_DISPLAY_SIZE","PHOTO_SIZE","FileStore","styles","theme","Game","Component","getContent","props","chatId","messageId","game","size","displaySize","openMedia","photo","animation","animationSrc","thumbnail","style","width","height","photoSize","sizes","fitPhotoSize","render","classes","title","text","description","formattedText","accentBackgroundLight","accentColorMain","propTypes","number","isRequired","object","func","defaultProps"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,uBAApC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,kBAAT,EAA6BC,UAA7B,QAA+C,oBAA/C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,YAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,sBACbT,YAAY,CAACS,KAAD,CADC,CAApB;;AAIA,MAAMC,IAAN,SAAmBhB,KAAK,CAACiB,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAC/BC,UAD+B,GAClB,MAAM;AAAA,0BACmD,KAAKC,KADxD;AAAA,YACPC,MADO,eACPA,MADO;AAAA,YACCC,SADD,eACCA,SADD;AAAA,YACYC,IADZ,eACYA,IADZ;AAAA,YACkBC,IADlB,eACkBA,IADlB;AAAA,YACwBC,WADxB,eACwBA,WADxB;AAAA,YACqCC,SADrC,eACqCA,SADrC;AAEf,UAAI,CAACH,IAAL,EAAW,OAAO,IAAP;AAFI,YAIPI,KAJO,GAIcJ,IAJd,CAIPI,KAJO;AAAA,YAIAC,SAJA,GAIcL,IAJd,CAIAK,SAJA;;AAMf,UAAIA,SAAJ,EAAe;AACX,cAAMC,YAAY,GAAGlB,MAAM,CAACiB,SAAS,CAACA,SAAX,CAA3B;;AACA,YAAIC,YAAY,IAAID,SAAS,CAACE,SAA9B,EAAyC;AACrC,iBAAO,oBAAC,SAAD;AAAW,YAAA,MAAM,EAAET,MAAnB;AAA2B,YAAA,SAAS,EAAEC,SAAtC;AAAiD,YAAA,SAAS,EAAEM,SAA5D;AAAuE,YAAA,SAAS,EAAEF,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;AAED,UAAIC,KAAJ,EAAW;AACP,YAAII,KAAK,GAAG;AACRC,UAAAA,KAAK,EAAE,CADC;AAERC,UAAAA,MAAM,EAAE;AAFA,SAAZ;AAIA,cAAMC,SAAS,GAAGxB,OAAO,CAACiB,KAAK,CAACQ,KAAP,EAAcX,IAAd,CAAzB;;AACA,YAAIU,SAAJ,EAAe;AACX,gBAAME,YAAY,GAAG3B,UAAU,CAACyB,SAAD,EAAYT,WAAZ,CAA/B;;AACA,cAAIW,YAAJ,EAAkB;AACdL,YAAAA,KAAK,CAACC,KAAN,GAAcI,YAAY,CAACJ,KAA3B;AACAD,YAAAA,KAAK,CAACE,MAAN,GAAeG,YAAY,CAACH,MAA5B;AACH;AACJ;;AAED,eAAO,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAEZ,MAAf;AAAuB,UAAA,SAAS,EAAEC,SAAlC;AAA6C,UAAA,KAAK,EAAEK,KAApD;AAA2D,UAAA,KAAK,EAAEI,KAAlE;AAAyE,UAAA,SAAS,EAAEL,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,aAAO,IAAP;AACH,KAhC8B;AAAA;;AAkC/BW,EAAAA,MAAM,GAAG;AAAA,yBACqB,KAAKjB,KAD1B;AAAA,UACGkB,OADH,gBACGA,OADH;AAAA,UACYf,IADZ,gBACYA,IADZ;AAEL,QAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AAFN,UAIGgB,KAJH,GAIgChB,IAJhC,CAIGgB,KAJH;AAAA,UAIUC,IAJV,GAIgCjB,IAJhC,CAIUiB,IAJV;AAAA,UAIgBC,WAJhB,GAIgClB,IAJhC,CAIgBkB,WAJhB;AAKL,UAAMC,aAAa,GAAGlC,gBAAgB,CAACgC,IAAD,CAAtC;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAErC,UAAU,CAAC,aAAD,EAAgBmC,OAAO,CAACK,qBAAxB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,KAAK,IAAI;AAAK,MAAA,SAAS,EAAEpC,UAAU,CAAC,YAAD,EAAemC,OAAO,CAACM,eAAvB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoEL,KAApE,CADd,EAEKG,aAAa,IAAI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,aAA5B,CAFtB,EAGKD,WAAW,IAAI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCA,WAAnC,CAHpB,EAIK,KAAKtB,UAAL,EAJL,CAFJ,CADJ;AAWH;;AApD8B;;AAuDnCF,IAAI,CAAC4B,SAAL,GAAiB;AACbxB,EAAAA,MAAM,EAAEnB,SAAS,CAAC4C,MAAV,CAAiBC,UADZ;AAEbzB,EAAAA,SAAS,EAAEpB,SAAS,CAAC4C,MAAV,CAAiBC,UAFf;AAGbxB,EAAAA,IAAI,EAAErB,SAAS,CAAC8C,MAAV,CAAiBD,UAHV;AAIbrB,EAAAA,SAAS,EAAExB,SAAS,CAAC+C,IAAV,CAAeF,UAJb;AAMbvB,EAAAA,IAAI,EAAEtB,SAAS,CAAC4C,MANH;AAObrB,EAAAA,WAAW,EAAEvB,SAAS,CAAC4C;AAPV,CAAjB;AAUA7B,IAAI,CAACiC,YAAL,GAAoB;AAChB1B,EAAAA,IAAI,EAAEX,UADU;AAEhBY,EAAAA,WAAW,EAAEb;AAFG,CAApB;AAKA,eAAeR,UAAU,CAACW,MAAD,CAAV,CAAmBE,IAAnB,CAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n"]},"metadata":{},"sourceType":"module"}