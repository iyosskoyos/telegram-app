{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import ArrowDownwardIcon from'@material-ui/icons/ArrowDownward';import PlayArrowIcon from'@material-ui/icons/PlayArrow';import PauseIcon from'@material-ui/icons/Pause';import DocumentTile from'./DocumentTile';import PlayerStore from'../../Stores/PlayerStore';import'./VoiceNoteTile.css';var VoiceNoteTile=/*#__PURE__*/function(_React$Component){_inherits(VoiceNoteTile,_React$Component);function VoiceNoteTile(props){var _this;_classCallCheck(this,VoiceNoteTile);_this=_possibleConstructorReturn(this,_getPrototypeOf(VoiceNoteTile).call(this,props));_this.onClientUpdateMediaEnd=function(update){var _this$props=_this.props,chatId=_this$props.chatId,messageId=_this$props.messageId;if(chatId===update.chatId&&messageId===update.messageId){_this.setState({active:false,playing:false,currentTime:0});}};_this.onClientUpdateMediaPlay=function(update){var _this$props2=_this.props,chatId=_this$props2.chatId,messageId=_this$props2.messageId;if(chatId===update.chatId&&messageId===update.messageId){_this.setState({playing:true});}else{_this.setState({playing:false});}};_this.onClientUpdateMediaPause=function(update){var _this$props3=_this.props,chatId=_this$props3.chatId,messageId=_this$props3.messageId;if(chatId===update.chatId&&messageId===update.messageId){_this.setState({playing:false});}};_this.onClientUpdateMediaActive=function(update){var _this$props4=_this.props,chatId=_this$props4.chatId,messageId=_this$props4.messageId;if(chatId===update.chatId&&messageId===update.messageId){if(!_this.state.active){_this.setState({active:true,currentTime:0,playing:true});}}else if(_this.state.active){_this.setState({active:false,currentTime:0,playing:false});}};var _chatId=props.chatId,_messageId=props.messageId;var time=PlayerStore.time,message=PlayerStore.message,playing=PlayerStore.playing;var active=message&&message.chat_id===_chatId&&message.id===_messageId;_this.state={active:active,playing:active?playing:false,currentTime:active&&time?time.currentTime:0,duration:active&&time?time.duration:0};return _this;}_createClass(VoiceNoteTile,[{key:\"componentDidMount\",value:function componentDidMount(){PlayerStore.on('clientUpdateMediaActive',this.onClientUpdateMediaActive);PlayerStore.on('clientUpdateMediaPlay',this.onClientUpdateMediaPlay);PlayerStore.on('clientUpdateMediaPause',this.onClientUpdateMediaPause);PlayerStore.on('clientUpdateMediaEnd',this.onClientUpdateMediaEnd);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){PlayerStore.removeListener('clientUpdateMediaActive',this.onClientUpdateMediaActive);PlayerStore.removeListener('clientUpdateMediaPlay',this.onClientUpdateMediaPlay);PlayerStore.removeListener('clientUpdateMediaPause',this.onClientUpdateMediaPause);PlayerStore.removeListener('clientUpdateMediaEnd',this.onClientUpdateMediaEnd);}},{key:\"render\",value:function render(){var _this$props5=this.props,file=_this$props5.file,openMedia=_this$props5.openMedia;var playing=this.state.playing;return React.createElement(DocumentTile,{thumbnail:null,file:file,openMedia:openMedia,icon:React.createElement(ArrowDownwardIcon,null),completeIcon:playing?React.createElement(PauseIcon,null):React.createElement(PlayArrowIcon,null)});}}]);return VoiceNoteTile;}(React.Component);export default VoiceNoteTile;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Tile/VoiceNoteTile.js"],"names":["React","ArrowDownwardIcon","PlayArrowIcon","PauseIcon","DocumentTile","PlayerStore","VoiceNoteTile","props","onClientUpdateMediaEnd","update","chatId","messageId","setState","active","playing","currentTime","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","state","time","message","chat_id","id","duration","on","removeListener","file","openMedia","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<ArrowDownwardIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n"]},"metadata":{},"sourceType":"module"}