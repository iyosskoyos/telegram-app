{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/ColumnRight/ChatInfo.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css'; // const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateChatId = update => {\n      const popup = this.props.popup;\n      const chatId = this.state.chatId;\n      if (popup) return;\n      if (chatId === update.nextChatId) return;\n      this.sharedAudios = null;\n      this.sharedDocuments = null;\n      this.sharedLinks = null;\n      this.sharedPhotos = null;\n      this.sharedVideos = null;\n      this.sharedVoiceNotes = null;\n      this.setState({\n        chatId: update.nextChatId,\n        migratedChatId: 0,\n        userChatId: null,\n        openGroupInCommon: false,\n        openSharedAudios: false,\n        openSharedDocuments: false,\n        openSharedLinks: false,\n        openSharedMedia: false,\n        openSharedPhotos: false,\n        openSharedVideos: false,\n        openSharedVoiceNotes: false,\n        counters: ChatStore.getCounters(update.nextChatId),\n        migratedCounters: null\n      });\n    };\n\n    this.loadContent = chatId => {\n      this.loadChatCounters(chatId);\n      this.loadMigratedCounters(chatId);\n    };\n\n    this.loadChatCounters = async chatId => {\n      const counters = await getChatCounters(chatId);\n      ChatStore.setCounters(chatId, counters);\n      if (chatId !== this.state.chatId) return;\n      this.setState({\n        counters\n      });\n    };\n\n    this.loadMigratedCounters = async chatId => {\n      console.log('ChatInfo.loadMigratedCounters');\n      if (!isSupergroup(chatId)) return;\n      const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n      if (!fullInfo) return;\n      const basic_group_id = fullInfo.upgraded_from_basic_group_id;\n      if (!basic_group_id) return;\n      const chat = await TdLibController.send({\n        '@type': 'createBasicGroupChat',\n        basic_group_id,\n        force: true\n      });\n      if (!chat) return;\n      console.log('ChatInfo.loadMigratedCounters chat', chat);\n      const counters = await getChatCounters(chat.id);\n      ChatStore.setCounters(chat.id, counters);\n      if (this.state.chatId !== chatId) return;\n      this.setState({\n        migratedChatId: chat.id,\n        migratedCounters: ChatStore.getCounters(chat.id)\n      });\n    };\n\n    this.handleOpenSharedMedia = () => {\n      this.setState({\n        openSharedMedia: true\n      });\n    };\n\n    this.handleCloseSharedMedia = () => {\n      this.setState({\n        openSharedMedia: false\n      });\n    };\n\n    this.handleOpenGroupInCommon = () => {\n      this.setState({\n        openGroupInCommon: true\n      });\n    };\n\n    this.handleCloseGroupsInCommon = () => {\n      this.setState({\n        openGroupInCommon: false\n      });\n    };\n\n    this.handleCloseChatDetails = () => {\n      const popup = this.props.popup;\n      const userChatId = this.state.userChatId;\n\n      if (userChatId) {\n        this.setState({\n          userChatId: null\n        });\n      } else if (popup) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateDialogChatId',\n          chatId: 0\n        });\n      } else {\n        ApplicationStore.changeChatDetailsVisibility(false);\n      }\n    };\n\n    this.handleOpenSharedDocuments = () => {\n      this.setState({\n        openSharedDocuments: true\n      });\n    };\n\n    this.handleCloseSharedDocuments = () => {\n      this.setState({\n        openSharedDocuments: false\n      });\n    };\n\n    this.handleOpenSharedAudios = () => {\n      this.setState({\n        openSharedAudios: true\n      });\n    };\n\n    this.handleCloseSharedAudios = () => {\n      this.setState({\n        openSharedAudios: false\n      });\n    };\n\n    this.handleOpenSharedVoiceNotes = () => {\n      this.setState({\n        openSharedVoiceNotes: true\n      });\n    };\n\n    this.handleCloseSharedVoiceNotes = () => {\n      this.setState({\n        openSharedVoiceNotes: false\n      });\n    };\n\n    this.handleOpenSharedLinks = () => {\n      this.setState({\n        openSharedLinks: true\n      });\n    };\n\n    this.handleCloseSharedLinks = () => {\n      this.setState({\n        openSharedLinks: false\n      });\n    };\n\n    this.handleOpenSharedPhotos = () => {\n      this.setState({\n        openSharedPhotos: true\n      });\n    };\n\n    this.handleCloseSharedPhotos = () => {\n      this.setState({\n        openSharedPhotos: false\n      });\n    };\n\n    this.handleOpenSharedVideos = () => {\n      this.setState({\n        openSharedVideos: true\n      });\n    };\n\n    this.handleCloseSharedVideos = () => {\n      this.setState({\n        openSharedVideos: false\n      });\n    };\n\n    console.log('ChatDetails.ChatInfo.ctor');\n    this.detailsRef = React.createRef();\n    const _popup = props.popup;\n    const _chatId = ApplicationStore.chatId,\n          dialogChatId = ApplicationStore.dialogChatId;\n    this.state = {\n      chatId: _popup ? dialogChatId : _chatId,\n      migratedChatId: 0,\n      userChatId: null,\n      openGroupInCommon: false,\n      openSharedAudios: false,\n      openSharedDocuments: false,\n      openSharedLinks: false,\n      openSharedMedia: false,\n      openSharedPhotos: false,\n      openSharedVideos: false,\n      openSharedVoiceNotes: false,\n      counters: null,\n      migratedCounters: null\n    };\n  }\n\n  componentDidMount() {\n    console.log('ChatDetails.ChatInfo.componentDidMount');\n    this.loadContent(this.state.chatId);\n    ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n  }\n\n  componentWillUnmount() {\n    ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const chatId = this.state.chatId;\n\n    if (chatId !== prevState.chatId) {\n      this.loadContent(chatId);\n    }\n  }\n\n  render() {\n    console.log('ChatDetails.ChatInfo.render', this.state);\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          popup = _this$props.popup;\n    const _this$state = this.state,\n          chatId = _this$state.chatId,\n          counters = _this$state.counters,\n          migratedChatId = _this$state.migratedChatId,\n          migratedCounters = _this$state.migratedCounters,\n          userChatId = _this$state.userChatId,\n          openSharedAudios = _this$state.openSharedAudios,\n          openSharedDocuments = _this$state.openSharedDocuments,\n          openSharedLinks = _this$state.openSharedLinks,\n          openSharedMedia = _this$state.openSharedMedia,\n          openSharedPhotos = _this$state.openSharedPhotos,\n          openSharedVideos = _this$state.openSharedVideos,\n          openSharedVoiceNotes = _this$state.openSharedVoiceNotes,\n          openGroupInCommon = _this$state.openGroupInCommon;\n    const currentChatId = chatId || userChatId;\n    const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n    let content = null;\n\n    if (openSharedMedia) {\n      content = React.createElement(SharedMedia, {\n        chatId: currentChatId,\n        popup: popup,\n        minHeight: minHeight,\n        onClose: this.handleCloseSharedMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      });\n    } else if (openSharedAudios) {\n      this.sharedAudios = this.sharedAudios || React.createElement(SharedAudios, {\n        chatId: currentChatId,\n        migratedChatId: migratedChatId,\n        popup: popup,\n        minHeight: minHeight,\n        onClose: this.handleCloseSharedAudios,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      });\n      content = this.sharedAudios;\n    } else if (openSharedDocuments) {\n      this.sharedDocuments = this.sharedDocuments || React.createElement(SharedDocuments, {\n        chatId: currentChatId,\n        migratedChatId: migratedChatId,\n        popup: popup,\n        minHeight: minHeight,\n        onClose: this.handleCloseSharedDocuments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      });\n      content = this.sharedDocuments;\n    } else if (openSharedLinks) {\n      this.sharedLinks = this.sharedLinks || React.createElement(SharedLinks, {\n        chatId: currentChatId,\n        migratedChatId: migratedChatId,\n        popup: popup,\n        minHeight: minHeight,\n        onClose: this.handleCloseSharedLinks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      });\n      content = this.sharedLinks;\n    } else if (openSharedPhotos) {\n      this.sharedPhotos = this.sharedPhotos || React.createElement(SharedPhotos, {\n        chatId: currentChatId,\n        migratedChatId: migratedChatId,\n        popup: popup,\n        minHeight: minHeight,\n        onClose: this.handleCloseSharedPhotos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      });\n      content = this.sharedPhotos;\n    } else if (openSharedVideos) {\n      this.sharedVideos = this.sharedVideos || React.createElement(SharedVideos, {\n        chatId: currentChatId,\n        migratedChatId: migratedChatId,\n        popup: popup,\n        minHeight: minHeight,\n        onClose: this.handleCloseSharedVideos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      });\n      content = this.sharedVideos;\n    } else if (openSharedVoiceNotes) {\n      this.sharedVoiceNotes = this.sharedVoiceNotes || React.createElement(SharedVoiceNotes, {\n        chatId: currentChatId,\n        migratedChatId: migratedChatId,\n        popup: popup,\n        minHeight: minHeight,\n        onClose: this.handleCloseSharedVoiceNotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      });\n      content = this.sharedVoiceNotes;\n    } else if (openGroupInCommon) {\n      content = React.createElement(GroupsInCommon, {\n        chatId: currentChatId,\n        popup: popup,\n        minHeight: minHeight,\n        onClose: this.handleCloseGroupsInCommon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      });\n    } else {\n      content = React.createElement(ChatDetails, {\n        ref: this.detailsRef,\n        chatId: currentChatId,\n        popup: popup,\n        backButton: userChatId === chatId,\n        counters: counters,\n        migratedCounters: migratedCounters,\n        onOpenGroupInCommon: this.handleOpenGroupInCommon,\n        onOpenSharedAudios: this.handleOpenSharedAudios,\n        onOpenSharedDocuments: this.handleOpenSharedDocuments,\n        onOpenSharedMedia: this.handleOpenSharedMedia,\n        onOpenSharedLinks: this.handleOpenSharedLinks,\n        onOpenSharedPhotos: this.handleOpenSharedPhotos,\n        onOpenSharedVideos: this.handleOpenSharedVideos,\n        onOpenSharedVoiceNotes: this.handleOpenSharedVoiceNotes,\n        onClose: this.handleCloseChatDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      });\n    }\n\n    return popup ? React.createElement(React.Fragment, null, content) : React.createElement(\"div\", {\n      className: classNames(classes.borderColor, {\n        'right-column': !popup\n      }, className),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nChatInfo.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  popup: PropTypes.bool\n};\nChatInfo.defaultProps = {\n  className: null,\n  classes: null,\n  popup: false\n};\nexport default withStyles(borderStyle)(ChatInfo);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/ColumnRight/ChatInfo.js"],"names":["React","PropTypes","classNames","withStyles","ChatDetails","GroupsInCommon","SharedAudios","SharedDocuments","SharedLinks","SharedMedia","SharedPhotos","SharedVideos","SharedVoiceNotes","borderStyle","getChatCounters","getSupergroupId","isSupergroup","ApplicationStore","ChatStore","SupergroupStore","TdLibController","ChatInfo","Component","constructor","props","onClientUpdateChatId","update","popup","chatId","state","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","setState","migratedChatId","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","counters","getCounters","migratedCounters","loadContent","loadChatCounters","loadMigratedCounters","setCounters","console","log","fullInfo","getFullInfo","basic_group_id","upgraded_from_basic_group_id","chat","send","force","id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","clientUpdate","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","createRef","dialogChatId","componentDidMount","on","componentWillUnmount","removeListener","componentDidUpdate","prevProps","prevState","snapshot","render","classes","className","currentChatId","minHeight","current","getContentHeight","content","borderColor","propTypes","string","object","bool","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n"]},"metadata":{},"sourceType":"module"}