{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import PropTypes from'prop-types';import{compose}from'recompose';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import SharedMediaBase from'./SharedMediaBase';import SharedVoiceNote from'../../Tile/SharedMedia/SharedVoiceNote';import{openMedia as _openMedia}from'../../../Utils/Message';import'./SharedVoiceNotes.css';var SharedVoiceNotes=/*#__PURE__*/function(_SharedMediaBase){_inherits(SharedVoiceNotes,_SharedMediaBase);function SharedVoiceNotes(){_classCallCheck(this,SharedVoiceNotes);return _possibleConstructorReturn(this,_getPrototypeOf(SharedVoiceNotes).apply(this,arguments));}_createClass(SharedVoiceNotes,[{key:\"isValidContent\",value:function isValidContent(content){return content&&content['@type']==='messageVoiceNote';}},{key:\"getSearchFilter\",value:function getSearchFilter(){return{'@type':'searchMessagesFilterVoiceNote'};}},{key:\"getHeader\",value:function getHeader(){var t=this.props.t;return t('VoiceTitle');}},{key:\"hasSearch\",value:function hasSearch(){return false;}},{key:\"getItemTemplate\",value:function getItemTemplate(message){var migratedChatId=this.props.migratedChatId;var chat_id=message.chat_id,content=message.content,id=message.id;return React.createElement(SharedVoiceNote,{key:\"chat_id=\".concat(chat_id,\"_message_id=\").concat(id),chatId:chat_id,messageId:id,voiceNote:content.voice_note,openMedia:function openMedia(){return _openMedia(chat_id,id,false);},showOpenMessage:chat_id!==migratedChatId});}}]);return SharedVoiceNotes;}(SharedMediaBase);SharedVoiceNotes.propTypes={chatId:PropTypes.number.isRequired,migratedChatId:PropTypes.number,onClose:PropTypes.func.isRequired,popup:PropTypes.bool,minHeight:PropTypes.number};SharedVoiceNotes.defaultProps={popup:false,minHeight:0};var enhance=compose(withStyles(SharedMediaBase.getStyles),withTranslation());export default enhance(SharedVoiceNotes);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnRight/SharedMedia/SharedVoiceNotes.js"],"names":["React","PropTypes","compose","withStyles","withTranslation","SharedMediaBase","SharedVoiceNote","openMedia","SharedVoiceNotes","content","t","props","message","migratedChatId","chat_id","id","voice_note","propTypes","chatId","number","isRequired","onClose","func","popup","bool","minHeight","defaultProps","enhance","getStyles"],"mappings":"kqBAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CACA,OAASC,eAAT,KAAgC,eAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,wCAA5B,CACA,OAASC,SAAS,GAATA,CAAAA,UAAT,KAA0B,wBAA1B,CACA,MAAO,wBAAP,C,GAEMC,CAAAA,gB,6UACaC,O,CAAS,CACpB,MAAOA,CAAAA,OAAO,EAAIA,OAAO,CAAC,OAAD,CAAP,GAAqB,kBAAvC,CACH,C,yDAEiB,CACd,MAAO,CAAE,QAAS,+BAAX,CAAP,CACH,C,6CAEW,IACAC,CAAAA,CADA,CACM,KAAKC,KADX,CACAD,CADA,CAGR,MAAOA,CAAAA,CAAC,CAAC,YAAD,CAAR,CACH,C,6CAEW,CACR,MAAO,MAAP,CACH,C,wDAEeE,O,CAAS,IACbC,CAAAA,cADa,CACM,KAAKF,KADX,CACbE,cADa,IAEbC,CAAAA,OAFa,CAEYF,OAFZ,CAEbE,OAFa,CAEJL,OAFI,CAEYG,OAFZ,CAEJH,OAFI,CAEKM,EAFL,CAEYH,OAFZ,CAEKG,EAFL,CAIrB,MACI,qBAAC,eAAD,EACI,GAAG,mBAAaD,OAAb,wBAAmCC,EAAnC,CADP,CAEI,MAAM,CAAED,OAFZ,CAGI,SAAS,CAAEC,EAHf,CAII,SAAS,CAAEN,OAAO,CAACO,UAJvB,CAKI,SAAS,CAAE,2BAAMT,CAAAA,UAAS,CAACO,OAAD,CAAUC,EAAV,CAAc,KAAd,CAAf,EALf,CAMI,eAAe,CAAED,OAAO,GAAKD,cANjC,EADJ,CAUH,C,8BAjC0BR,e,EAoC/BG,gBAAgB,CAACS,SAAjB,CAA6B,CACzBC,MAAM,CAAEjB,SAAS,CAACkB,MAAV,CAAiBC,UADA,CAEzBP,cAAc,CAAEZ,SAAS,CAACkB,MAFD,CAGzBE,OAAO,CAAEpB,SAAS,CAACqB,IAAV,CAAeF,UAHC,CAIzBG,KAAK,CAAEtB,SAAS,CAACuB,IAJQ,CAKzBC,SAAS,CAAExB,SAAS,CAACkB,MALI,CAA7B,CAQAX,gBAAgB,CAACkB,YAAjB,CAAgC,CAC5BH,KAAK,CAAE,KADqB,CAE5BE,SAAS,CAAE,CAFiB,CAAhC,CAKA,GAAME,CAAAA,OAAO,CAAGzB,OAAO,CACnBC,UAAU,CAACE,eAAe,CAACuB,SAAjB,CADS,CAEnBxB,eAAe,EAFI,CAAvB,CAKA,cAAeuB,CAAAA,OAAO,CAACnB,gBAAD,CAAtB","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNotes);\n"]},"metadata":{},"sourceType":"module"}