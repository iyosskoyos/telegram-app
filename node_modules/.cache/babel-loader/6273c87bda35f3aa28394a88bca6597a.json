{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/Tile/SharedMedia/SharedVoiceNote.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst styles = theme => ({\n  voiceNoteMeta: {\n    color: theme.palette.text.secondary\n  }\n});\n\nclass SharedVoiceNote extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpenMessage = event => {\n      this.handleCloseContextMenu(event);\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            messageId = _this$props.messageId;\n      openChat(chatId, messageId);\n    };\n\n    this.handleForward = event => {\n      this.handleCloseContextMenu(event);\n      const _this$props2 = this.props,\n            chatId = _this$props2.chatId,\n            messageId = _this$props2.messageId;\n      forwardMessages(chatId, [messageId]);\n    };\n\n    this.handleDelete = event => {\n      this.handleCloseContextMenu(event);\n      const _this$props3 = this.props,\n            chatId = _this$props3.chatId,\n            messageId = _this$props3.messageId;\n      const message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      const can_be_deleted_for_all_users = message.can_be_deleted_for_all_users;\n      this.setState({\n        openDeleteDialog: true,\n        canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n        revoke: can_be_deleted_for_all_users\n      });\n    };\n\n    this.handleContextMenu = async event => {\n      if (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      const contextMenu = this.state.contextMenu;\n\n      if (contextMenu) {\n        this.setState({\n          contextMenu: false\n        });\n      } else {\n        const left = event.clientX;\n        const top = event.clientY;\n        this.setState({\n          contextMenu: true,\n          left,\n          top\n        });\n      }\n    };\n\n    this.handleCloseContextMenu = event => {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.setState({\n        contextMenu: false\n      });\n    };\n\n    this.handleRevokeChange = () => {\n      this.setState({\n        revoke: !this.state.revoke\n      });\n    };\n\n    this.handleCloseDelete = () => {\n      this.setState({\n        openDeleteDialog: false\n      });\n    };\n\n    this.handleDeleteContinue = () => {\n      const _this$props4 = this.props,\n            chatId = _this$props4.chatId,\n            messageId = _this$props4.messageId;\n      const revoke = this.state.revoke;\n      this.handleCloseDelete();\n      TdLibController.send({\n        '@type': 'deleteMessages',\n        chat_id: chatId,\n        message_ids: [messageId],\n        revoke: revoke\n      });\n    };\n\n    this.state = {\n      contextMenu: false,\n      left: 0,\n      top: 0,\n      openDeleteDialog: false,\n      revoke: false\n    };\n  }\n\n  render() {\n    const _this$props5 = this.props,\n          chatId = _this$props5.chatId,\n          classes = _this$props5.classes,\n          i18n = _this$props5.i18n,\n          messageId = _this$props5.messageId,\n          voiceNote = _this$props5.voiceNote,\n          openMedia = _this$props5.openMedia,\n          showOpenMessage = _this$props5.showOpenMessage,\n          t = _this$props5.t;\n    const _this$state = this.state,\n          contextMenu = _this$state.contextMenu,\n          left = _this$state.left,\n          top = _this$state.top,\n          openDeleteDialog = _this$state.openDeleteDialog,\n          revoke = _this$state.revoke;\n    if (!voiceNote) return null;\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n    const can_be_forwarded = message.can_be_forwarded,\n          can_be_deleted_only_for_self = message.can_be_deleted_only_for_self,\n          can_be_deleted_for_all_users = message.can_be_deleted_for_all_users;\n    const count = 1;\n    const date = message.date,\n          sender_user_id = message.sender_user_id;\n    const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: false\n    });\n    const duration = voiceNote.duration,\n          file = voiceNote.voice;\n    return React.createElement(\"div\", {\n      className: \"shared-voice-note\",\n      onContextMenu: this.handleContextMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(VoiceNoteTile, {\n      chatId: chatId,\n      messageId: messageId,\n      file: file,\n      openMedia: openMedia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"voice-note-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(MessageAuthor, {\n      chatId: chatId,\n      messageId: messageId,\n      userId: sender_user_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classNames(classes.voiceNoteMeta, 'voice-note-meta'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(AudioAction, {\n      chatId: chatId,\n      messageId: messageId,\n      duration: duration,\n      file: file,\n      title: \"\".concat(dateString, \", \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(MediaStatus, {\n      chatId: chatId,\n      messageId: messageId,\n      icon: '\\u00A0â€¢',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(Popover, {\n      open: contextMenu,\n      onClose: this.handleCloseContextMenu,\n      anchorReference: \"anchorPosition\",\n      anchorPosition: {\n        top,\n        left\n      },\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      onMouseDown: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      classes: {\n        root: classes.menuListRoot\n      },\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, showOpenMessage && React.createElement(MenuItem, {\n      onClick: this.handleOpenMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, t('GoToMessage')), can_be_forwarded && React.createElement(MenuItem, {\n      onClick: this.handleForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, t('Forward')), (can_be_deleted_only_for_self || can_be_deleted_for_all_users) && React.createElement(MenuItem, {\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, t('Delete')))), React.createElement(Dialog, {\n      transitionDuration: 0,\n      open: openDeleteDialog,\n      onClose: this.handleCloseDelete,\n      \"aria-labelledby\": \"delete-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"delete-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Confirm\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, count === 1 ? 'Are you sure you want to delete 1 message?' : \"Are you sure you want to delete \".concat(count, \" messages?\")), can_be_deleted_for_all_users && React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: revoke,\n        onChange: this.handleRevokeChange,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }),\n      label: isPrivateChat(chatId) ? \"Delete for \".concat(getChatShortTitle(chatId)) : 'Delete for all',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseDelete,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleDeleteContinue,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Ok\"))));\n  }\n\n}\n\nSharedVoiceNote.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  voiceNote: PropTypes.object.isRequired,\n  openMedia: PropTypes.func\n};\nconst enhance = compose(withStyles(styles, {\n  withTheme: true\n}), withTranslation());\nexport default enhance(SharedVoiceNote);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Tile/SharedMedia/SharedVoiceNote.js"],"names":["React","PropTypes","classNames","compose","withTranslation","withStyles","Button","Checkbox","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControlLabel","MenuItem","MenuList","Popover","AudioAction","MediaStatus","MessageAuthor","VoiceNoteTile","getChatShortTitle","isPrivateChat","MessageStore","forwardMessages","openChat","TdLibController","styles","theme","voiceNoteMeta","color","palette","text","secondary","SharedVoiceNote","Component","constructor","props","handleOpenMessage","event","handleCloseContextMenu","chatId","messageId","handleForward","handleDelete","message","get","can_be_deleted_for_all_users","setState","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","preventDefault","stopPropagation","contextMenu","state","left","clientX","top","clientY","handleRevokeChange","handleCloseDelete","handleDeleteContinue","send","chat_id","message_ids","render","classes","i18n","voiceNote","openMedia","showOpenMessage","t","can_be_forwarded","can_be_deleted_only_for_self","count","date","sender_user_id","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","duration","file","voice","vertical","horizontal","e","root","menuListRoot","propTypes","number","isRequired","object","func","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    voiceNoteMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, i18n, messageId, voiceNote, openMedia, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (!voiceNote) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className='shared-voice-note' onContextMenu={this.handleContextMenu}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                    <div className={classNames(classes.voiceNoteMeta, 'voice-note-meta')}>\n                        <AudioAction\n                            chatId={chatId}\n                            messageId={messageId}\n                            duration={duration}\n                            file={file}\n                            title={`${dateString}, `}\n                        />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0â€¢'} />\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNote);\n"]},"metadata":{},"sourceType":"module"}