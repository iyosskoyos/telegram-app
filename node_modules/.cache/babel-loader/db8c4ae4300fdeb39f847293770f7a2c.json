{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import{compose}from'recompose';import{withTranslation}from'react-i18next';import withStyles from'@material-ui/core/styles/withStyles';import IconButton from'@material-ui/core/IconButton';import InputAdornment from'@material-ui/core/InputAdornment';import InputLabel from'@material-ui/core/InputLabel';import Input from'@material-ui/core/Input';import FormControl from'@material-ui/core/FormControl';import FormHelperText from'@material-ui/core/FormHelperText';import Button from'@material-ui/core/Button';import Visibility from'@material-ui/icons/Visibility';import VisibilityOff from'@material-ui/icons/VisibilityOff';import HeaderProgress from'../ColumnMiddle/HeaderProgress';import{cleanProgressStatus,isConnecting}from'../../Utils/Common';import ApplicationStore from'../../Stores/ApplicationStore';import TdLibController from'../../Controllers/TdLibController';import'./PasswordControl.css';var styles=function styles(theme){return{root:{display:'flex',flexWrap:'wrap'},margin:{margin:'16px 0 8px 0'},withoutLabel:{marginTop:theme.spacing.unit*3},textField:{flexBasis:200},buttonLeft:{marginRight:'8px',marginTop:'16px'},buttonRight:{marginLeft:'8px',marginTop:'16px'}};};var PasswordControl=/*#__PURE__*/function(_React$Component){_inherits(PasswordControl,_React$Component);function PasswordControl(){var _getPrototypeOf2;var _this;_classCallCheck(this,PasswordControl);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(PasswordControl)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={connecting:isConnecting(ApplicationStore.connectionState),password:'',showPassword:false,error:''};_this.onUpdateConnectionState=function(update){var state=update.state;_this.setState({connecting:isConnecting(state)});};_this.handleNext=function(){if(_this.password){_this.setState({error:''});_this.handleDone();}else{_this.setState({error:'Invalid password. Please try again.'});}};_this.handleBack=function(){_this.props.onChangePhone();};_this.handleDone=function(){var password=_this.password;_this.setState({loading:true});TdLibController.send({'@type':'checkAuthenticationPassword',password:password}).then(function(result){}).catch(function(error){var errorString=null;if(error&&error['@type']==='error'&&error.message){errorString=error.message;}else{errorString=JSON.stringify(error);}_this.setState({error:errorString});}).finally(function(){_this.setState({loading:false});});};_this.handleMouseDownPassword=function(event){event.preventDefault();};_this.handleClickShowPassword=function(){_this.setState({showPassword:!_this.state.showPassword});};_this.handleChange=function(e){_this.password=e.target.value;};_this.handleKeyPress=function(e){if(e.key==='Enter'){e.preventDefault();_this.handleNext();}};return _this;}_createClass(PasswordControl,[{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('updateConnectionState',this.onUpdateConnectionState);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('updateConnectionState',this.onUpdateConnectionState);}},{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,passwordHint=_this$props.passwordHint,t=_this$props.t;var _this$state=this.state,connecting=_this$state.connecting,loading=_this$state.loading,error=_this$state.error,showPassword=_this$state.showPassword;var title=t('YourPassword');if(connecting){title=cleanProgressStatus(t('Connecting'));}return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"authorization-header\"},React.createElement(\"span\",{className:\"authorization-header-content\"},title),connecting&&React.createElement(HeaderProgress,null)),React.createElement(\"div\",null,\"Please enter your cloud password.\"),React.createElement(FormControl,{fullWidth:true,className:classNames(classes.margin,classes.textField)},React.createElement(InputLabel,{htmlFor:\"adornment-password\",error:Boolean(error)},\"Your cloud password\"),React.createElement(Input,{fullWidth:true,autoFocus:true,id:\"adornment-password\",type:showPassword?'text':'password',disabled:loading,error:Boolean(error),onChange:this.handleChange,onKeyPress:this.handleKeyPress,endAdornment:React.createElement(InputAdornment,{position:\"end\"},React.createElement(IconButton,{\"aria-label\":\"Toggle password visibility\",onClick:this.handleClickShowPassword,onMouseDown:this.handleMouseDownPassword},showPassword?React.createElement(VisibilityOff,null):React.createElement(Visibility,null)))})),passwordHint&&React.createElement(FormHelperText,{id:\"password-hint-text\"},React.createElement(\"span\",{className:\"password-hint-label\"},\"Hint: \"),passwordHint),React.createElement(FormHelperText,{id:\"password-error-text\"},error),React.createElement(\"div\",{className:\"authorization-actions\"},React.createElement(Button,{fullWidth:true,className:classes.buttonLeft,onClick:this.handleBack,disabled:loading},t('Back')),React.createElement(Button,{fullWidth:true,color:\"primary\",className:classes.buttonRight,onClick:this.handleNext,disabled:loading},t('Next'))));}}]);return PasswordControl;}(React.Component);var enhance=compose(withTranslation(),withStyles(styles,{withTheme:true}));export default enhance(PasswordControl);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Auth/PasswordControl.js"],"names":["React","classNames","compose","withTranslation","withStyles","IconButton","InputAdornment","InputLabel","Input","FormControl","FormHelperText","Button","Visibility","VisibilityOff","HeaderProgress","cleanProgressStatus","isConnecting","ApplicationStore","TdLibController","styles","theme","root","display","flexWrap","margin","withoutLabel","marginTop","spacing","unit","textField","flexBasis","buttonLeft","marginRight","buttonRight","marginLeft","PasswordControl","state","connecting","connectionState","password","showPassword","error","onUpdateConnectionState","update","setState","handleNext","handleDone","handleBack","props","onChangePhone","loading","send","then","result","catch","errorString","message","JSON","stringify","finally","handleMouseDownPassword","event","preventDefault","handleClickShowPassword","handleChange","e","target","value","handleKeyPress","key","on","removeListener","classes","passwordHint","t","title","Boolean","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport HeaderProgress from '../ColumnMiddle/HeaderProgress';\nimport { cleanProgressStatus, isConnecting } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PasswordControl.css';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    margin: {\n        margin: '16px 0 8px 0'\n    },\n    withoutLabel: {\n        marginTop: theme.spacing.unit * 3\n    },\n    textField: {\n        flexBasis: 200\n    },\n    buttonLeft: {\n        marginRight: '8px',\n        marginTop: '16px'\n    },\n    buttonRight: {\n        marginLeft: '8px',\n        marginTop: '16px'\n    }\n});\n\nclass PasswordControl extends React.Component {\n    state = {\n        connecting: isConnecting(ApplicationStore.connectionState),\n        password: '',\n        showPassword: false,\n        error: ''\n    };\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n    }\n\n    onUpdateConnectionState = update => {\n        const { state } = update;\n\n        this.setState({ connecting: isConnecting(state) });\n    };\n\n    handleNext = () => {\n        if (this.password) {\n            this.setState({ error: '' });\n            this.handleDone();\n        } else {\n            this.setState({ error: 'Invalid password. Please try again.' });\n        }\n    };\n\n    handleBack = () => {\n        this.props.onChangePhone();\n    };\n\n    handleDone = () => {\n        const password = this.password;\n\n        this.setState({ loading: true });\n        TdLibController.send({\n            '@type': 'checkAuthenticationPassword',\n            password: password\n        })\n            .then(result => {})\n            .catch(error => {\n                let errorString = null;\n                if (error && error['@type'] === 'error' && error.message) {\n                    errorString = error.message;\n                } else {\n                    errorString = JSON.stringify(error);\n                }\n\n                this.setState({ error: errorString });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    handleMouseDownPassword = event => {\n        event.preventDefault();\n    };\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.handleNext();\n        }\n    };\n\n    render() {\n        const { classes, passwordHint, t } = this.props;\n        const { connecting, loading, error, showPassword } = this.state;\n\n        let title = t('YourPassword');\n        if (connecting) {\n            title = cleanProgressStatus(t('Connecting'));\n        }\n\n        return (\n            <div>\n                <div className='authorization-header'>\n                    <span className='authorization-header-content'>{title}</span>\n                    {connecting && <HeaderProgress />}\n                </div>\n                <div>Please enter your cloud password.</div>\n                <FormControl fullWidth className={classNames(classes.margin, classes.textField)}>\n                    <InputLabel htmlFor='adornment-password' error={Boolean(error)}>\n                        Your cloud password\n                    </InputLabel>\n                    <Input\n                        fullWidth\n                        autoFocus\n                        id='adornment-password'\n                        type={showPassword ? 'text' : 'password'}\n                        disabled={loading}\n                        error={Boolean(error)}\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                        endAdornment={\n                            <InputAdornment position='end'>\n                                <IconButton\n                                    aria-label='Toggle password visibility'\n                                    onClick={this.handleClickShowPassword}\n                                    onMouseDown={this.handleMouseDownPassword}>\n                                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                {passwordHint && (\n                    <FormHelperText id='password-hint-text'>\n                        <span className='password-hint-label'>Hint: </span>\n                        {passwordHint}\n                    </FormHelperText>\n                )}\n                <FormHelperText id='password-error-text'>{error}</FormHelperText>\n                <div className='authorization-actions'>\n                    <Button fullWidth className={classes.buttonLeft} onClick={this.handleBack} disabled={loading}>\n                        {t('Back')}\n                    </Button>\n                    <Button\n                        fullWidth\n                        color='primary'\n                        className={classes.buttonRight}\n                        onClick={this.handleNext}\n                        disabled={loading}>\n                        {t('Next')}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(PasswordControl);\n"]},"metadata":{},"sourceType":"module"}