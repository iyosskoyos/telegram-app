{"ast":null,"code":"import _regeneratorRuntime from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import{EventEmitter}from'events';import Cookies from'universal-cookie';import{getSearchMessagesFilter,openMedia}from'../Utils/Message';import{PLAYER_PLAYBACKRATE_NORMAL,PLAYER_VOLUME_NORMAL}from'../Constants';import MessageStore from'./MessageStore';import TdLibController from'../Controllers/TdLibController';import{getRandomInt}from'../Utils/Common';var RepeatEnum=Object.freeze({NONE:'NONE',REPEAT:'REPEAT',REPEAT_ONE:'REPEAT_ONE'});export{RepeatEnum};var PlayerStore=/*#__PURE__*/function(_EventEmitter){_inherits(PlayerStore,_EventEmitter);function PlayerStore(){var _this;_classCallCheck(this,PlayerStore);_this=_possibleConstructorReturn(this,_getPrototypeOf(PlayerStore).call(this));_this.reset=function(){_this.playlist=null;_this.message=null;_this.time=null;_this.videoStream=null;_this.instantView=null;_this.pageBlock=null;};_this.addTdLibListener=function(){TdLibController.addListener('update',_this.onUpdate);TdLibController.addListener('clientUpdate',_this.onClientUpdate);};_this.removeTdLibListener=function(){TdLibController.removeListener('update',_this.onUpdate);TdLibController.removeListener('clientUpdate',_this.onClientUpdate);};_this.onUpdate=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(update){var authorization_state;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=update['@type'];_context.next=_context.t0==='updateAuthorizationState'?3:12;break;case 3:authorization_state=update.authorization_state;if(authorization_state){_context.next=6;break;}return _context.abrupt(\"break\",13);case 6:_context.t1=authorization_state['@type'];_context.next=_context.t1==='authorizationStateClosed'?9:11;break;case 9:_this.reset();return _context.abrupt(\"break\",11);case 11:return _context.abrupt(\"break\",13);case 12:return _context.abrupt(\"break\",13);case 13:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.close=function(){TdLibController.clientUpdate({'@type':'clientUpdateMediaClose'});};_this.onClientUpdate=function(update){switch(update['@type']){case'clientUpdateMediaClose':{_this.reset();_this.emit(update['@type'],update);break;}case'clientUpdateMediaActive':{var chatId=update.chatId,messageId=update.messageId,instantView=update.instantView,pageBlock=update.pageBlock;var message=MessageStore.get(chatId,messageId);if(message){_this.message=message;_this.emit(update['@type'],update);_this.getPlaylist(chatId,messageId);return;}else if(instantView&&pageBlock){_this.instantView=instantView;_this.pageBlock=pageBlock;_this.emit(update['@type'],update);}break;}case'clientUpdateMediaVolume':{var volume=update.volume;_this.volume=volume;var cookies=new Cookies();cookies.set('volume',volume);_this.emit(update['@type'],update);break;}case'clientUpdateMediaRepeat':{var repeat=update.repeat;_this.repeat=repeat;_this.emit(update['@type'],update);break;}case'clientUpdateMediaShuffle':{var shuffle=update.shuffle;_this.shuffle=shuffle;_this.emit(update['@type'],update);break;}case'clientUpdateMediaPlaybackRate':{var playbackRate=update.playbackRate;_this.playbackRate=playbackRate;var _cookies2=new Cookies();_cookies2.set('playbackRate',playbackRate);_this.emit(update['@type'],update);break;}case'clientUpdateMediaPlay':{_this.playing=true;_this.emit(update['@type'],update);break;}case'clientUpdateMediaTitleMouseOver':{_this.emit(update['@type'],update);break;}case'clientUpdateMediaPause':{_this.playing=false;_this.emit(update['@type'],update);break;}case'clientUpdateMediaStop':{_this.emit(update['@type'],update);break;}case'clientUpdateMediaNext':{_this.emit(update['@type'],update);_this.moveToNextMedia(false);break;}case'clientUpdateMediaPrev':{_this.emit(update['@type'],update);_this.moveToPrevMedia();break;}case'clientUpdateMediaEnding':{_this.emit(update['@type'],update);break;}case'clientUpdateMediaEnd':{_this.emit(update['@type'],update);if(update.moveNext){if(_this.moveToNextMedia(true)){}else{_this.close();}}else{_this.close();}break;}case'clientUpdateMediaTime':{var duration=update.duration,currentTime=update.currentTime,timestamp=update.timestamp;_this.time={currentTime:currentTime,duration:duration,timestamp:timestamp};_this.emit(update['@type'],update);break;}case'clientUpdateMediaCaptureStream':{_this.videoStream=update.stream;_this.emit(update['@type'],update);break;}case'clientUpdateMediaViewerPlay':{_this.emit(update['@type'],update);break;}case'clientUpdateMediaViewerPause':{_this.emit(update['@type'],update);break;}case'clientUpdateMediaViewerEnded':{_this.emit(update['@type'],update);break;}case'clientUpdateMediaPlaylistLoading':{_this.emit(update['@type'],update);break;}case'clientUpdateMediaPlaylistPrev':{_this.emit(update['@type'],update);break;}case'clientUpdateMediaPlaylist':{_this.emit(update['@type'],update);break;}case'clientUpdateMediaPlaylistNext':{_this.emit(update['@type'],update);break;}default:break;}};_this.moveToPrevMedia=function(){if(!_this.playlist)return;if(!_this.message)return;var _this$message=_this.message,chat_id=_this$message.chat_id,id=_this$message.id;var messages=_this.playlist.messages;if(!messages)return;var index=messages.findIndex(function(x){return x.chat_id===chat_id&&x.id===id;});if(index===-1)return;if(index+1<messages.length){var message=messages[index+1];openMedia(message.chat_id,message.id,false);}};_this.moveToNextMedia=function(useRepeatShuffle){if(!_this.playlist)return false;if(!_this.message)return false;var _this$message2=_this.message,chat_id=_this$message2.chat_id,id=_this$message2.id;var messages=_this.playlist.messages;if(!messages)return false;var index=messages.findIndex(function(x){return x.chat_id===chat_id&&x.id===id;});if(index===-1)return false;var nextIndex=-1;if(!useRepeatShuffle){nextIndex=index-1;}else{switch(_this.repeat){case RepeatEnum.NONE:{if(_this.shuffle){nextIndex=getRandomInt(0,messages.length);}else{nextIndex=index-1;}break;}case RepeatEnum.REPEAT_ONE:{nextIndex=index;break;}case RepeatEnum.REPEAT:{if(_this.shuffle){nextIndex=getRandomInt(0,messages.length);}else{nextIndex=index-1>=0?index-1:messages.length-1;}break;}}}if(nextIndex>=0){var message=messages[nextIndex];openMedia(message.chat_id,message.id,false);return true;}return false;};_this.getPlaylist=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(chatId,messageId){var _assertThisInitialize,currentPlaylist,_messages,filter,result,total_count,messages;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_assertThisInitialize=_assertThisInitialized(_this),currentPlaylist=_assertThisInitialize.playlist;if(!currentPlaylist){_context2.next=5;break;}_messages=currentPlaylist.messages;if(!(_messages&&_messages.findIndex(function(x){return x.chat_id===chatId&&x.id===messageId;})!==-1)){_context2.next=5;break;}return _context2.abrupt(\"return\");case 5:TdLibController.clientUpdate({'@type':'clientUpdateMediaPlaylistLoading',chatId:chatId,messageId:messageId});filter=getSearchMessagesFilter(chatId,messageId);if(filter){_context2.next=11;break;}_this.playlist={chatId:chatId,messageId:messageId,totalCount:1,messages:[MessageStore.get(chatId,messageId)]};TdLibController.clientUpdate({'@type':'clientUpdateMediaPlaylist',playlist:_this.playlist});return _context2.abrupt(\"return\");case 11:_context2.next=13;return TdLibController.send({'@type':'searchChatMessages',chat_id:chatId,query:'',sender_user_id:0,from_message_id:messageId,offset:-50,limit:100,filter:filter});case 13:result=_context2.sent;MessageStore.setItems(result.messages);total_count=result.total_count,messages=result.messages;_this.playlist={chatId:chatId,messageId:messageId,totalCount:total_count,messages:messages};TdLibController.clientUpdate({'@type':'clientUpdateMediaPlaylist',playlist:_this.playlist});case 18:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();var _cookies=new Cookies();var _playbackRate=_cookies.get('playbackRate');var _volume=_cookies.get('volume');_playbackRate=_playbackRate&&Number(_playbackRate)>=1&&Number(_playbackRate)<=2?Number(_playbackRate):PLAYER_PLAYBACKRATE_NORMAL;_volume=_volume&&Number(_volume)>=0&&Number(_volume)<=1?Number(_volume):PLAYER_VOLUME_NORMAL;_this.playbackRate=_playbackRate;_this.volume=_volume;_this.repeat=RepeatEnum.NONE;_this.shuffle=false;_this.reset();_this.addTdLibListener();_this.setMaxListeners(Infinity);return _this;}return PlayerStore;}(EventEmitter);var store=new PlayerStore();window.player=store;export default store;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Stores/PlayerStore.js"],"names":["EventEmitter","Cookies","getSearchMessagesFilter","openMedia","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","MessageStore","TdLibController","getRandomInt","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","reset","playlist","message","time","videoStream","instantView","pageBlock","addTdLibListener","addListener","onUpdate","onClientUpdate","removeTdLibListener","removeListener","update","authorization_state","close","clientUpdate","emit","chatId","messageId","get","getPlaylist","volume","cookies","set","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","chat_id","id","messages","index","findIndex","x","length","useRepeatShuffle","nextIndex","currentPlaylist","filter","totalCount","send","query","sender_user_id","from_message_id","offset","limit","result","setItems","total_count","Number","setMaxListeners","Infinity","store","window","player"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}