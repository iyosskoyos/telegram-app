{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _defineProperty from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import*as ReactDOM from'react-dom';import classNames from'classnames';import{getMedia,openMedia}from'../../Utils/Message';import{borderStyle}from'../Theme';import withStyles from'@material-ui/core/styles/withStyles';import PlayerStore from'../../Stores/PlayerStore';import TdLibController from'../../Controllers/TdLibController';import'./Playlist.css';var styles=function styles(theme){return _objectSpread({root:{background:theme.palette.type==='dark'?theme.palette.background.default:'#FFFFFF'}},borderStyle(theme));};var Playlist=/*#__PURE__*/function(_React$Component){_inherits(Playlist,_React$Component);function Playlist(props){var _this;_classCallCheck(this,Playlist);_this=_possibleConstructorReturn(this,_getPrototypeOf(Playlist).call(this,props));_this.scrollToActive=function(){var list=_this.listRef.current;if(!list)return;var _assertThisInitialize=_assertThisInitialized(_this),messageId=_assertThisInitialize.messageId;if(!messageId)return;var item=_this.itemRefMap.get(messageId);if(!item)return;var node=ReactDOM.findDOMNode(item);if(!node)return;list.scrollTop=node.offsetTop-15;};_this.onClientUpdateMediaTitleMouseOver=function(update){var over=update.over;if(over){_this.setState({playlistMouseOver:over},function(){_this.tryOpen();});}else{_this.setState({playlistMouseOver:over},function(){_this.tryClose();});}};_this.onClientUpdateMediaActive=function(update){var chatId=update.chatId,messageId=update.messageId;_this.chatId=chatId;_this.messageId=messageId;};_this.onClientUpdateMediaPlaylistLoading=function(update){var _assertThisInitialize2=_assertThisInitialized(_this),chatId=_assertThisInitialize2.chatId,messageId=_assertThisInitialize2.messageId;if(update.chatId===chatId&&update.messageId===messageId){_this.setState({playlist:null});}};_this.onClientUpdateMediaPlaylist=function(update){var _assertThisInitialize3=_assertThisInitialized(_this),chatId=_assertThisInitialize3.chatId,messageId=_assertThisInitialize3.messageId;var playlist=update.playlist;if(chatId===playlist.chatId&&messageId===playlist.messageId){_this.setState({playlist:playlist});}};_this.tryOpen=function(){clearTimeout(_this.openTimeout);_this.openTimeout=setTimeout(function(){var _this$state=_this.state,titleMouseOver=_this$state.titleMouseOver,playlistMouseOver=_this$state.playlistMouseOver;_this.setState({open:titleMouseOver||playlistMouseOver});},250);};_this.tryClose=function(){clearTimeout(_this.timeout);_this.timeout=setTimeout(function(){var _this$state2=_this.state,titleMouseOver=_this$state2.titleMouseOver,playlistMouseOver=_this$state2.playlistMouseOver;_this.setState({open:titleMouseOver||playlistMouseOver});},250);};_this.handleMouseEnter=function(){_this.setState({playlistMouseOver:true,open:true});};_this.handleMouseLeave=function(){_this.setState({playlistMouseOver:false},function(){_this.tryClose();});};_this.handleScroll=function(){var list=_this.listRef.current;if(!list)return;if(list.scrollTop===0){TdLibController.clientUpdate({'@type':'clientUpdateMediaPlaylistNext'});}else if(list.scrollHeight===list.scrollTop+list.offsetHeight){TdLibController.clientUpdate({'@type':'clientUpdateMediaPlaylistPrev'});}};_this.listRef=React.createRef();_this.itemRefMap=new Map();var message=PlayerStore.message,_playlist=PlayerStore.playlist;_this.chatId=message?message.chat_id:0;_this.messageId=message?message.id:0;_this.state={open:false,titleMouseOver:false,playlistMouseOver:false,playlist:_playlist};return _this;}_createClass(Playlist,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){var open=this.state.open;if(!prevState.open&&open){this.scrollToActive();}}},{key:\"componentDidMount\",value:function componentDidMount(){PlayerStore.on('clientUpdateMediaActive',this.onClientUpdateMediaActive);PlayerStore.on('clientUpdateMediaPlaylist',this.onClientUpdateMediaPlaylist);PlayerStore.on('clientUpdateMediaPlaylistLoading',this.onClientUpdateMediaPlaylistLoading);PlayerStore.on('clientUpdateMediaTitleMouseOver',this.onClientUpdateMediaTitleMouseOver);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){PlayerStore.removeListener('clientUpdateMediaActive',this.onClientUpdateMediaActive);PlayerStore.removeListener('clientUpdateMediaPlaylist',this.onClientUpdateMediaPlaylist);PlayerStore.removeListener('clientUpdateMediaPlaylistLoading',this.onClientUpdateMediaPlaylistLoading);PlayerStore.removeListener('clientUpdateMediaTitleMouseOver',this.onClientUpdateMediaTitleMouseOver);}},{key:\"render\",value:function render(){var _this2=this;var classes=this.props.classes;var _this$state3=this.state,open=_this$state3.open,playlist=_this$state3.playlist;if(!open)return null;if(!playlist)return null;var messages=playlist.messages;if(!messages)return null;if(messages.length<=1)return null;this.itemRefMap.clear();return React.createElement(\"div\",{className:\"playlist\"},React.createElement(\"div\",{className:classNames('playlist-wrapper',classes.root,classes.borderColor)},React.createElement(\"div\",{ref:this.listRef,className:\"playlist-items\",onMouseEnter:this.handleMouseEnter,onMouseLeave:this.handleMouseLeave,onScroll:this.handleScroll},playlist.messages.slice(0).reverse().map(function(x){return React.createElement(\"div\",{key:x.id,ref:function ref(el){return _this2.itemRefMap.set(x.id,el);},className:\"playlist-item\"},getMedia(x,function(){return openMedia(x.chat_id,x.id);}));}))));}}]);return Playlist;}(React.Component);export default withStyles(styles)(Playlist);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Player/Playlist.js"],"names":["React","ReactDOM","classNames","getMedia","openMedia","borderStyle","withStyles","PlayerStore","TdLibController","styles","theme","root","background","palette","type","default","Playlist","props","scrollToActive","list","listRef","current","messageId","item","itemRefMap","get","node","findDOMNode","scrollTop","offsetTop","onClientUpdateMediaTitleMouseOver","update","over","setState","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","chatId","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","setTimeout","state","titleMouseOver","open","timeout","handleMouseEnter","handleMouseLeave","handleScroll","clientUpdate","scrollHeight","offsetHeight","createRef","Map","message","chat_id","id","prevProps","prevState","snapshot","on","removeListener","classes","messages","length","clear","borderColor","slice","reverse","map","x","el","set","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n"]},"metadata":{},"sourceType":"module"}