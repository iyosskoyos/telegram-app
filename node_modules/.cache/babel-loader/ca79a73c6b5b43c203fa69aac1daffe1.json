{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnLeft/MainMenuButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\nconst styles = {\n  menuIconButton: {\n    margin: '8px -2px 8px 12px'\n  },\n  searchIconButton: {\n    margin: '8px 12px 8px 0'\n  }\n};\nconst menuAnchorOrigin = {\n  vertical: 'bottom',\n  horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateAuthorizationState = update => {\n      this.setState({\n        authorizationState: update.authorization_state\n      });\n    };\n\n    this.handleMenuOpen = event => {\n      const authorizationState = this.state.authorizationState;\n      if (!isAuthorizationReady(authorizationState)) return;\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleMenuClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleLogOut = () => {\n      this.handleMenuClose();\n      this.props.onLogOut();\n    };\n\n    this.handleCheckUpdates = async () => {\n      this.handleMenuClose();\n      const result = await fetch(\"\".concat(WASM_FILE_NAME, \"?_sw-precache=\").concat(WASM_FILE_HASH));\n      console.log('wasm result', result); //await update();\n    };\n\n    this.handleAppearance = event => {\n      this.handleMenuClose();\n      this.themePicker.open();\n    };\n\n    this.handleLanguage = event => {\n      this.handleMenuClose();\n      this.languagePicker.open();\n    };\n\n    this.setRef = ref => {\n      console.log(this);\n      this.languagePicker = ref;\n    };\n\n    this.state = {\n      authorizationState: ApplicationStore.getAuthorizationState(),\n      anchorEl: null\n    };\n  }\n\n  componentDidMount() {\n    ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n  }\n\n  componentWillUnmount() {\n    ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          t = _this$props.t;\n    const _this$state = this.state,\n          anchorEl = _this$state.anchorEl,\n          authorizationState = _this$state.authorizationState;\n    const mainMenuControl = isAuthorizationReady(authorizationState) ? React.createElement(React.Fragment, null, React.createElement(Menu, {\n      id: \"main-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: this.handleMenuClose,\n      getContentAnchorEl: null,\n      disableAutoFocusItem: true,\n      disableRestoreFocus: true,\n      anchorOrigin: menuAnchorOrigin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: this.handleCheckUpdates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, t('UpdateTelegram')), React.createElement(MenuItem, {\n      onClick: this.handleAppearance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, t('Appearance')), React.createElement(MenuItem, {\n      onClick: this.handleLanguage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, t('Language')), React.createElement(MenuItem, {\n      onClick: this.handleLogOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, t('LogOut')))) : null;\n    return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n      \"aria-owns\": anchorEl ? 'simple-menu' : null,\n      \"aria-haspopup\": \"true\",\n      className: classes.menuIconButton,\n      \"aria-label\": \"Menu\",\n      onClick: this.handleMenuOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), mainMenuControl, React.createElement(ThemePicker, {\n      innerRef: ref => this.themePicker = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(LanguagePicker, {\n      ref: ref => this.languagePicker = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst enhance = compose(withTranslation(), withStyles(styles, {\n  withTheme: true\n}));\nexport default enhance(MainMenuButton);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/ColumnLeft/MainMenuButton.js"],"names":["React","IconButton","MenuIcon","Menu","MenuItem","withStyles","withTranslation","compose","ThemePicker","LanguagePicker","update","isAuthorizationReady","ApplicationStore","WASM_FILE_HASH","WASM_FILE_NAME","styles","menuIconButton","margin","searchIconButton","menuAnchorOrigin","vertical","horizontal","MainMenuButton","Component","constructor","props","onUpdateAuthorizationState","setState","authorizationState","authorization_state","handleMenuOpen","event","state","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","result","fetch","console","log","handleAppearance","themePicker","open","handleLanguage","languagePicker","setRef","ref","getAuthorizationState","componentDidMount","on","componentWillUnmount","removeListener","render","classes","t","mainMenuControl","Boolean","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n"]},"metadata":{},"sourceType":"module"}