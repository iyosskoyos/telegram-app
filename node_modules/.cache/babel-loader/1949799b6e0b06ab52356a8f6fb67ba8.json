{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/Viewer/ProfileMediaViewer.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\nconst forwardIconStyle = {\n  padding: 20,\n  color: 'white',\n  transform: 'scaleX(-1)'\n};\nconst deleteIconStyle = {\n  padding: 20,\n  color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onKeyDown = event => {\n      if (event.keyCode === 27) {\n        const deleteConfirmationOpened = this.state.deleteConfirmationOpened;\n        if (deleteConfirmationOpened) return;\n        this.handleClose();\n      } else if (event.keyCode === 39) {\n        this.handlePrevious();\n      } else if (event.keyCode === 37) {\n        this.handleNext();\n      }\n    };\n\n    this.loadHistory = async () => {\n      const chatId = this.props.chatId;\n      if (!isPrivateChat(chatId)) return;\n      const result = await TdLibController.send({\n        '@type': 'getUserProfilePhotos',\n        user_id: getChatUserId(chatId),\n        offset: 0,\n        limit: 100\n      });\n      this.history = result.photos;\n      this.firstSliceLoaded = result.photos.length === 0;\n      const index = 0;\n      this.setState({\n        currentIndex: index,\n        hasNextMedia: this.hasNextMedia(index),\n        hasPreviousMedia: this.hasPreviousMedia(index),\n        totalCount: result.total_count\n      });\n      preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    this.handleClose = () => {\n      setProfileMediaViewerContent(null);\n    };\n\n    this.handleSave = () => {\n      const chatId = this.props.chatId;\n      const _this$state = this.state,\n            currentIndex = _this$state.currentIndex,\n            totalCount = _this$state.totalCount;\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n      let index = -1;\n\n      if (totalCount) {\n        index = currentIndex;\n      }\n\n      const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n      if (!photo) return;\n      if (!photo.big) return;\n      const file = FileStore.get(photo.big.id) || photo.big;\n      if (!file) return;\n      saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    this.handleForward = () => {\n      const chatId = this.props.chatId;\n      if (!isPrivateChat(chatId)) return;\n      const _this$state2 = this.state,\n            currentIndex = _this$state2.currentIndex,\n            totalCount = _this$state2.totalCount;\n      let index = -1;\n\n      if (totalCount) {\n        index = currentIndex;\n      }\n\n      if (index < 0 || index >= this.history.length) return;\n      const photo = getProfilePhoto(this.history[index]);\n      if (!photo) return;\n      let file = photo.big;\n      file = FileStore.get(file.id) || file;\n      if (!file) return;\n      const photoSize = {\n        '@type': 'photoSize',\n        type: 'c',\n        photo: file,\n        width: 640,\n        height: 640\n      };\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateForward',\n        info: {\n          photoSize\n        }\n      });\n    };\n\n    this.handleDelete = () => {\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            messageId = _this$props.messageId;\n      const _this$state3 = this.state,\n            currentIndex = _this$state3.currentIndex,\n            totalCount = _this$state3.totalCount;\n      let index = -1;\n\n      if (totalCount) {\n        index = currentIndex;\n      }\n\n      const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n      if (photo) {\n        let file = photo.big;\n        file = FileStore.get(file.id) || file;\n\n        if (file) {\n          const store = FileStore.getReadWriteStore();\n          FileStore.deleteLocalFile(store, file);\n        }\n      }\n    };\n\n    this.hasPreviousMedia = index => {\n      if (index === -1) return false;\n      const nextIndex = index + 1;\n      return nextIndex < this.history.length;\n    };\n\n    this.handlePrevious = event => {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      const currentIndex = this.state.currentIndex;\n      const nextIndex = currentIndex + 1;\n      return this.loadMedia(nextIndex, () => {\n        if (nextIndex === this.history.length - 1) {\n          this.loadPrevious();\n        }\n      });\n    };\n\n    this.loadPrevious = async () => {\n      return;\n    };\n\n    this.hasNextMedia = index => {\n      if (index === -1) return false;\n      const nextIndex = index - 1;\n      return nextIndex >= 0;\n    };\n\n    this.handleNext = event => {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      const currentIndex = this.state.currentIndex;\n      const nextIndex = currentIndex - 1;\n      return this.loadMedia(nextIndex, () => {\n        if (nextIndex === 0) {\n          this.loadNext();\n        }\n      });\n    };\n\n    this.loadNext = async () => {\n      return;\n    };\n\n    this.loadMedia = (index, callback) => {\n      if (index < 0) return false;\n      if (index >= this.history.length) return false;\n      this.setState({\n        currentIndex: index,\n        hasNextMedia: this.hasNextMedia(index),\n        hasPreviousMedia: this.hasPreviousMedia(index)\n      }, callback);\n      const chatId = this.props.chatId;\n      preloadProfileMediaViewerContent(chatId, index, this.history);\n      return true;\n    };\n\n    this.history = [];\n    const _this$props2 = this.props,\n          _chatId = _this$props2.chatId,\n          fileId = _this$props2.fileId;\n    this.state = {\n      prevChatId: _chatId,\n      prevFileId: fileId,\n      currentIndex: 0,\n      hasNextMedia: false,\n      hasPreviousMedia: false,\n      deleteConfirmationOpened: false\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const _this$props3 = this.props,\n          chatId = _this$props3.chatId,\n          messageId = _this$props3.messageId;\n    const _this$state4 = this.state,\n          currentFileId = _this$state4.currentFileId,\n          hasPreviousMedia = _this$state4.hasPreviousMedia,\n          hasNextMedia = _this$state4.hasNextMedia,\n          firstSliceLoaded = _this$state4.firstSliceLoaded,\n          totalCount = _this$state4.totalCount,\n          deleteConfirmationOpened = _this$state4.deleteConfirmationOpened;\n\n    if (nextProps.chatId !== chatId) {\n      return true;\n    }\n\n    if (nextProps.messageId !== messageId) {\n      return true;\n    }\n\n    if (nextState.currentFileId !== currentFileId) {\n      return true;\n    }\n\n    if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n      return true;\n    }\n\n    if (nextState.hasNextMedia !== hasNextMedia) {\n      return true;\n    }\n\n    if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n      return true;\n    }\n\n    if (nextState.totalCount !== totalCount) {\n      return true;\n    }\n\n    if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    const chatId = this.props.chatId;\n    const photo = getPhotoFromChat(chatId);\n    loadProfileMediaViewerContent(chatId, [photo]);\n    this.loadHistory();\n    document.addEventListener('keydown', this.onKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown, false);\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          chatId = _this$props4.chatId,\n          t = _this$props4.t;\n    const _this$state5 = this.state,\n          currentIndex = _this$state5.currentIndex,\n          hasNextMedia = _this$state5.hasNextMedia,\n          hasPreviousMedia = _this$state5.hasPreviousMedia,\n          firstSliceLoaded = _this$state5.firstSliceLoaded,\n          totalCount = _this$state5.totalCount,\n          deleteConfirmationOpened = _this$state5.deleteConfirmationOpened,\n          deleteForAll = _this$state5.deleteForAll;\n    let index = -1;\n\n    if (totalCount) {\n      index = currentIndex;\n    }\n\n    const deleteConfirmation = null;\n    const inHistory = index >= 0 && index < this.history.length;\n    const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n    const userProfilePhoto = inHistory ? this.history[index] : null;\n    const file = photo.big;\n    return React.createElement(\"div\", {\n      className: classNames('media-viewer', 'media-viewer-default'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, deleteConfirmation, React.createElement(\"div\", {\n      className: \"media-viewer-wrapper\",\n      onClick: this.handlePrevious,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"media-viewer-left-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"media-viewer-button-placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(MediaViewerButton, {\n      disabled: !hasNextMedia,\n      grow: true,\n      onClick: this.handleNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(NavigateBeforeIcon, {\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"media-viewer-content-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(ProfileMediaViewerContent, {\n      chatId: chatId,\n      photo: photo,\n      onClick: this.handlePrevious,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"media-viewer-right-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(MediaViewerButton, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    })), React.createElement(MediaViewerButton, {\n      disabled: !hasPreviousMedia,\n      grow: true,\n      onClick: this.handlePrevious,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(NavigateNextIcon, {\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"media-viewer-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(ProfileMediaViewerControl, {\n      chatId: chatId,\n      date: getProfilePhotoDateHint(userProfilePhoto),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), React.createElement(MediaViewerFooterText, {\n      title: t('AttachPhoto'),\n      subtitle: totalCount && index >= 0 ? \"\".concat(index + 1, \" of \").concat(totalCount) : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(MediaViewerDownloadButton, {\n      title: t('Save'),\n      fileId: file.id,\n      onClick: this.handleSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), isPrivateChat(chatId) && React.createElement(MediaViewerFooterButton, {\n      title: t('Forward'),\n      disabled: !inHistory,\n      onClick: this.handleForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(ReplyIcon, {\n      style: forwardIconStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    })), React.createElement(MediaViewerFooterButton, {\n      title: t('Delete'),\n      disabled: true,\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      style: deleteIconStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nProfileMediaViewer.propTypes = {\n  chatId: PropTypes.number.isRequired\n};\nexport default withTranslation()(ProfileMediaViewer);","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/Viewer/ProfileMediaViewer.js"],"names":["React","PropTypes","classNames","withTranslation","CloseIcon","NavigateNextIcon","NavigateBeforeIcon","ReplyIcon","DeleteIcon","MediaViewerDownloadButton","MediaViewerButton","MediaViewerFooterText","MediaViewerFooterButton","ProfileMediaViewerContent","ProfileMediaViewerControl","setProfileMediaViewerContent","getPhotoFromChat","getChatUserId","isPrivateChat","getProfilePhotoDateHint","getProfilePhoto","loadProfileMediaViewerContent","preloadProfileMediaViewerContent","saveOrDownload","ApplicationStore","FileStore","ChatStore","TdLibController","forwardIconStyle","padding","color","transform","deleteIconStyle","ProfileMediaViewer","Component","constructor","props","onKeyDown","event","keyCode","deleteConfirmationOpened","state","handleClose","handlePrevious","handleNext","loadHistory","chatId","result","send","user_id","offset","limit","history","photos","firstSliceLoaded","length","index","setState","currentIndex","hasNextMedia","hasPreviousMedia","totalCount","total_count","handleSave","chat","get","photo","big","file","id","updateChatPhotoBlob","handleForward","photoSize","type","width","height","clientUpdate","info","handleDelete","messageId","store","getReadWriteStore","deleteLocalFile","nextIndex","stopPropagation","loadMedia","loadPrevious","loadNext","callback","fileId","prevChatId","prevFileId","shouldComponentUpdate","nextProps","nextState","currentFileId","hasPrevousMedia","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","t","deleteForAll","deleteConfirmation","inHistory","userProfilePhoto","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n"]},"metadata":{},"sourceType":"module"}