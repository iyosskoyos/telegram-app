{"ast":null,"code":"var _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Player/PlaybackRateButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nconst styles = {\n  iconButton: {\n    padding: 4\n  }\n};\n\nclass PlaybackRateButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateMediaPlaybackRate = update => {\n      const playbackRate = update.playbackRate;\n      this.setState({\n        playbackRate\n      });\n    };\n\n    this.handlePlaybackRate = () => {\n      const playbackRate = this.state.playbackRate;\n      const nextPlaybackRate = playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaPlaybackRate',\n        playbackRate: nextPlaybackRate\n      });\n    };\n\n    const _playbackRate = PlayerStore.playbackRate;\n    this.state = {\n      playbackRate: _playbackRate\n    };\n  }\n\n  componentDidMount() {\n    PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n  }\n\n  componentWillUnmount() {\n    PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const playbackRate = this.state.playbackRate;\n    return React.createElement(IconButton, {\n      className: classes.iconButton,\n      color: playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default',\n      onClick: this.handlePlaybackRate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-player-playback-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"2X\"));\n  }\n\n}\n\nexport default withStyles(styles)(PlaybackRateButton);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Player/PlaybackRateButton.js"],"names":["React","withStyles","IconButton","PlayerStore","TdLibController","PLAYER_PLAYBACKRATE_FAST","PLAYER_PLAYBACKRATE_NORMAL","styles","iconButton","padding","PlaybackRateButton","Component","constructor","props","onClientUpdateMediaPlaybackRate","update","playbackRate","setState","handlePlaybackRate","state","nextPlaybackRate","clientUpdate","componentDidMount","on","componentWillUnmount","removeListener","render","classes"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,wBAAT,EAAmCC,0BAAnC,QAAqE,iBAArE;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAE;AADD;AADD,CAAf;;AAKA,MAAMC,kBAAN,SAAiCV,KAAK,CAACW,SAAvC,CAAiD;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,+BAlBmB,GAkBeC,MAAM,IAAI;AAAA,YAChCC,YADgC,GACfD,MADe,CAChCC,YADgC;AAGxC,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACH,KAtBkB;;AAAA,SAwBnBE,kBAxBmB,GAwBE,MAAM;AAAA,YACfF,YADe,GACE,KAAKG,KADP,CACfH,YADe;AAGvB,YAAMI,gBAAgB,GAClBJ,YAAY,KAAKV,0BAAjB,GAA8CD,wBAA9C,GAAyEC,0BAD7E;AAGAF,MAAAA,eAAe,CAACiB,YAAhB,CAA6B;AACzB,iBAAS,+BADgB;AAEzBL,QAAAA,YAAY,EAAEI;AAFW,OAA7B;AAIH,KAlCkB;;AAAA,UAGPJ,aAHO,GAGUb,WAHV,CAGPa,YAHO;AAKf,SAAKG,KAAL,GAAa;AACTH,MAAAA,YAAY,EAAZA;AADS,KAAb;AAGH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChBnB,IAAAA,WAAW,CAACoB,EAAZ,CAAe,+BAAf,EAAgD,KAAKT,+BAArD;AACH;;AAEDU,EAAAA,oBAAoB,GAAG;AACnBrB,IAAAA,WAAW,CAACsB,cAAZ,CAA2B,+BAA3B,EAA4D,KAAKX,+BAAjE;AACH;;AAoBDY,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKd,KADpB,CACGc,OADH;AAAA,UAEGX,YAFH,GAEoB,KAAKG,KAFzB,CAEGH,YAFH;AAIL,WACI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEW,OAAO,CAACnB,UADvB;AAEI,MAAA,KAAK,EAAEQ,YAAY,GAAGV,0BAAf,GAA4C,SAA5C,GAAwD,SAFnE;AAGI,MAAA,OAAO,EAAE,KAAKY,kBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CADJ;AAQH;;AAjD4C;;AAoDjD,eAAejB,UAAU,CAACM,MAAD,CAAV,CAAmBG,kBAAnB,CAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n"]},"metadata":{},"sourceType":"module"}