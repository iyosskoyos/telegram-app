{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import VolumeOffIcon from'@material-ui/icons/VolumeOff';import ArrowDownwardIcon from'@material-ui/icons/ArrowDownward';import CircularProgress from'@material-ui/core/CircularProgress';import FileProgress from'../../Viewer/FileProgress';import MediaStatus from'./MediaStatus';import{getFileSize,getSrc}from'../../../Utils/File';import{isBlurredThumbnail}from'../../../Utils/Media';import{getDurationString}from'../../../Utils/Common';import{PHOTO_DISPLAY_SIZE,PHOTO_SIZE}from'../../../Constants';import PlayerStore from'../../../Stores/PlayerStore';import FileStore from'../../../Stores/FileStore';import MessageStore from'../../../Stores/MessageStore';import ApplicationStore from'../../../Stores/ApplicationStore';import'./VideoNote.css';import InstantViewStore from'../../../Stores/InstantViewStore';var circleStyle={circle:'video-note-progress-circle'};var VideoNote=/*#__PURE__*/function(_React$Component){_inherits(VideoNote,_React$Component);function VideoNote(props){var _this;_classCallCheck(this,VideoNote);_this=_possibleConstructorReturn(this,_getPrototypeOf(VideoNote).call(this,props));_this.startStopPlayer=function(){var player=_this.videoRef.current;if(player){if(_this.inView&&_this.windowFocused&&!_this.openMediaViewer&&!_this.openProfileMediaViewer&&!_this.openIV){player.play();}else{if(_this.state.active){return;}player.pause();}}};_this.onClientUpdateInstantViewContent=function(update){_this.openIV=Boolean(InstantViewStore.getCurrent());_this.startStopPlayer();};_this.onClientUpdateProfileMediaViewerContent=function(update){_this.openProfileMediaViewer=Boolean(ApplicationStore.profileMediaViewerContent);_this.startStopPlayer();};_this.onClientUpdateMediaViewerContent=function(update){_this.openMediaViewer=Boolean(ApplicationStore.mediaViewerContent);_this.startStopPlayer();};_this.onClientUpdateFocusWindow=function(update){_this.windowFocused=update.focused;_this.startStopPlayer();};_this.onClientUpdateMessagesInView=function(update){var _this$props=_this.props,chatId=_this$props.chatId,messageId=_this$props.messageId;var key=\"\".concat(chatId,\"_\").concat(messageId);_this.inView=update.messages.has(key);_this.startStopPlayer();};_this.onClientUpdateMediaCaptureStream=function(update){var _this$props2=_this.props,chatId=_this$props2.chatId,messageId=_this$props2.messageId;if(chatId===update.chatId&&messageId===update.messageId){var player=_this.videoRef.current;if(player){_this.setState({srcObject:update.stream},function(){_this.updateVideoSrc();});}}};_this.onClientUpdateMediaTime=function(update){var _this$props3=_this.props,chatId=_this$props3.chatId,messageId=_this$props3.messageId;if(chatId===update.chatId&&messageId===update.messageId){var player=_this.videoRef.current;if(player){_this.setState({currentTime:update.currentTime,videoDuration:update.duration});}}};_this.onClientUpdateMediaEnd=function(update){var _this$props4=_this.props,chatId=_this$props4.chatId,messageId=_this$props4.messageId;if(chatId===update.chatId&&messageId===update.messageId){_this.setState({active:false,srcObject:null,currentTime:0},function(){var player=_this.videoRef.current;if(!player)return;_this.updateVideoSrc();if(!window.hasFocus){player.pause();}});}};_this.onClientUpdateMediaActive=function(update){var _this$props5=_this.props,chatId=_this$props5.chatId,messageId=_this$props5.messageId;var video=_this.props.videoNote.video;if(chatId===update.chatId&&messageId===update.messageId){if(_this.state.active){}else{_this.setState({active:true,currentTime:null});}}else if(_this.state.active){_this.setState({active:false,srcObject:null,currentTime:0},function(){var player=_this.videoRef.current;if(!player)return;_this.updateVideoSrc();if(!window.hasFocus){player.pause();}});}};_this.onClientUpdateVideoNoteBlob=function(update){var video=_this.props.videoNote.video;var fileId=update.fileId;if(!video)return;if(video.id===fileId){_this.setState({src:getSrc(video)},function(){_this.updateVideoSrc();});}};_this.onClientUpdateVideoNoteThumbnailBlob=function(update){var thumbnail=_this.props.videoNote.thumbnail;if(!thumbnail)return;var fileId=update.fileId;if(thumbnail.photo&&thumbnail.photo.id===fileId){_this.forceUpdate();}};_this.handleCanPlay=function(){// const player = this.videoRef.current;\n// if (player){\n//     if (this.state.active){\n//         player.muted = false;\n//     }\n//     else{\n//         player.muted = true;\n//     }\n// }\n};_this.videoRef=React.createRef();var _chatId=props.chatId,_messageId=props.messageId;var _video=props.videoNote.video;var time=PlayerStore.time,message=PlayerStore.message,videoStream=PlayerStore.videoStream;var active=message&&message.chat_id===_chatId&&message.id===_messageId;_this.state={active:active,srcObject:active?videoStream:null,src:getSrc(_video),currentTime:active&&time?time.currentTime:0.0,videoDuration:active&&time?time.duration:0.0};_this.windowFocused=window.hasFocus;_this.inView=false;_this.openMediaViewer=Boolean(ApplicationStore.mediaViewerContent);_this.openProfileMediaViewer=Boolean(ApplicationStore.profileMediaViewerContent);_this.openIV=Boolean(InstantViewStore.getCurrent());return _this;}_createClass(VideoNote,[{key:\"updateVideoSrc\",value:function updateVideoSrc(){var _this$state=this.state,srcObject=_this$state.srcObject,src=_this$state.src;var player=this.videoRef.current;if(!player)return;if(srcObject){//player.scr = null;\nplayer.srcObject=srcObject;return;}var stream=player.srcObject;if(stream){//console.log('clientUpdate release srcObject');\nvar tracks=stream.getTracks();tracks.forEach(function(track){//console.log('clientUpdate release track');\ntrack.stop();});}if(player.srcObject){//console.log('clientUpdate release video.srcObject');\nplayer.srcObject=null;}if(player.src!==src){player.src=src;}}},{key:\"componentDidMount\",value:function componentDidMount(){this.updateVideoSrc();FileStore.on('clientUpdateVideoNoteThumbnailBlob',this.onClientUpdateVideoNoteThumbnailBlob);FileStore.on('clientUpdateVideoNoteBlob',this.onClientUpdateVideoNoteBlob);MessageStore.on('clientUpdateMessagesInView',this.onClientUpdateMessagesInView);ApplicationStore.on('clientUpdateFocusWindow',this.onClientUpdateFocusWindow);ApplicationStore.on('clientUpdateMediaViewerContent',this.onClientUpdateMediaViewerContent);ApplicationStore.on('clientUpdateProfileMediaViewerContent',this.onClientUpdateProfileMediaViewerContent);InstantViewStore.on('clientUpdateInstantViewContent',this.onClientUpdateInstantViewContent);PlayerStore.on('clientUpdateMediaActive',this.onClientUpdateMediaActive);PlayerStore.on('clientUpdateMediaCaptureStream',this.onClientUpdateMediaCaptureStream);PlayerStore.on('clientUpdateMediaTime',this.onClientUpdateMediaTime);PlayerStore.on('clientUpdateMediaEnd',this.onClientUpdateMediaEnd);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob',this.onClientUpdateVideoNoteThumbnailBlob);FileStore.removeListener('clientUpdateVideoNoteBlob',this.onClientUpdateVideoNoteBlob);MessageStore.removeListener('clientUpdateMessagesInView',this.onClientUpdateMessagesInView);ApplicationStore.removeListener('clientUpdateFocusWindow',this.onClientUpdateFocusWindow);ApplicationStore.removeListener('clientUpdateMediaViewerContent',this.onClientUpdateMediaViewerContent);ApplicationStore.removeListener('clientUpdateProfileMediaViewerContent',this.onClientUpdateProfileMediaViewerContent);InstantViewStore.removeListener('clientUpdateInstantViewContent',this.onClientUpdateInstantViewContent);PlayerStore.removeListener('clientUpdateMediaActive',this.onClientUpdateMediaActive);PlayerStore.removeListener('clientUpdateMediaCaptureStream',this.onClientUpdateMediaCaptureStream);PlayerStore.removeListener('clientUpdateMediaTime',this.onClientUpdateMediaTime);PlayerStore.removeListener('clientUpdateMediaEnd',this.onClientUpdateMediaEnd);}},{key:\"render\",value:function render(){var _this$props6=this.props,displaySize=_this$props6.displaySize,chatId=_this$props6.chatId,messageId=_this$props6.messageId,openMedia=_this$props6.openMedia;var _this$state2=this.state,active=_this$state2.active,currentTime=_this$state2.currentTime,videoDuration=_this$state2.videoDuration;var _this$props$videoNote=this.props.videoNote,thumbnail=_this$props$videoNote.thumbnail,video=_this$props$videoNote.video,duration=_this$props$videoNote.duration;var message=MessageStore.get(chatId,messageId);if(!message)return null;var style={width:200,height:200};if(!style)return null;var thumbnailSrc=getSrc(thumbnail?thumbnail.photo:null);var src=getSrc(video);var isBlurred=isBlurredThumbnail(thumbnail);var progress=0;if(videoDuration&&currentTime){var progressTime=currentTime+0.25;progress=progressTime/videoDuration*100;}return React.createElement(\"div\",{className:classNames('video-note',{'video-note-playing':active}),style:style,onClick:openMedia},src?React.createElement(React.Fragment,null,React.createElement(\"video\",{ref:this.videoRef,className:classNames('media-viewer-content-image','video-note-round'),poster:thumbnailSrc,muted:true,autoPlay:true,loop:true,playsInline:true,width:style.width,height:style.height,onCanPlay:this.handleCanPlay}),React.createElement(\"div\",{className:\"video-note-player\"},React.createElement(\"div\",{className:\"video-note-progress\"},React.createElement(CircularProgress,{classes:circleStyle,variant:\"static\",value:progress,size:200,thickness:1})),React.createElement(\"div\",{className:\"animation-meta\"},getDurationString(active?Math.floor(currentTime):duration),React.createElement(MediaStatus,{chatId:chatId,messageId:messageId,icon:\"\\xA0\\u2022\"})),React.createElement(\"div\",{className:\"video-note-muted\"},React.createElement(VolumeOffIcon,null)))):React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"video-note-round\"},React.createElement(\"img\",{className:classNames('animation-preview',{'media-blurred':isBlurred}),style:style,src:thumbnailSrc,alt:\"\"})),React.createElement(\"div\",{className:\"animation-meta\"},getDurationString(duration)+' '+getFileSize(video),React.createElement(MediaStatus,{chatId:chatId,messageId:messageId,icon:\"\\xA0\\u2022\"})),React.createElement(\"div\",{className:\"video-note-muted\"},React.createElement(VolumeOffIcon,null))),React.createElement(FileProgress,{file:video,download:true,upload:true,cancelButton:true,icon:React.createElement(ArrowDownwardIcon,null)}));}}]);return VideoNote;}(React.Component);VideoNote.defaultProps={size:PHOTO_SIZE,displaySize:PHOTO_DISPLAY_SIZE};export default VideoNote;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Message/Media/VideoNote.js"],"names":["React","classNames","VolumeOffIcon","ArrowDownwardIcon","CircularProgress","FileProgress","MediaStatus","getFileSize","getSrc","isBlurredThumbnail","getDurationString","PHOTO_DISPLAY_SIZE","PHOTO_SIZE","PlayerStore","FileStore","MessageStore","ApplicationStore","InstantViewStore","circleStyle","circle","VideoNote","props","startStopPlayer","player","videoRef","current","inView","windowFocused","openMediaViewer","openProfileMediaViewer","openIV","play","state","active","pause","onClientUpdateInstantViewContent","update","Boolean","getCurrent","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","focused","onClientUpdateMessagesInView","chatId","messageId","key","messages","has","onClientUpdateMediaCaptureStream","setState","srcObject","stream","updateVideoSrc","onClientUpdateMediaTime","currentTime","videoDuration","duration","onClientUpdateMediaEnd","window","hasFocus","onClientUpdateMediaActive","video","videoNote","onClientUpdateVideoNoteBlob","fileId","id","src","onClientUpdateVideoNoteThumbnailBlob","thumbnail","photo","forceUpdate","handleCanPlay","createRef","time","message","videoStream","chat_id","tracks","getTracks","forEach","track","stop","on","removeListener","displaySize","openMedia","get","style","width","height","thumbnailSrc","isBlurred","progress","progressTime","Math","floor","Component","defaultProps","size"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        InstantViewStore.removeListener('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n"]},"metadata":{},"sourceType":"module"}