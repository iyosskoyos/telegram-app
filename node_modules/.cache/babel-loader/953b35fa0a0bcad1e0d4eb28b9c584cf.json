{"ast":null,"code":"import _defineProperty from \"/home/me-admin/Downloads/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/Message/Media/Location.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClientUpdateLocationBlob = update => {\n      const fileId = update.fileId;\n      const _this$props = this.props,\n            location = _this$props.location,\n            width = _this$props.width,\n            height = _this$props.height,\n            zoom = _this$props.zoom,\n            scale = _this$props.scale;\n      const locationId = getLocationId(location, width, height, zoom, scale);\n      const file = FileStore.getLocationFile(locationId);\n      if (!file) return;\n\n      if (file.id === fileId) {\n        this.forceUpdate();\n      }\n    };\n  }\n\n  componentDidMount() {\n    FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n  }\n\n  componentWillUnmount() {\n    FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          location = _this$props2.location,\n          width = _this$props2.width,\n          height = _this$props2.height,\n          zoom = _this$props2.zoom,\n          scale = _this$props2.scale,\n          style = _this$props2.style;\n    if (!location) return null;\n    const locationId = getLocationId(location, width, height, zoom, scale);\n    const file = FileStore.getLocationFile(locationId);\n    const src = getSrc(file);\n    const longitude = location.longitude,\n          latitude = location.latitude;\n    const source = \"https://maps.google.com/?q=\".concat(latitude, \",\").concat(longitude);\n\n    const locationStyle = _objectSpread({\n      width,\n      height\n    }, style);\n\n    return React.createElement(\"div\", {\n      className: \"location\",\n      style: locationStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: source,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"location-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"location-image\",\n      draggable: false,\n      alt: source,\n      src: src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"location-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(RoomIcon, {\n      fontSize: \"large\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nLocation.propTypes = {\n  chatId: PropTypes.number,\n  messageId: PropTypes.number,\n  location: PropTypes.object.isRequired,\n  openMedia: PropTypes.func,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  zoom: PropTypes.number,\n  scale: PropTypes.number\n};\nLocation.defaultProps = {\n  width: LOCATION_WIDTH,\n  height: LOCATION_HEIGHT,\n  zoom: LOCATION_ZOOM,\n  scale: LOCATION_SCALE\n};\nexport default Location;","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/Message/Media/Location.js"],"names":["React","PropTypes","RoomIcon","getLocationId","getSrc","LOCATION_HEIGHT","LOCATION_SCALE","LOCATION_WIDTH","LOCATION_ZOOM","FileStore","Location","Component","onClientUpdateLocationBlob","update","fileId","props","location","width","height","zoom","scale","locationId","file","getLocationFile","id","forceUpdate","componentDidMount","on","componentWillUnmount","removeListener","render","style","src","longitude","latitude","source","locationStyle","propTypes","chatId","number","messageId","object","isRequired","openMedia","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, style } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div className='location' style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer'>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n"]},"metadata":{},"sourceType":"module"}