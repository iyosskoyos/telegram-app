{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/ColumnMiddle/Footer.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateBasicGroup = update => {\n      const chatId = this.props.chatId;\n\n      if (hasBasicGroupId(chatId, update.basic_group.id)) {\n        this.forceUpdate();\n      }\n    };\n\n    this.onUpdateSupergroup = update => {\n      const chatId = this.props.chatId;\n\n      if (hasSupergroupId(chatId, update.supergroup.id)) {\n        this.forceUpdate();\n      }\n    };\n\n    this.handleJoin = () => {\n      const chatId = this.props.chatId;\n      if (!chatId) return;\n      TdLibController.send({\n        '@type': 'joinChat',\n        chat_id: chatId\n      });\n    };\n\n    this.handleDeleteAndExit = () => {\n      const chatId = this.props.chatId;\n      if (!chatId) return;\n      TdLibController.send({\n        '@type': 'deleteChatHistory',\n        chat_id: chatId,\n        remove_from_chat_list: true\n      }); // TdLibController\n      //     .send({\n      //         '@type': 'leaveChat',\n      //         chat_id: this.props.chatId\n      //     });\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.chatId !== this.props.chatId) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n    SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n  }\n\n  componentWillUnmount() {\n    BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n    SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n  }\n\n  render() {\n    const chatId = this.props.chatId;\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n      case 'chatTypeBasicGroup':\n        {\n          const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n\n          if (basicGroup && basicGroup.status) {\n            switch (basicGroup.status['@type']) {\n              case 'chatMemberStatusAdministrator':\n                {\n                  return React.createElement(InputBoxControl, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 97\n                    },\n                    __self: this\n                  });\n                }\n\n              case 'chatMemberStatusBanned':\n                {\n                  return React.createElement(FooterCommand, {\n                    command: \"delete and exit\",\n                    onCommand: this.handleDeleteAndExit,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 100\n                    },\n                    __self: this\n                  });\n                }\n\n              case 'chatMemberStatusCreator':\n                {\n                  return React.createElement(InputBoxControl, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 103\n                    },\n                    __self: this\n                  });\n                }\n\n              case 'chatMemberStatusLeft':\n                {\n                  return null;\n                }\n\n              case 'chatMemberStatusMember':\n                {\n                  return React.createElement(InputBoxControl, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 109\n                    },\n                    __self: this\n                  });\n                }\n\n              case 'chatMemberStatusRestricted':\n                {\n                  if (basicGroup.status.is_member) {\n                    if (!basicGroup.status.can_send_messages) {\n                      return null;\n                    }\n\n                    return React.createElement(InputBoxControl, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 117\n                      },\n                      __self: this\n                    });\n                  } else {\n                    return React.createElement(FooterCommand, {\n                      command: \"join\",\n                      onCommand: this.handleJoin,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 119\n                      },\n                      __self: this\n                    });\n                  }\n                }\n            }\n          }\n\n          break;\n        }\n\n      case 'chatTypePrivate':\n        {\n          return React.createElement(InputBoxControl, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          });\n        }\n\n      case 'chatTypeSecret':\n        {\n          return React.createElement(InputBoxControl, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          });\n        }\n\n      case 'chatTypeSupergroup':\n        {\n          const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n          if (supergroup && supergroup.status) {\n            switch (supergroup.status['@type']) {\n              case 'chatMemberStatusAdministrator':\n                {\n                  return React.createElement(InputBoxControl, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 138\n                    },\n                    __self: this\n                  });\n                }\n\n              case 'chatMemberStatusBanned':\n                {\n                  return React.createElement(FooterCommand, {\n                    command: \"delete and exit\",\n                    onCommand: this.handleDeleteAndExit,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 141\n                    },\n                    __self: this\n                  });\n                }\n\n              case 'chatMemberStatusCreator':\n                {\n                  return React.createElement(InputBoxControl, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 144\n                    },\n                    __self: this\n                  });\n                }\n\n              case 'chatMemberStatusLeft':\n                {\n                  return React.createElement(FooterCommand, {\n                    command: \"join\",\n                    onCommand: this.handleJoin,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 147\n                    },\n                    __self: this\n                  });\n                }\n\n              case 'chatMemberStatusMember':\n                {\n                  if (supergroup.is_channel) {\n                    return React.createElement(NotificationsCommandControl, {\n                      chatId: chatId,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 151\n                      },\n                      __self: this\n                    });\n                  } else {\n                    return React.createElement(InputBoxControl, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 153\n                      },\n                      __self: this\n                    });\n                  }\n                }\n\n              case 'chatMemberStatusRestricted':\n                {\n                  if (supergroup.status.is_member) {\n                    if (!supergroup.status.can_send_messages) {\n                      return null;\n                    }\n\n                    return React.createElement(InputBoxControl, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 162\n                      },\n                      __self: this\n                    });\n                  } else {\n                    return React.createElement(FooterCommand, {\n                      command: \"join\",\n                      onCommand: this.handleJoin,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 164\n                      },\n                      __self: this\n                    });\n                  }\n                }\n            }\n          }\n        }\n    }\n\n    return null;\n  }\n\n}\n\nexport default Footer;","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/ColumnMiddle/Footer.js"],"names":["React","InputBoxControl","FooterCommand","NotificationsCommandControl","hasBasicGroupId","hasSupergroupId","ChatStore","BasicGroupStore","SupergroupStore","TdLibController","Footer","Component","constructor","props","onUpdateBasicGroup","update","chatId","basic_group","id","forceUpdate","onUpdateSupergroup","supergroup","handleJoin","send","chat_id","handleDeleteAndExit","remove_from_chat_list","shouldComponentUpdate","nextProps","nextState","componentDidMount","on","componentWillUnmount","removeListener","render","chat","get","type","basicGroup","basic_group_id","status","is_member","can_send_messages","supergroup_id","is_channel"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n"]},"metadata":{},"sourceType":"module"}