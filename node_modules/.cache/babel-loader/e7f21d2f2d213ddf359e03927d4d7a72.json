{"ast":null,"code":"var _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/FoundPublicChat.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n  listItem: {\n    padding: 0\n  },\n  verifiedIcon: {\n    color: theme.palette.primary.main\n  },\n  foundPublicChatActive: {\n    color: '#fff',\n    backgroundColor: theme.palette.primary.main,\n    '& $verifiedIcon': {\n      color: '#fff'\n    }\n  },\n  foundPublicChatSubtitle: {\n    color: theme.palette.text.secondary\n  }\n});\n\nclass FoundPublicChat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateChatId = update => {\n      const nextChatId = update.nextChatId,\n            previousChatId = update.previousChatId;\n      this.setState({\n        nextChatId: nextChatId,\n        previousChatId: previousChatId\n      });\n    };\n\n    this.state = {\n      nextChatId: ApplicationStore.getChatId(),\n      previousChatId: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const _this$props = this.props,\n          chatId = _this$props.chatId,\n          theme = _this$props.theme;\n\n    if (nextState.nextChatId === chatId) {\n      return true;\n    }\n\n    if (nextState.previousChatId === chatId) {\n      return true;\n    }\n\n    if (nextProps.theme !== theme) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n  }\n\n  componentWillUnmount() {\n    ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          chatId = _this$props2.chatId,\n          onClick = _this$props2.onClick,\n          classes = _this$props2.classes;\n    const selectedChatId = this.state.nextChatId;\n    const username = getChatUsername(chatId);\n    const membersCount = getGroupChatMembersCount(chatId);\n    let subscribersString = '';\n\n    if (membersCount > 0) {\n      subscribersString = membersCount === 1 ? ', 1 subscriber' : \", \".concat(membersCount, \" subscribers\");\n    }\n\n    return React.createElement(ListItem, {\n      button: true,\n      classes: {\n        root: classes.listItem\n      },\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('found-public-chat', {\n        [classes.foundPublicChatActive]: chatId === selectedChatId,\n        'accent-background': chatId === selectedChatId\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ChatTile, {\n      chatId: chatId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dialog-inner-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tile-first-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      chatId: chatId,\n      classes: {\n        verifiedIcon: classes.verifiedIcon\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tile-second-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('dialog-content', classes.foundPublicChatSubtitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"@\", username, subscribersString)))));\n  }\n\n}\n\nFoundPublicChat.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  onClick: PropTypes.func\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(FoundPublicChat);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Tile/FoundPublicChat.js"],"names":["React","PropTypes","ListItem","withStyles","classNames","ChatTile","DialogTitle","getChatUsername","getGroupChatMembersCount","ApplicationStore","styles","theme","listItem","padding","verifiedIcon","color","palette","primary","main","foundPublicChatActive","backgroundColor","foundPublicChatSubtitle","text","secondary","FoundPublicChat","Component","constructor","props","onClientUpdateChatId","update","nextChatId","previousChatId","setState","state","getChatId","shouldComponentUpdate","nextProps","nextState","chatId","componentDidMount","on","componentWillUnmount","removeListener","render","onClick","classes","selectedChatId","username","membersCount","subscribersString","root","propTypes","number","isRequired","func","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n"]},"metadata":{},"sourceType":"module"}