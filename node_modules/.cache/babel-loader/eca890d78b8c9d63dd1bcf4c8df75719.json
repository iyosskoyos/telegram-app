{"ast":null,"code":"import _slicedToArray from \"/home/chilly/Projects/Capacitor/telegram-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/chilly/Projects/Capacitor/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/Message/Media/WebPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { accentStyles } from '../../Theme';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { PHOTO_DISPLAY_EXTRA_SMALL_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => _objectSpread({}, accentStyles(theme), {\n  instantViewButton: {\n    width: 260,\n    marginTop: 12\n  }\n});\n\nclass WebPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMedia = () => {\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            messageId = _this$props.messageId,\n            size = _this$props.size,\n            displaySize = _this$props.displaySize,\n            displaySmallSize = _this$props.displaySmallSize,\n            displayExtraSmallSize = _this$props.displayExtraSmallSize,\n            openMedia = _this$props.openMedia;\n      const message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      const content = message.content;\n      if (!content) return null;\n      const web_page = content.web_page;\n      if (!web_page) return null;\n      const site_name = web_page.site_name,\n            title = web_page.title,\n            description = web_page.description,\n            url = web_page.url,\n            photo = web_page.photo,\n            animation = web_page.animation,\n            video = web_page.video,\n            audio = web_page.audio,\n            document = web_page.document,\n            voice_note = web_page.voice_note,\n            video_note = web_page.video_note,\n            sticker = web_page.sticker,\n            type = web_page.type;\n\n      if (sticker) {\n        return [null, React.createElement(Sticker, {\n          chatId: chatId,\n          messageId: messageId,\n          sticker: sticker,\n          openMedia: openMedia,\n          source: StickerSourceEnum.MESSAGE,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        })];\n      }\n\n      if (voice_note) {\n        return [null, React.createElement(VoiceNote, {\n          chatId: chatId,\n          messageId: messageId,\n          voiceNote: voice_note,\n          openMedia: openMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        })];\n      }\n\n      if (video_note) {\n        return [null, React.createElement(VideoNote, {\n          chatId: chatId,\n          messageId: messageId,\n          videoNote: video_note,\n          openMedia: openMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })];\n      }\n\n      if (audio) {\n        return [null, React.createElement(Audio, {\n          chatId: chatId,\n          messageId: messageId,\n          audio: audio,\n          openMedia: openMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        })];\n      }\n\n      if (document) {\n        return [null, React.createElement(Document, {\n          chatId: chatId,\n          messageId: messageId,\n          document: document,\n          openMedia: openMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        })];\n      }\n\n      if (animation) {\n        const animationSrc = getSrc(animation.animation);\n\n        if (animationSrc || animation.thumbnail) {\n          return [null, React.createElement(Animation, {\n            chatId: chatId,\n            messageId: messageId,\n            animation: animation,\n            openMedia: openMedia,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          })];\n        }\n      }\n\n      if (video) {\n        if (video.thumbnail) {\n          return [null, React.createElement(Video, {\n            chatId: chatId,\n            messageId: messageId,\n            video: video,\n            openMedia: openMedia,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          })];\n        }\n      }\n\n      if (photo) {\n        const photoSize = getSize(photo.sizes, size);\n        const smallPhoto = (type === 'article' || type === 'photo') && (site_name || title || description) && photoSize && photoSize.width === photoSize.height;\n        const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n        const style = smallPhoto || extraSmallPhoto ? {\n          float: 'right',\n          marginLeft: 6\n        } : {};\n        return [smallPhoto ? React.createElement(Photo, {\n          displaySize: extraSmallPhoto ? displayExtraSmallSize : displaySmallSize,\n          style: style,\n          chatId: chatId,\n          messageId: messageId,\n          photo: photo,\n          openMedia: openMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }) : null, !smallPhoto ? React.createElement(Photo, {\n          chatId: chatId,\n          messageId: messageId,\n          photo: photo,\n          openMedia: openMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }) : null];\n      }\n\n      return [null, null];\n    };\n\n    this.handleInstantViewClick = async event => {\n      event.preventDefault();\n      event.stopPropagation();\n      const _this$props2 = this.props,\n            chatId = _this$props2.chatId,\n            messageId = _this$props2.messageId;\n      const message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      const content = message.content;\n      if (!content) return null;\n      const web_page = content.web_page;\n      if (!web_page) return null;\n      const url = web_page.url;\n      openInstantView(url);\n    };\n\n    this.getWebPage = () => {\n      const _this$props3 = this.props,\n            classes = _this$props3.classes,\n            chatId = _this$props3.chatId,\n            messageId = _this$props3.messageId,\n            t = _this$props3.t;\n      const message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      const content = message.content;\n      if (!content) return null;\n      const web_page = content.web_page;\n      if (!web_page) return null;\n      const description = web_page.description,\n            instant_view_version = web_page.instant_view_version,\n            site_name = web_page.site_name,\n            title = web_page.title;\n      const webPageContent = React.createElement(React.Fragment, null, site_name && React.createElement(\"div\", {\n        className: classNames('web-page-site-name', classes.accentColorMain),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, site_name), title && React.createElement(\"div\", {\n        className: \"web-page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, title), description && React.createElement(\"div\", {\n        className: \"web-page-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, description));\n\n      const _this$getMedia = this.getMedia(),\n            _this$getMedia2 = _slicedToArray(_this$getMedia, 2),\n            webPageMediaTop = _this$getMedia2[0],\n            webPageMediaBottom = _this$getMedia2[1];\n\n      const webPageInstantView = instant_view_version > 0 && React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: this.handleInstantViewClick,\n        className: classNames(classes.instantViewButton, 'web-page-button'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(SvgIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"path\", {\n        d: \"M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })), t('InstantView'));\n      return React.createElement(React.Fragment, null, webPageMediaTop, webPageContent, webPageMediaBottom, webPageInstantView);\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: \"web-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('web-page-border', classes.accentBackgroundLight),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"web-page-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, this.getWebPage()));\n  }\n\n}\n\nWebPage.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  size: PropTypes.number,\n  displaySize: PropTypes.number,\n  displaySmallSize: PropTypes.number,\n  displayExtraSmallSize: PropTypes.number,\n  openMedia: PropTypes.func\n};\nWebPage.defaultProps = {\n  size: PHOTO_SIZE,\n  displaySize: PHOTO_DISPLAY_SIZE,\n  displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n  displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\nconst enhance = compose(withStyles(styles), withTranslation());\nexport default enhance(WebPage);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/Message/Media/WebPage.js"],"names":["React","PropTypes","classNames","compose","withStyles","withTranslation","Button","SvgIcon","Animation","Audio","Document","Photo","Sticker","StickerSourceEnum","Video","VideoNote","VoiceNote","accentStyles","getSize","getSrc","openInstantView","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_SIZE","MessageStore","styles","theme","instantViewButton","width","marginTop","WebPage","Component","getMedia","props","chatId","messageId","size","displaySize","displaySmallSize","displayExtraSmallSize","openMedia","message","get","content","web_page","site_name","title","description","url","photo","animation","video","audio","document","voice_note","video_note","sticker","type","MESSAGE","animationSrc","thumbnail","photoSize","sizes","smallPhoto","height","extraSmallPhoto","length","style","float","marginLeft","handleInstantViewClick","event","preventDefault","stopPropagation","getWebPage","classes","t","instant_view_version","webPageContent","accentColorMain","webPageMediaTop","webPageMediaBottom","webPageInstantView","render","accentBackgroundLight","propTypes","number","isRequired","func","defaultProps","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { accentStyles } from '../../Theme';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    instantViewButton: {\n        width: 260,\n        marginTop: 12\n    }\n});\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage = () => {\n        const { classes, chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                onClick={this.handleInstantViewClick}\n                className={classNames(classes.instantViewButton, 'web-page-button')}>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getWebPage()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(WebPage);\n"]},"metadata":{},"sourceType":"module"}