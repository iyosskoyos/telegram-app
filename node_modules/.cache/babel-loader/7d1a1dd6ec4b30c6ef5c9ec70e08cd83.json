{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/Popup/ChatInfoDialog.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n  chatInfoRoot: {\n    width: 336\n  },\n  containerRoot: {\n    alignItems: 'start'\n  },\n  dialogRoot: {\n    color: theme.palette.text.primary,\n    zIndex: theme.zIndex.modal\n  },\n  paperRoot: {\n    width: 336\n  }\n});\n\nclass ChatInfoDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chatId: ApplicationStore.dialogChatId\n    };\n\n    this.handleClientUpdateDialogChatId = update => {\n      const chatId = update.chatId;\n      this.setState({\n        chatId\n      });\n    };\n\n    this.handleClose = () => {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateDialogChatId',\n        chatId: 0\n      });\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    const chatId = this.state.chatId;\n    return nextState.chatId !== chatId;\n  }\n\n  componentDidMount() {\n    ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n  }\n\n  componentWillUnmount() {\n    ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const chatId = this.state.chatId;\n    if (!chatId) return null;\n    return React.createElement(Dialog, {\n      open: true,\n      transitionDuration: 0,\n      onClose: this.handleClose,\n      classes: {\n        root: classes.dialogRoot,\n        container: classes.containerRoot,\n        paper: classes.paperRoot\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(ChatInfo, {\n      className: classes.chatInfoRoot,\n      chatId: chatId,\n      popup: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nChatInfoDialog.propTypes = {};\nexport default withStyles(styles)(ChatInfoDialog);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/Popup/ChatInfoDialog.js"],"names":["React","PropTypes","withStyles","Dialog","ChatInfo","ApplicationStore","TdLibController","styles","theme","chatInfoRoot","width","containerRoot","alignItems","dialogRoot","color","palette","text","primary","zIndex","modal","paperRoot","ChatInfoDialog","Component","state","chatId","dialogChatId","handleClientUpdateDialogChatId","update","setState","handleClose","clientUpdate","shouldComponentUpdate","nextProps","nextState","nextContext","componentDidMount","on","componentWillUnmount","removeListener","render","classes","props","root","container","paper","propTypes"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n"]},"metadata":{},"sourceType":"module"}