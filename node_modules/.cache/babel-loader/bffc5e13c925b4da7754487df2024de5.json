{"ast":null,"code":"import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import{compose}from'recompose';import{withTranslation}from'react-i18next';import withStyles from'@material-ui/core/styles/withStyles';import Button from'@material-ui/core/Button';import FormControl from'@material-ui/core/FormControl';import FormHelperText from'@material-ui/core/FormHelperText/FormHelperText';import TextField from'@material-ui/core/TextField';import HeaderProgress from'../ColumnMiddle/HeaderProgress';import{cleanProgressStatus,formatPhoneNumber,isConnecting}from'../../Utils/Common';import ApplicationStore from'../../Stores/ApplicationStore';import TdLibController from'../../Controllers/TdLibController';import'./ConfirmCodeControl.css';var styles={buttonLeft:{marginRight:'8px',marginTop:'16px'},buttonRight:{marginLeft:'8px',marginTop:'16px'}};var ConfirmCodeControl=/*#__PURE__*/function(_React$Component){_inherits(ConfirmCodeControl,_React$Component);function ConfirmCodeControl(){var _getPrototypeOf2;var _this;_classCallCheck(this,ConfirmCodeControl);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ConfirmCodeControl)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={connecting:isConnecting(ApplicationStore.connectionState),error:'',loading:false};_this.onUpdateConnectionState=function(update){var state=update.state;_this.setState({connecting:isConnecting(state)});};_this.handleNext=function(){if(_this.code&&_this.isValid(_this.code)){_this.setState({error:''});_this.handleDone();}else{_this.setState({error:'Invalid code. Please try again.'});}};_this.handleDone=function(){var code=_this.code;_this.setState({loading:true});TdLibController.send({'@type':'checkAuthenticationCode',code:code,first_name:'A',last_name:'B'}).then(function(result){}).catch(function(error){var errorString=null;if(error&&error['@type']==='error'&&error.message){errorString=error.message;}else{errorString=JSON.stringify(error);}_this.setState({error:errorString});}).finally(function(){_this.setState({loading:false});});};_this.handleBack=function(){_this.props.onChangePhone();};_this.handleChange=function(e){_this.code=e.target.value;if(_this.code&&_this.codeLength>0&&_this.code.length===_this.codeLength){_this.handleNext();}};_this.handleKeyPress=function(e){if(e.key==='Enter'){e.preventDefault();_this.handleNext();}};return _this;}_createClass(ConfirmCodeControl,[{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('updateConnectionState',this.onUpdateConnectionState);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('updateConnectionState',this.onUpdateConnectionState);}},{key:\"isValid\",value:function isValid(code){var isBad=!code.match(/^[\\d\\-+\\s]+$/);if(!isBad){code=code.replace(/\\D/g,'');if(code.length!==5){isBad=true;}}return!isBad;}},{key:\"getPhoneNumber\",value:function getPhoneNumber(codeInfo){if(!codeInfo)return null;return codeInfo.phone_number;}},{key:\"getCodeLength\",value:function getCodeLength(codeInfo){if(!codeInfo)return 0;if(!codeInfo.type)return 0;switch(codeInfo.type['@type']){case'authenticationCodeTypeCall':{return codeInfo.type.length;}case'authenticationCodeTypeFlashCall':{return 0;}case'authenticationCodeTypeSms':{return codeInfo.type.length;}case'authenticationCodeTypeTelegramMessage':{return codeInfo.type.length;}}return 0;}},{key:\"getSubtitle\",value:function getSubtitle(codeInfo){if(!codeInfo)return'Subtitle';if(!codeInfo.type)return'Subtitle';switch(codeInfo.type['@type']){case'authenticationCodeTypeCall':{return'Telegram dialed your number';}case'authenticationCodeTypeFlashCall':{return'Telegram dialed your number';}case'authenticationCodeTypeSms':{return'We have sent you a message with activation code to your phone. Please enter it below.';}case'authenticationCodeTypeTelegramMessage':{return\"Please enter the code you've just received in your previous Telegram app.\";}}return'Subtitle';}},{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,codeInfo=_this$props.codeInfo,t=_this$props.t;var _this$state=this.state,connecting=_this$state.connecting,loading=_this$state.loading,error=_this$state.error;this.phoneNumber=this.getPhoneNumber(codeInfo);this.codeLength=this.getCodeLength(codeInfo);var subtitle=this.getSubtitle(codeInfo);var title=t('YourCode');if(connecting){title=cleanProgressStatus(t('Connecting'));}else if(this.phoneNumber){title=formatPhoneNumber(this.phoneNumber);}return React.createElement(FormControl,{fullWidth:true},React.createElement(\"div\",{className:\"authorization-header\"},React.createElement(\"span\",{className:\"authorization-header-content\"},title),connecting&&React.createElement(HeaderProgress,null)),React.createElement(\"div\",null,subtitle),React.createElement(TextField,{color:\"primary\",disabled:loading,error:Boolean(error),fullWidth:true,autoFocus:true,label:\"\",margin:\"normal\",maxLength:this.codeLength>0?this.codeLength:256,onChange:this.handleChange,onKeyPress:this.handleKeyPress}),React.createElement(FormHelperText,{id:\"confirm-code-error-text\"},error),React.createElement(\"div\",{className:\"authorization-actions\"},React.createElement(Button,{fullWidth:true,className:classes.buttonLeft,onClick:this.handleBack,disabled:loading},t('Back')),React.createElement(Button,{fullWidth:true,color:\"primary\",className:classes.buttonRight,onClick:this.handleNext,disabled:loading},t('Next'))));}}]);return ConfirmCodeControl;}(React.Component);var enhance=compose(withTranslation(),withStyles(styles,{withTheme:true}));export default enhance(ConfirmCodeControl);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Auth/ConfirmCodeControl.js"],"names":["React","compose","withTranslation","withStyles","Button","FormControl","FormHelperText","TextField","HeaderProgress","cleanProgressStatus","formatPhoneNumber","isConnecting","ApplicationStore","TdLibController","styles","buttonLeft","marginRight","marginTop","buttonRight","marginLeft","ConfirmCodeControl","state","connecting","connectionState","error","loading","onUpdateConnectionState","update","setState","handleNext","code","isValid","handleDone","send","first_name","last_name","then","result","catch","errorString","message","JSON","stringify","finally","handleBack","props","onChangePhone","handleChange","e","target","value","codeLength","length","handleKeyPress","key","preventDefault","on","removeListener","isBad","match","replace","codeInfo","phone_number","type","classes","t","phoneNumber","getPhoneNumber","getCodeLength","subtitle","getSubtitle","title","Boolean","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport HeaderProgress from '../ColumnMiddle/HeaderProgress';\nimport { cleanProgressStatus, formatPhoneNumber, isConnecting } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ConfirmCodeControl.css';\n\nconst styles = {\n    buttonLeft: {\n        marginRight: '8px',\n        marginTop: '16px'\n    },\n    buttonRight: {\n        marginLeft: '8px',\n        marginTop: '16px'\n    }\n};\n\nclass ConfirmCodeControl extends React.Component {\n    state = {\n        connecting: isConnecting(ApplicationStore.connectionState),\n        error: '',\n        loading: false\n    };\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n    }\n\n    onUpdateConnectionState = update => {\n        const { state } = update;\n\n        this.setState({ connecting: isConnecting(state) });\n    };\n\n    handleNext = () => {\n        if (this.code && this.isValid(this.code)) {\n            this.setState({ error: '' });\n            this.handleDone();\n        } else {\n            this.setState({ error: 'Invalid code. Please try again.' });\n        }\n    };\n\n    handleDone = () => {\n        const code = this.code;\n        this.setState({ loading: true });\n        TdLibController.send({\n            '@type': 'checkAuthenticationCode',\n            code: code,\n            first_name: 'A',\n            last_name: 'B'\n        })\n            .then(result => {})\n            .catch(error => {\n                let errorString = null;\n                if (error && error['@type'] === 'error' && error.message) {\n                    errorString = error.message;\n                } else {\n                    errorString = JSON.stringify(error);\n                }\n\n                this.setState({ error: errorString });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    handleBack = () => {\n        this.props.onChangePhone();\n    };\n\n    isValid(code) {\n        let isBad = !code.match(/^[\\d\\-+\\s]+$/);\n        if (!isBad) {\n            code = code.replace(/\\D/g, '');\n            if (code.length !== 5) {\n                isBad = true;\n            }\n        }\n\n        return !isBad;\n    }\n\n    handleChange = e => {\n        this.code = e.target.value;\n\n        if (this.code && this.codeLength > 0 && this.code.length === this.codeLength) {\n            this.handleNext();\n        }\n    };\n\n    handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.handleNext();\n        }\n    };\n\n    getPhoneNumber(codeInfo) {\n        if (!codeInfo) return null;\n        return codeInfo.phone_number;\n    }\n\n    getCodeLength(codeInfo) {\n        if (!codeInfo) return 0;\n        if (!codeInfo.type) return 0;\n\n        switch (codeInfo.type['@type']) {\n            case 'authenticationCodeTypeCall': {\n                return codeInfo.type.length;\n            }\n            case 'authenticationCodeTypeFlashCall': {\n                return 0;\n            }\n            case 'authenticationCodeTypeSms': {\n                return codeInfo.type.length;\n            }\n            case 'authenticationCodeTypeTelegramMessage': {\n                return codeInfo.type.length;\n            }\n        }\n\n        return 0;\n    }\n\n    getSubtitle(codeInfo) {\n        if (!codeInfo) return 'Subtitle';\n        if (!codeInfo.type) return 'Subtitle';\n\n        switch (codeInfo.type['@type']) {\n            case 'authenticationCodeTypeCall': {\n                return 'Telegram dialed your number';\n            }\n            case 'authenticationCodeTypeFlashCall': {\n                return 'Telegram dialed your number';\n            }\n            case 'authenticationCodeTypeSms': {\n                return 'We have sent you a message with activation code to your phone. Please enter it below.';\n            }\n            case 'authenticationCodeTypeTelegramMessage': {\n                return \"Please enter the code you've just received in your previous Telegram app.\";\n            }\n        }\n\n        return 'Subtitle';\n    }\n\n    render() {\n        const { classes, codeInfo, t } = this.props;\n        const { connecting, loading, error } = this.state;\n\n        this.phoneNumber = this.getPhoneNumber(codeInfo);\n        this.codeLength = this.getCodeLength(codeInfo);\n        const subtitle = this.getSubtitle(codeInfo);\n\n        let title = t('YourCode');\n        if (connecting) {\n            title = cleanProgressStatus(t('Connecting'));\n        } else if (this.phoneNumber) {\n            title = formatPhoneNumber(this.phoneNumber);\n        }\n\n        return (\n            <FormControl fullWidth>\n                <div className='authorization-header'>\n                    <span className='authorization-header-content'>{title}</span>\n                    {connecting && <HeaderProgress />}\n                </div>\n                <div>{subtitle}</div>\n                <TextField\n                    color='primary'\n                    disabled={loading}\n                    error={Boolean(error)}\n                    fullWidth\n                    autoFocus\n                    label=''\n                    margin='normal'\n                    maxLength={this.codeLength > 0 ? this.codeLength : 256}\n                    onChange={this.handleChange}\n                    onKeyPress={this.handleKeyPress}\n                />\n                <FormHelperText id='confirm-code-error-text'>{error}</FormHelperText>\n                <div className='authorization-actions'>\n                    <Button fullWidth className={classes.buttonLeft} onClick={this.handleBack} disabled={loading}>\n                        {t('Back')}\n                    </Button>\n                    <Button\n                        fullWidth\n                        color='primary'\n                        className={classes.buttonRight}\n                        onClick={this.handleNext}\n                        disabled={loading}>\n                        {t('Next')}\n                    </Button>\n                </div>\n            </FormControl>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ConfirmCodeControl);\n"]},"metadata":{},"sourceType":"module"}