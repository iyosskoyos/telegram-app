{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/InstantView/Blocks/Embedded.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from 'react-iframe-resizer-super';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n      return {\n        url: null,\n        html: null,\n        prevUrl: props.url,\n        prevHtml: props.html\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.setIframeSource();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const _this$props = this.props,\n          url = _this$props.url,\n          html = _this$props.html;\n\n    if (url !== prevProps.url || html !== prevProps.html) {\n      this.setIframeSource();\n    }\n  }\n\n  setIframeSource() {\n    const _this$props2 = this.props,\n          url = _this$props2.url,\n          html = _this$props2.html;\n    this.setState({\n      url,\n      html\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          url = _this$state.url,\n          html = _this$state.html;\n    const _this$props3 = this.props,\n          width = _this$props3.width,\n          height = _this$props3.height,\n          caption = _this$props3.caption,\n          isFullWidth = _this$props3.isFullWidth,\n          allowScrolling = _this$props3.allowScrolling;\n    const options = {\n      scrolling: allowScrolling\n    };\n    const hasWidthHeight = width > 0 && height > 0;\n    const hasSource = Boolean(url) || Boolean(html);\n    return React.createElement(\"figure\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, hasSource && React.createElement(React.Fragment, null, hasWidthHeight ? React.createElement(\"iframe\", {\n      src: url ? url : null,\n      srcDoc: url ? null : html,\n      width: width > 0 ? width : null,\n      height: height > 0 ? height : null,\n      allowFullScreen: isFullWidth,\n      scrolling: allowScrolling ? 'auto' : 'no',\n      frameBorder: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }) : React.createElement(ReactIframeResizer, {\n      content: html,\n      src: url,\n      iframeResizerOptions: options,\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Caption, {\n      text: caption.text,\n      credit: caption.credit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nEmbedded.propTypes = {\n  url: PropTypes.string.isRequired,\n  html: PropTypes.string.isRequired,\n  posterPhoto: PropTypes.object,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  caption: PropTypes.object.isRequired,\n  isFullWidth: PropTypes.bool.isRequired,\n  allowScrolling: PropTypes.bool.isRequired\n};\nexport default Embedded;","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/InstantView/Blocks/Embedded.js"],"names":["React","PropTypes","ReactIframeResizer","Caption","Embedded","Component","state","getDerivedStateFromProps","props","url","prevUrl","html","prevHtml","componentDidMount","setIframeSource","componentDidUpdate","prevProps","prevState","snapshot","setState","render","width","height","caption","isFullWidth","allowScrolling","options","scrolling","hasWidthHeight","hasSource","Boolean","text","credit","propTypes","string","isRequired","posterPhoto","object","number","bool"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from 'react-iframe-resizer-super';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n"]},"metadata":{},"sourceType":"module"}