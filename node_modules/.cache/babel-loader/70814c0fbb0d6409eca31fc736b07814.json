{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import{EventEmitter}from'events';import Cookies from'universal-cookie';import i18n from'i18next';import LanguageDetector from'i18next-browser-languagedetector';import LocalStorageBackend from'i18next-localstorage-backend';import{initReactI18next}from'react-i18next';import TdLibController from'../Controllers/TdLibController';var defaultLanguage='en';var defaultNamespace='translation';var cookies=new Cookies();var language=cookies.get('i18next')||defaultLanguage;// const detection = {\n//     // order and from where user language should be detected\n//     order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n//\n//     // keys or params to lookup language from\n//     lookupQuerystring: 'lng',\n//     lookupCookie: 'i18next',\n//     lookupLocalStorage: 'i18nextLng',\n//     lookupFromPathIndex: 0,\n//     lookupFromSubdomainIndex: 0,\n//\n//     // cache user language on\n//     caches: ['localStorage', 'cookie']\n// };\ni18n.use(initReactI18next)//.use(LanguageDetector) // passes i18n down to react-i18next\n.init({//detection: detection,\nns:[defaultNamespace,'local'],defaultNS:defaultNamespace,fallbackNS:['local','emoji'],resources:{en:{local:{DeletedMessage:'Deleted message',YourPhone:'Your Phone',StartText:'Please confirm your country code and enter your phone number.',Next:'Next',InvalidPhoneNumber:'Invalid phone number. Please check the number and try again.',More:'More',SendMessage:'Send Message',ChatInfo:'Chat Info',ChannelInfo:'Channel Info',Stickers:'STICKERS',Emoji:'EMOJI',SelectChatToStartMessaging:'Select a chat to start messaging',ViewChannelInfo:'View channel info',ViewGroupInfo:'View group info',ViewProfile:'View profile',GoToMessage:'Go to message',PhotosTitle:'Photos',VideosTitle:'Videos',VoiceTitle:'Voice messages'},emoji:{Search:'Search',NotEmojiFound:'No Emoji Found',ChooseDefaultSkinTone:'Choose your default skin tone',SearchResults:'Search Results',Recent:'Frequently Used',SmileysPeople:'Smileys & People',AnimalsNature:'Animals & Nature',FoodDrink:'Food & Drink',Activity:'Activity',TravelPlaces:'Travel & Places',Objects:'Objects',Symbols:'Symbols',Flags:'Flags',Custom:'Custom'},translation:{AppName:'Telegram',Connecting:'Connecting...',ConnectingToProxy:'Connecting to proxy...',Loading:'Loading...',Updating:'Updating...',WaitingForNetwork:'Waiting for network...'}},ru:{local:{DeletedMessage:'Удаленное сообщение',YourPhone:'Ваш телефон',StartText:'Пожалуйста, укажите код страны и свой номер телефона.',Next:'Далее',InvalidPhoneNumber:'Некорректный номер телефона. Пожалуйста, проверьте номер и попробуйте ещё раз.',More:'Ещё',SendMessage:'Отправить сообщение',ChatInfo:'Информация о чате',ChannelInfo:'Информация о канале',Stickers:'СТИКЕРЫ',Emoji:'ЕМОДЗИ',SelectChatToStartMessaging:'Выберите, кому хотели бы написать',ViewChannelInfo:'Информация о канале',ViewGroupInfo:'Информация о группе',ViewProfile:'Показать профиль',GoToMessage:'Перейти к сообщению',PhotosTitle:'Фотографии',VideosTitle:'Видеозаписи',VoiceTitle:'Голосовые сообщения'},emoji:{Search:'Поиск',NotEmojiFound:'Емодзи не найдены',ChooseDefaultSkinTone:'Выберите тон кожи по умолчанию',SearchResults:'Результаты поиска',Recent:'Часто используемые',SmileysPeople:'Смайлики и люди',AnimalsNature:'Животные и природа',FoodDrink:'Еда и напитки',Activity:'Активность',TravelPlaces:'Путешествия и местности',Objects:'Предметы',Symbols:'Символы',Flags:'Флаги',Custom:'Пользовательские'},translation:{AppName:'Telegram',Connecting:'Соединение...',ConnectingToProxy:'Подключение к прокси...',Loading:'Загрузка...',Updating:'Обновление...',WaitingForNetwork:'Ожидание сети...'}}},lng:language,fallbackLng:defaultLanguage,interpolation:{escapeValue:false},react:{wait:false}});var cache=new LocalStorageBackend(null,{enabled:true,prefix:'i18next_res_',expirationTime:Infinity});var translationDefaultLng=cache.read(defaultLanguage,defaultNamespace,function(err,data){return data;});var translationCurrentLng=cache.read(language,defaultNamespace,function(err,data){return data;});i18n.addResourceBundle(defaultLanguage,defaultNamespace,translationDefaultLng);i18n.addResourceBundle(language,defaultNamespace,translationCurrentLng);var LocalizationStore=/*#__PURE__*/function(_EventEmitter){_inherits(LocalizationStore,_EventEmitter);function LocalizationStore(){var _this;_classCallCheck(this,LocalizationStore);_this=_possibleConstructorReturn(this,_getPrototypeOf(LocalizationStore).call(this));_this.addTdLibListener=function(){TdLibController.addListener('update',_this.onUpdate);TdLibController.addListener('clientUpdate',_this.onClientUpdate);};_this.removeTdLibListener=function(){TdLibController.removeListener('update',_this.onUpdate);TdLibController.removeListener('clientUpdate',_this.onClientUpdate);};_this.onUpdate=function(update){switch(update['@type']){case'updateAuthorizationState':{switch(update.authorization_state['@type']){case'authorizationStateWaitTdlibParameters':TdLibController.send({'@type':'setOption',name:'localization_target',value:{'@type':'optionValueString',value:'android'}});TdLibController.send({'@type':'setOption',name:'language_pack_id',value:{'@type':'optionValueString',value:language}});TdLibController.send({'@type':'getLocalizationTargetInfo',only_local:false}).then(function(result){_this.info=result;TdLibController.clientUpdate({'@type':'clientUpdateLanguageChange',language:language});});break;}break;}case'updateLanguagePackStrings':{// add/remove new strings\n_this.emit('updateLanguagePackStrings',update);break;}}};_this.onClientUpdate=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(update){var _language;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.t0=update['@type'];_context2.next=_context2.t0==='clientUpdateLanguageChange'?3:6;break;case 3:_language=update.language;TdLibController.send({'@type':'getLanguagePackStrings',language_pack_id:_language,keys:[]}).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(result){var cookies,resources;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:cookies=new Cookies();cookies.set('i18next',_language);resources=_this.processStrings(_language,result);_this.cache.save(_language,defaultNamespace,resources);i18n.addResourceBundle(_language,defaultNamespace,resources);_context.next=7;return i18n.changeLanguage(_language);case 7:TdLibController.send({'@type':'setOption',name:'language_pack_id',value:{'@type':'optionValueString',value:_language}});_this.emit('clientUpdateLanguageChange',update);case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}());return _context2.abrupt(\"break\",6);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref.apply(this,arguments);};}();_this.processStrings=function(lng,languagePackStrings){if(!languagePackStrings)return{};var strings=languagePackStrings.strings;if(!strings)return{};var result={};for(var i=0;i<strings.length;i++){var value=strings[i].value;switch(value['@type']){case'languagePackStringValueOrdinary':{result[strings[i].key]=value.value;break;}case'languagePackStringValuePluralized':{//result[strings[i].key] = value.value;\nbreak;}case'languagePackStringValueDeleted':{break;}}}return result;};_this.loadLanguage=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(language){var result,resources;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return TdLibController.send({'@type':'getLanguagePackStrings',language_pack_id:language,keys:[]});case 2:result=_context3.sent;resources=_this.processStrings(language,result);_this.cache.save(language,defaultNamespace,resources);i18n.addResourceBundle(language,defaultNamespace,resources);case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();_this.i18n=i18n;_this.cache=cache;_this.setMaxListeners(Infinity);_this.addTdLibListener();return _this;}return LocalizationStore;}(EventEmitter);var store=new LocalizationStore();window.localization=store;export default store;","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Stores/LocalizationStore.js"],"names":["EventEmitter","Cookies","i18n","LanguageDetector","LocalStorageBackend","initReactI18next","TdLibController","defaultLanguage","defaultNamespace","cookies","language","get","use","init","ns","defaultNS","fallbackNS","resources","en","local","DeletedMessage","YourPhone","StartText","Next","InvalidPhoneNumber","More","SendMessage","ChatInfo","ChannelInfo","Stickers","Emoji","SelectChatToStartMessaging","ViewChannelInfo","ViewGroupInfo","ViewProfile","GoToMessage","PhotosTitle","VideosTitle","VoiceTitle","emoji","Search","NotEmojiFound","ChooseDefaultSkinTone","SearchResults","Recent","SmileysPeople","AnimalsNature","FoodDrink","Activity","TravelPlaces","Objects","Symbols","Flags","Custom","translation","AppName","Connecting","ConnectingToProxy","Loading","Updating","WaitingForNetwork","ru","lng","fallbackLng","interpolation","escapeValue","react","wait","cache","enabled","prefix","expirationTime","Infinity","translationDefaultLng","read","err","data","translationCurrentLng","addResourceBundle","LocalizationStore","addTdLibListener","addListener","onUpdate","onClientUpdate","removeTdLibListener","removeListener","update","authorization_state","send","name","value","only_local","then","result","info","clientUpdate","emit","language_pack_id","keys","set","processStrings","save","changeLanguage","languagePackStrings","strings","i","length","key","loadLanguage","setMaxListeners","store","window","localization"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport LocalStorageBackend from 'i18next-localstorage-backend';\nimport { initReactI18next } from 'react-i18next';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst defaultLanguage = 'en';\nconst defaultNamespace = 'translation';\nconst cookies = new Cookies();\nconst language = cookies.get('i18next') || defaultLanguage;\n\n// const detection = {\n//     // order and from where user language should be detected\n//     order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n//\n//     // keys or params to lookup language from\n//     lookupQuerystring: 'lng',\n//     lookupCookie: 'i18next',\n//     lookupLocalStorage: 'i18nextLng',\n//     lookupFromPathIndex: 0,\n//     lookupFromSubdomainIndex: 0,\n//\n//     // cache user language on\n//     caches: ['localStorage', 'cookie']\n// };\n\ni18n.use(initReactI18next) //.use(LanguageDetector) // passes i18n down to react-i18next\n    .init({\n        //detection: detection,\n        ns: [defaultNamespace, 'local'],\n        defaultNS: defaultNamespace,\n        fallbackNS: ['local', 'emoji'],\n        resources: {\n            en: {\n                local: {\n                    DeletedMessage: 'Deleted message',\n                    YourPhone: 'Your Phone',\n                    StartText: 'Please confirm your country code and enter your phone number.',\n                    Next: 'Next',\n                    InvalidPhoneNumber: 'Invalid phone number. Please check the number and try again.',\n                    More: 'More',\n                    SendMessage: 'Send Message',\n                    ChatInfo: 'Chat Info',\n                    ChannelInfo: 'Channel Info',\n                    Stickers: 'STICKERS',\n                    Emoji: 'EMOJI',\n                    SelectChatToStartMessaging: 'Select a chat to start messaging',\n                    ViewChannelInfo: 'View channel info',\n                    ViewGroupInfo: 'View group info',\n                    ViewProfile: 'View profile',\n                    GoToMessage: 'Go to message',\n                    PhotosTitle: 'Photos',\n                    VideosTitle: 'Videos',\n                    VoiceTitle: 'Voice messages'\n                },\n                emoji: {\n                    Search: 'Search',\n                    NotEmojiFound: 'No Emoji Found',\n                    ChooseDefaultSkinTone: 'Choose your default skin tone',\n                    SearchResults: 'Search Results',\n                    Recent: 'Frequently Used',\n                    SmileysPeople: 'Smileys & People',\n                    AnimalsNature: 'Animals & Nature',\n                    FoodDrink: 'Food & Drink',\n                    Activity: 'Activity',\n                    TravelPlaces: 'Travel & Places',\n                    Objects: 'Objects',\n                    Symbols: 'Symbols',\n                    Flags: 'Flags',\n                    Custom: 'Custom'\n                },\n                translation: {\n                    AppName: 'Telegram',\n                    Connecting: 'Connecting...',\n                    ConnectingToProxy: 'Connecting to proxy...',\n                    Loading: 'Loading...',\n                    Updating: 'Updating...',\n                    WaitingForNetwork: 'Waiting for network...'\n                }\n            },\n            ru: {\n                local: {\n                    DeletedMessage: 'Удаленное сообщение',\n                    YourPhone: 'Ваш телефон',\n                    StartText: 'Пожалуйста, укажите код страны и свой номер телефона.',\n                    Next: 'Далее',\n                    InvalidPhoneNumber:\n                        'Некорректный номер телефона. Пожалуйста, проверьте номер и попробуйте ещё раз.',\n                    More: 'Ещё',\n                    SendMessage: 'Отправить сообщение',\n                    ChatInfo: 'Информация о чате',\n                    ChannelInfo: 'Информация о канале',\n                    Stickers: 'СТИКЕРЫ',\n                    Emoji: 'ЕМОДЗИ',\n                    SelectChatToStartMessaging: 'Выберите, кому хотели бы написать',\n                    ViewChannelInfo: 'Информация о канале',\n                    ViewGroupInfo: 'Информация о группе',\n                    ViewProfile: 'Показать профиль',\n                    GoToMessage: 'Перейти к сообщению',\n                    PhotosTitle: 'Фотографии',\n                    VideosTitle: 'Видеозаписи',\n                    VoiceTitle: 'Голосовые сообщения'\n                },\n                emoji: {\n                    Search: 'Поиск',\n                    NotEmojiFound: 'Емодзи не найдены',\n                    ChooseDefaultSkinTone: 'Выберите тон кожи по умолчанию',\n                    SearchResults: 'Результаты поиска',\n                    Recent: 'Часто используемые',\n                    SmileysPeople: 'Смайлики и люди',\n                    AnimalsNature: 'Животные и природа',\n                    FoodDrink: 'Еда и напитки',\n                    Activity: 'Активность',\n                    TravelPlaces: 'Путешествия и местности',\n                    Objects: 'Предметы',\n                    Symbols: 'Символы',\n                    Flags: 'Флаги',\n                    Custom: 'Пользовательские'\n                },\n                translation: {\n                    AppName: 'Telegram',\n                    Connecting: 'Соединение...',\n                    ConnectingToProxy: 'Подключение к прокси...',\n                    Loading: 'Загрузка...',\n                    Updating: 'Обновление...',\n                    WaitingForNetwork: 'Ожидание сети...'\n                }\n            }\n        },\n        lng: language,\n        fallbackLng: defaultLanguage,\n        interpolation: {\n            escapeValue: false\n        },\n        react: {\n            wait: false\n        }\n    });\n\nconst cache = new LocalStorageBackend(null, {\n    enabled: true,\n    prefix: 'i18next_res_',\n    expirationTime: Infinity\n});\n\nconst translationDefaultLng = cache.read(defaultLanguage, defaultNamespace, (err, data) => {\n    return data;\n});\nconst translationCurrentLng = cache.read(language, defaultNamespace, (err, data) => {\n    return data;\n});\ni18n.addResourceBundle(defaultLanguage, defaultNamespace, translationDefaultLng);\ni18n.addResourceBundle(language, defaultNamespace, translationCurrentLng);\n\nclass LocalizationStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.i18n = i18n;\n        this.cache = cache;\n\n        this.setMaxListeners(Infinity);\n        this.addTdLibListener();\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                switch (update.authorization_state['@type']) {\n                    case 'authorizationStateWaitTdlibParameters':\n                        TdLibController.send({\n                            '@type': 'setOption',\n                            name: 'localization_target',\n                            value: { '@type': 'optionValueString', value: 'android' }\n                        });\n                        TdLibController.send({\n                            '@type': 'setOption',\n                            name: 'language_pack_id',\n                            value: { '@type': 'optionValueString', value: language }\n                        });\n                        TdLibController.send({\n                            '@type': 'getLocalizationTargetInfo',\n                            only_local: false\n                        }).then(result => {\n                            this.info = result;\n\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateLanguageChange',\n                                language: language\n                            });\n                        });\n                        break;\n                }\n                break;\n            }\n            case 'updateLanguagePackStrings': {\n                // add/remove new strings\n\n                this.emit('updateLanguagePackStrings', update);\n                break;\n            }\n        }\n    };\n\n    onClientUpdate = async update => {\n        switch (update['@type']) {\n            case 'clientUpdateLanguageChange': {\n                const { language } = update;\n\n                TdLibController.send({\n                    '@type': 'getLanguagePackStrings',\n                    language_pack_id: language,\n                    keys: []\n                }).then(async result => {\n                    const cookies = new Cookies();\n                    cookies.set('i18next', language);\n\n                    const resources = this.processStrings(language, result);\n\n                    this.cache.save(language, defaultNamespace, resources);\n\n                    i18n.addResourceBundle(language, defaultNamespace, resources);\n\n                    await i18n.changeLanguage(language);\n\n                    TdLibController.send({\n                        '@type': 'setOption',\n                        name: 'language_pack_id',\n                        value: { '@type': 'optionValueString', value: language }\n                    });\n\n                    this.emit('clientUpdateLanguageChange', update);\n                });\n                break;\n            }\n        }\n    };\n\n    processStrings = (lng, languagePackStrings) => {\n        if (!languagePackStrings) return {};\n        const { strings } = languagePackStrings;\n        if (!strings) return {};\n\n        let result = {};\n        for (let i = 0; i < strings.length; i++) {\n            const { value } = strings[i];\n            switch (value['@type']) {\n                case 'languagePackStringValueOrdinary': {\n                    result[strings[i].key] = value.value;\n                    break;\n                }\n                case 'languagePackStringValuePluralized': {\n                    //result[strings[i].key] = value.value;\n                    break;\n                }\n                case 'languagePackStringValueDeleted': {\n                    break;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    loadLanguage = async language => {\n        const result = await TdLibController.send({\n            '@type': 'getLanguagePackStrings',\n            language_pack_id: language,\n            keys: []\n        });\n\n        const resources = this.processStrings(language, result);\n\n        this.cache.save(language, defaultNamespace, resources);\n\n        i18n.addResourceBundle(language, defaultNamespace, resources);\n    };\n}\n\nconst store = new LocalizationStore();\nwindow.localization = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}