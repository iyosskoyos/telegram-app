{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/ColumnMiddle/StickerPreview.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      emoji: null,\n      prevPropsSticker: null\n    };\n\n    this.loadStickerEmojis = sticker => {\n      const file = sticker.sticker;\n      const id = file.id;\n      TdLibController.send({\n        '@type': 'getStickerEmojis',\n        sticker: {\n          '@type': 'inputFileId',\n          id\n        }\n      }).then(result => {\n        if (this.props.sticker === sticker) {\n          this.setState({\n            emoji: result.emojis.join(' ')\n          });\n        }\n      });\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const sticker = props.sticker;\n    const prevPropsSticker = state.prevPropsSticker;\n\n    if (sticker && prevPropsSticker) {\n      return {\n        prevPropsSticker: sticker,\n        emoji: null\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const sticker = this.props.sticker;\n\n    if (sticker && sticker !== prevProps.sticker) {\n      this.loadStickerEmojis(sticker);\n    }\n  }\n\n  componentDidMount() {\n    const sticker = this.props.sticker;\n\n    if (sticker) {\n      this.loadStickerEmojis(sticker);\n    }\n  }\n\n  render() {\n    const sticker = this.props.sticker;\n    const emoji = this.state.emoji;\n    if (!sticker) return null;\n    return React.createElement(\"div\", {\n      className: \"sticker-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sticker-preview-emoji\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, emoji), React.createElement(Sticker, {\n      sticker: sticker,\n      displaySize: STICKER_PREVIEW_DISPLAY_SIZE,\n      source: StickerSourceEnum.PREVIEW,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nStickerPreview.propTypes = {\n  sticker: PropTypes.object\n};\nexport default StickerPreview;","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/ColumnMiddle/StickerPreview.js"],"names":["React","PropTypes","Sticker","StickerSourceEnum","STICKER_PREVIEW_DISPLAY_SIZE","TdLibController","StickerPreview","Component","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","file","id","send","then","result","props","setState","emojis","join","getDerivedStateFromProps","componentDidUpdate","prevProps","prevState","snapshot","componentDidMount","render","PREVIEW","propTypes","object"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,IAAkBC,iBAAlB,QAA2C,0BAA3C;AACA,SAASC,4BAAT,QAA6C,iBAA7C;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,gBAAgB,EAAE;AAFd,KADiC;;AAAA,SAoCzCC,iBApCyC,GAoCrBC,OAAO,IAAI;AAAA,YACVC,IADU,GACDD,OADC,CACnBA,OADmB;AAAA,YAEnBE,EAFmB,GAEZD,IAFY,CAEnBC,EAFmB;AAI3BT,MAAAA,eAAe,CAACU,IAAhB,CAAqB;AACjB,iBAAS,kBADQ;AAEjBH,QAAAA,OAAO,EAAE;AAAE,mBAAS,aAAX;AAA0BE,UAAAA;AAA1B;AAFQ,OAArB,EAGGE,IAHH,CAGQC,MAAM,IAAI;AACd,YAAI,KAAKC,KAAL,CAAWN,OAAX,KAAuBA,OAA3B,EAAoC;AAChC,eAAKO,QAAL,CAAc;AACVV,YAAAA,KAAK,EAAEQ,MAAM,CAACG,MAAP,CAAcC,IAAd,CAAmB,GAAnB;AADG,WAAd;AAGH;AACJ,OATD;AAUH,KAlDwC;AAAA;;AAMzC,SAAOC,wBAAP,CAAgCJ,KAAhC,EAAuCV,KAAvC,EAA8C;AAAA,UAClCI,OADkC,GACtBM,KADsB,CAClCN,OADkC;AAAA,UAElCF,gBAFkC,GAEbF,KAFa,CAElCE,gBAFkC;;AAI1C,QAAIE,OAAO,IAAIF,gBAAf,EAAiC;AAC7B,aAAO;AACHA,QAAAA,gBAAgB,EAAEE,OADf;AAEHH,QAAAA,KAAK,EAAE;AAFJ,OAAP;AAIH;;AAED,WAAO,IAAP;AACH;;AAEDc,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAAA,UACvCd,OADuC,GAC3B,KAAKM,KADsB,CACvCN,OADuC;;AAG/C,QAAIA,OAAO,IAAIA,OAAO,KAAKY,SAAS,CAACZ,OAArC,EAA8C;AAC1C,WAAKD,iBAAL,CAAuBC,OAAvB;AACH;AACJ;;AAEDe,EAAAA,iBAAiB,GAAG;AAAA,UACRf,OADQ,GACI,KAAKM,KADT,CACRN,OADQ;;AAGhB,QAAIA,OAAJ,EAAa;AACT,WAAKD,iBAAL,CAAuBC,OAAvB;AACH;AACJ;;AAkBDgB,EAAAA,MAAM,GAAG;AAAA,UACGhB,OADH,GACe,KAAKM,KADpB,CACGN,OADH;AAAA,UAEGH,KAFH,GAEa,KAAKD,KAFlB,CAEGC,KAFH;AAIL,QAAI,CAACG,OAAL,EAAc,OAAO,IAAP;AAEd,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCH,KAAxC,CADJ,EAEI,oBAAC,OAAD;AACI,MAAA,OAAO,EAAEG,OADb;AAEI,MAAA,WAAW,EAAER,4BAFjB;AAGI,MAAA,MAAM,EAAED,iBAAiB,CAAC0B,OAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAUH;;AApEwC;;AAuE7CvB,cAAc,CAACwB,SAAf,GAA2B;AACvBlB,EAAAA,OAAO,EAAEX,SAAS,CAAC8B;AADI,CAA3B;AAIA,eAAezB,cAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n"]},"metadata":{},"sourceType":"module"}