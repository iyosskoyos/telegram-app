{"ast":null,"code":"import _slicedToArray from \"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/me-admin/Downloads/my-app/src/Components/ColumnRight/ChatDetails.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { getChatUsername, getChatPhoneNumber, getChatBio, isGroupChat, getGroupChatMembers, getChatFullInfo, isPrivateChat, getChatUserId, isMeChat } from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n  closeIconButton: {\n    margin: '8px -2px 8px 12px'\n  },\n  nested: {// paddingLeft: theme.spacing.unit * 4,\n  },\n  close: {\n    padding: theme.spacing.unit / 2\n  },\n  listItem: {\n    padding: '11px 22px'\n  }\n});\n\nclass ChatDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateBasicGroupFullInfo = update => {\n      const chat = ChatStore.get(this.props.chatId);\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n        this.forceUpdate(); // update bio\n      }\n    };\n\n    this.onUpdateSupergroupFullInfo = update => {\n      const chat = ChatStore.get(this.props.chatId);\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n        this.forceUpdate(); // update bio\n      }\n    };\n\n    this.onUpdateUserFullInfo = update => {\n      const chat = ChatStore.get(this.props.chatId);\n      if (!chat) return;\n\n      if (chat.type && (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') && chat.type.user_id === update.user_id) {\n        this.forceUpdate(); // update bio\n      }\n    };\n\n    this.onUpdateUserStatus = update => {\n      if (this.members.has(update.user_id)) {\n        this.forceUpdate();\n      }\n    };\n\n    this.loadContent = () => {\n      this.loadChatContents();\n    };\n\n    this.loadChatContents = () => {\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            popup = _this$props.popup;\n      const store = FileStore.getStore();\n      loadChatsContent(store, [chatId]);\n      const members = getGroupChatMembers(chatId).map(x => x.user_id);\n      loadUsersContent(store, members);\n\n      if (popup) {\n        getChatFullInfo(chatId);\n      }\n    };\n\n    this.handleUsernameHint = () => {\n      const _this$props2 = this.props,\n            t = _this$props2.t,\n            chatId = _this$props2.chatId;\n      const username = getChatUsername(chatId);\n      if (!username) return;\n      const telegramUrlOption = OptionStore.get('t_me_url');\n      const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n      copy(usernameLink + username);\n      const key = \"\".concat(chatId, \"_copy_username\");\n      const message = t('TextCopied');\n      const action = null;\n      this.handleScheduledAction(key, message, action);\n    };\n\n    this.handleScheduledAction = (key, message, action) => {\n      if (!key) return;\n      const _this$props3 = this.props,\n            enqueueSnackbar = _this$props3.enqueueSnackbar,\n            classes = _this$props3.classes;\n      if (!enqueueSnackbar) return;\n      const TRANSITION_DELAY = 150;\n\n      if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n        enqueueSnackbar(message, {\n          autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n          action: [React.createElement(IconButton, {\n            key: \"close\",\n            \"aria-label\": \"Close\",\n            color: \"inherit\",\n            className: classes.close,\n            onClick: () => ApplicationStore.removeScheduledAction(key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }, React.createElement(CloseIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }))]\n        });\n      }\n    };\n\n    this.handlePhoneHint = () => {\n      const _this$props4 = this.props,\n            t = _this$props4.t,\n            chatId = _this$props4.chatId;\n      const phoneNumber = getChatPhoneNumber(chatId);\n      if (!phoneNumber) return;\n      copy(formatPhoneNumber(phoneNumber));\n      const key = \"\".concat(chatId, \"_copy_phone\");\n      const message = t('PhoneCopied');\n      const action = null;\n      this.handleScheduledAction(key, message, action);\n    };\n\n    this.handleHeaderClick = () => {\n      this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    this.handleOpenViewer = () => {\n      const _this$props5 = this.props,\n            chatId = _this$props5.chatId,\n            popup = _this$props5.popup;\n      const chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.photo) return;\n      setProfileMediaViewerContent({\n        chatId: chatId\n      });\n\n      if (popup) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateDialogChatId',\n          chatId: 0\n        });\n      }\n    };\n\n    this.handleOpenChat = () => {\n      const _this$props6 = this.props,\n            chatId = _this$props6.chatId,\n            popup = _this$props6.popup;\n      openChat(chatId, null, false);\n\n      if (popup) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateDialogChatId',\n          chatId: 0\n        });\n      }\n    };\n\n    this.handleOpenUser = userId => {\n      openUser(userId, true);\n    };\n\n    this.getContentHeight = () => {\n      if (!this.chatDetailsListRef) return 0;\n      return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    console.log('ChatDetails.ctor', this.props.counters);\n    this.chatDetailsListRef = React.createRef();\n    const _chatId = this.props.chatId;\n    this.members = new Map();\n    this.state = {\n      prevChatId: _chatId\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.chatId !== state.prevChatId) {\n      return {\n        prevChatId: props.chatId\n      };\n    }\n\n    return null;\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    const chatId = this.props.chatId;\n    const list = this.chatDetailsListRef.current;\n    const scrollTop = list.scrollTop,\n          scrollHeight = list.scrollHeight,\n          offsetHeight = list.offsetHeight;\n    const snapshot = {\n      scrollTop,\n      scrollHeight,\n      offsetHeight\n    }; // console.log(\n    //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n    // );\n\n    return snapshot;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const _this$props7 = this.props,\n          chatId = _this$props7.chatId,\n          theme = _this$props7.theme,\n          counters = _this$props7.counters,\n          migratedCounters = _this$props7.migratedCounters;\n\n    if (nextProps.chatId !== chatId) {\n      return true;\n    }\n\n    if (nextProps.counters !== counters) {\n      return true;\n    }\n\n    if (nextProps.migratedCounters !== migratedCounters) {\n      return true;\n    }\n\n    if (nextProps.theme !== theme) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const chatId = this.props.chatId;\n\n    if (prevProps.chatId !== chatId) {\n      this.loadContent();\n    }\n\n    const list = this.chatDetailsListRef.current;\n    const scrollTop = snapshot.scrollTop,\n          scrollHeight = snapshot.scrollHeight,\n          offsetHeight = snapshot.offsetHeight;\n\n    if (prevProps.chatId === chatId) {\n      list.scrollTop = scrollTop;\n    } else {\n      list.scrollTop = 0;\n    }\n  }\n\n  componentDidMount() {\n    console.log('ChatDetails.componentDidMount');\n    this.loadContent();\n    UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n    SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n  }\n\n  componentWillUnmount() {\n    UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n    BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n    SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n  }\n\n  render() {\n    const _this$props8 = this.props,\n          backButton = _this$props8.backButton,\n          className = _this$props8.className,\n          chatId = _this$props8.chatId,\n          classes = _this$props8.classes,\n          onClose = _this$props8.onClose,\n          onOpenGroupInCommon = _this$props8.onOpenGroupInCommon,\n          onOpenSharedAudios = _this$props8.onOpenSharedAudios,\n          onOpenSharedDocuments = _this$props8.onOpenSharedDocuments,\n          onOpenSharedLinks = _this$props8.onOpenSharedLinks,\n          onOpenSharedMedia = _this$props8.onOpenSharedMedia,\n          onOpenSharedPhotos = _this$props8.onOpenSharedPhotos,\n          onOpenSharedVideos = _this$props8.onOpenSharedVideos,\n          onOpenSharedVoiceNotes = _this$props8.onOpenSharedVoiceNotes,\n          popup = _this$props8.popup,\n          t = _this$props8.t;\n    let _this$props9 = this.props,\n        counters = _this$props9.counters,\n        migratedCounters = _this$props9.migratedCounters;\n    counters = counters || [0, 0, 0, 0, 0, 0];\n    migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n    console.log('ChatDetails.render counters', counters, migratedCounters);\n\n    const _counters$map = counters.map((el, i) => el + migratedCounters[i]),\n          _counters$map2 = _slicedToArray(_counters$map, 6),\n          photoCount = _counters$map2[0],\n          videoCount = _counters$map2[1],\n          documentCount = _counters$map2[2],\n          audioCount = _counters$map2[3],\n          urlCount = _counters$map2[4],\n          voiceAndVideoNoteCount = _counters$map2[5];\n\n    const chat = ChatStore.get(chatId);\n\n    if (!chat) {\n      return React.createElement(\"div\", {\n        className: \"chat-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(ChatDetailsHeader, {\n        onClose: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        ref: this.chatDetailsListRef,\n        className: \"chat-details-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }));\n    }\n\n    let groupInCommonCount = 0;\n\n    if (isPrivateChat(chatId)) {\n      const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n      groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n    }\n\n    const username = getChatUsername(chatId);\n    const phoneNumber = getChatPhoneNumber(chatId);\n    const bio = getChatBio(chatId);\n    const isGroup = isGroupChat(chatId);\n    const isMe = isMeChat(chatId);\n    const members = getGroupChatMembers(chatId);\n    const users = [];\n    this.members = new Map();\n    members.forEach(member => {\n      const user = UserStore.get(member.user_id);\n\n      if (user) {\n        this.members.set(user.id, user.id);\n        users.push(user);\n      }\n    });\n    const sortedUsers = users.sort((x, y) => {\n      return getUserStatusOrder(y) - getUserStatusOrder(x);\n    });\n    const items = sortedUsers.map(user => React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(UserControl, {\n      userId: user.id,\n      onSelect: this.handleOpenUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    })));\n    const photo = chat.photo;\n    const content = React.createElement(React.Fragment, null, React.createElement(ChatDetailsHeader, {\n      chatId: chatId,\n      backButton: backButton,\n      onClose: onClose,\n      onClick: this.handleHeaderClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      ref: this.chatDetailsListRef,\n      className: \"chat-details-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat-details-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(ChatControl, {\n      chatId: chatId,\n      showStatus: popup,\n      showSavedMessages: !popup,\n      onTileSelect: photo ? this.handleOpenViewer : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })), (username || phoneNumber || bio) && React.createElement(React.Fragment, null, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, username && React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: this.handleUsernameHint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(AlternateEmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, username),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    })), phoneNumber && React.createElement(React.Fragment, null, React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: this.handlePhoneHint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(CallIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, formatPhoneNumber(phoneNumber)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }))), bio && React.createElement(ListItem, {\n      className: classes.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(ErrorOutlineIcon, {\n      className: \"chat-details-info-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: bio,\n      style: {\n        whiteSpace: 'pre-wrap',\n        wordWrap: 'break-word'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    })))), (!isMe || isGroup || popup && !isGroup) && React.createElement(React.Fragment, null, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, !isMe && React.createElement(NotificationsListItem, {\n      chatId: chatId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }), isGroup && React.createElement(MoreListItem, {\n      chatId: chatId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }), popup && !isGroup && React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: this.handleOpenChat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      inset: true,\n      primary: React.createElement(Typography, {\n        color: \"primary\",\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, t('SendMessage').toUpperCase()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    })))), (photoCount > 0 || videoCount > 0 || documentCount > 0 || audioCount > 0 || urlCount > 0 || voiceAndVideoNoteCount > 0 || groupInCommonCount > 0) && React.createElement(React.Fragment, null, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, photoCount > 0 && React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: onOpenSharedPhotos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(PhotoIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, photoCount === 1 ? '1 photo' : \"\".concat(photoCount, \" photos\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    })), videoCount > 0 && React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: onOpenSharedVideos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(VideocamIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, videoCount === 1 ? '1 video' : \"\".concat(videoCount, \" videos\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    })), documentCount > 0 && React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: onOpenSharedDocuments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(InsertDriveFileIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, documentCount === 1 ? '1 file' : \"\".concat(documentCount, \" files\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    })), audioCount > 0 && React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: onOpenSharedAudios,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(HeadsetIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, audioCount === 1 ? '1 audio file' : \"\".concat(audioCount, \" audio files\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    })), urlCount > 0 && React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: onOpenSharedLinks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(InsertLinkIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, urlCount === 1 ? '1 shared link' : \"\".concat(urlCount, \" shared links\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    })), voiceAndVideoNoteCount > 0 && React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: onOpenSharedVoiceNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, React.createElement(MicIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, voiceAndVideoNoteCount === 1 ? '1 voice message' : \"\".concat(voiceAndVideoNoteCount, \" voice messages\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    })), groupInCommonCount > 0 && React.createElement(ListItem, {\n      button: true,\n      className: classes.listItem,\n      onClick: onOpenGroupInCommon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, React.createElement(GroupIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      inset: true,\n      primary: React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, groupInCommonCount === 1 ? '1 group in common' : \"\".concat(groupInCommonCount, \" groups in common\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    })))), items.length > 0 && React.createElement(React.Fragment, null, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, items))));\n    return popup ? React.createElement(React.Fragment, null, content) : React.createElement(\"div\", {\n      className: classNames('chat-details', className),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nChatDetails.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  popup: PropTypes.bool,\n  onClose: PropTypes.func,\n  onOpenGroupInCommon: PropTypes.func,\n  onOpenSharedDocuments: PropTypes.func,\n  onOpenSharedMedia: PropTypes.func,\n  onOpenSharedLinks: PropTypes.func,\n  onOpenSharedPhotos: PropTypes.func,\n  onOpenSharedVideos: PropTypes.func,\n  onOpenSharedVoiceNotes: PropTypes.func\n};\nconst enhance = compose(withSaveRef(), withTranslation(), withStyles(styles, {\n  withTheme: true\n}), withSnackbar, withRestoreRef());\nexport default enhance(ChatDetails);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/ColumnRight/ChatDetails.js"],"names":["React","PropTypes","copy","classNames","compose","withStyles","withSnackbar","withTranslation","AlternateEmailIcon","GroupIcon","CallIcon","CloseIcon","Divider","ErrorOutlineIcon","HeadsetIcon","IconButton","InsertDriveFileIcon","InsertLinkIcon","List","ListItem","ListItemIcon","ListItemText","MicIcon","PhotoIcon","Typography","VideocamIcon","UserControl","ChatControl","ChatDetailsHeader","NotificationsListItem","MoreListItem","getChatUsername","getChatPhoneNumber","getChatBio","isGroupChat","getGroupChatMembers","getChatFullInfo","isPrivateChat","getChatUserId","isMeChat","getUserStatusOrder","loadUsersContent","loadChatsContent","formatPhoneNumber","openChat","openUser","setProfileMediaViewerContent","withRestoreRef","withSaveRef","NOTIFICATION_AUTO_HIDE_DURATION_MS","ChatStore","UserStore","BasicGroupStore","SupergroupStore","OptionStore","FileStore","ApplicationStore","TdLibController","styles","theme","closeIconButton","margin","nested","close","padding","spacing","unit","listItem","ChatDetails","Component","constructor","props","onUpdateBasicGroupFullInfo","update","chat","get","chatId","type","basic_group_id","forceUpdate","onUpdateSupergroupFullInfo","supergroup_id","onUpdateUserFullInfo","user_id","onUpdateUserStatus","members","has","loadContent","loadChatContents","popup","store","getStore","map","x","handleUsernameHint","t","username","telegramUrlOption","usernameLink","value","key","message","action","handleScheduledAction","enqueueSnackbar","classes","TRANSITION_DELAY","addScheduledAction","autoHideDuration","removeScheduledAction","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","current","scrollTop","handleOpenViewer","photo","clientUpdate","handleOpenChat","handleOpenUser","userId","getContentHeight","clientHeight","console","log","counters","createRef","Map","state","prevChatId","getDerivedStateFromProps","getSnapshotBeforeUpdate","prevProps","prevState","list","scrollHeight","offsetHeight","snapshot","shouldComponentUpdate","nextProps","nextState","migratedCounters","componentDidUpdate","componentDidMount","on","componentWillUnmount","removeListener","render","backButton","className","onClose","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedMedia","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","el","i","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","fullInfo","getFullInfo","group_in_common_count","bio","isGroup","isMe","users","forEach","member","user","set","id","push","sortedUsers","sort","y","items","content","whiteSpace","wordWrap","toUpperCase","length","propTypes","number","isRequired","bool","func","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n"]},"metadata":{},"sourceType":"module"}