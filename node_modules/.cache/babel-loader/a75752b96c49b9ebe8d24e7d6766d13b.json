{"ast":null,"code":"import _defineProperty from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import withStyles from'@material-ui/core/styles/withStyles';import{ANIMATION_DURATION_200MS}from'./../../../Constants';import'./PollPercentage.css';var styles=function styles(theme){return{pollPercentageSubtitle:{color:theme.palette.text.secondary}};};var PollPercentage=/*#__PURE__*/function(_React$Component){_inherits(PollPercentage,_React$Component);function PollPercentage(props){var _this;_classCallCheck(this,PollPercentage);_this=_possibleConstructorReturn(this,_getPrototypeOf(PollPercentage).call(this,props));_this.updateAnimation=function(){console.log('PollPercentage.updateAnimation');_this.stopAnimation();_this.handle=requestAnimationFrame(_this.onAnimationFrame);};_this.stopAnimation=function(){if(!_this.handle)return;cancelAnimationFrame(_this.handle);_this.handle=null;};_this.onAnimationFrame=function(){var _this$state=_this.state,startTime=_this$state.startTime,from=_this$state.from,to=_this$state.to;console.log('PollPercentage.onAnimationFrame');var timePassed=Date.now()-startTime;if(timePassed>=ANIMATION_DURATION_200MS){_this.setState({animated:to});_this.stopAnimation();}else{var animated=from+Math.floor((to-from)*timePassed/ANIMATION_DURATION_200MS);_this.setState({animated:animated});_this.handle=requestAnimationFrame(_this.onAnimationFrame);}};_this.handle=null;var value=props.value;_this.state={from:value,to:value,animated:value,prevPropsValue:value};return _this;}_createClass(PollPercentage,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState,nextContext){var _this$props=this.props,closed=_this$props.closed,theme=_this$props.theme,value=_this$props.value;var animated=this.state.animated;console.log('PollPercentage.shouldComponentUpdate start');if(closed!==nextProps.closed){return true;}if(theme!==nextProps.theme){return true;}if(value!==nextProps.value){return true;}if(animated!==nextState.animated){return true;}console.log('PollPercentage.shouldComponentUpdate end with false');return false;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){if(prevProps.value!==this.props.value){this.updateAnimation();}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.stopAnimation();}},{key:\"render\",value:function render(){var _this$props2=this.props,chosen=_this$props2.chosen,classes=_this$props2.classes,closed=_this$props2.closed,onClick=_this$props2.onClick;var animated=this.state.animated;return React.createElement(\"div\",{className:classNames('poll-percentage',_defineProperty({},classes.pollPercentageSubtitle,!chosen))},!closed&&chosen?React.createElement(\"a\",{className:\"poll-percentage-action\",onClick:onClick},animated+'%'):React.createElement(React.Fragment,null,animated+'%'));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.value!==state.prevPropsValue){return{startTime:Date.now(),from:state.animated,to:props.value,prevPropsValue:props.value};}return null;}}]);return PollPercentage;}(React.Component);export default withStyles(styles,{withTheme:true})(PollPercentage);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Message/Media/PollPercentage.js"],"names":["React","classNames","withStyles","ANIMATION_DURATION_200MS","styles","theme","pollPercentageSubtitle","color","palette","text","secondary","PollPercentage","props","updateAnimation","console","log","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","state","startTime","from","to","timePassed","Date","now","setState","animated","Math","floor","value","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","chosen","classes","onClick","Component","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nconst styles = theme => ({\n    pollPercentageSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        console.log('PollPercentage.shouldComponentUpdate start');\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        console.log('PollPercentage.shouldComponentUpdate end with false');\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        console.log('PollPercentage.updateAnimation');\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n        console.log('PollPercentage.onAnimationFrame');\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, classes, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { [classes.pollPercentageSubtitle]: !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(PollPercentage);\n"]},"metadata":{},"sourceType":"module"}