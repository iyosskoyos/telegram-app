{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React,{Component}from'react';import Cookies from'universal-cookie';import{compose}from'recompose';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import DialogTitle from'@material-ui/core/DialogTitle';import packageJson from'../package.json';import withLanguage from'./Language';import withTheme from'./Theme';import AuthFormControl from'./Components/Auth/AuthFormControl';import InactivePage from'./Components/InactivePage';import StubPage from'./Components/StubPage';import registerServiceWorker from'./registerServiceWorker';import{OPTIMIZATIONS_FIRST_START}from'./Constants';import ChatStore from'./Stores/ChatStore';import UserStore from'./Stores/UserStore';import ApplicationStore from'./Stores/ApplicationStore';import TdLibController from'./Controllers/TdLibController';import'./TelegramApp.css';var MainPage=React.lazy(function(){return import('./Components/MainPage');});var styles=function styles(theme){return{'@global':{a:{color:theme.palette.primary.main},code:{color:theme.palette.primary.dark}}};};var TelegramApp=/*#__PURE__*/function(_Component){_inherits(TelegramApp,_Component);function TelegramApp(props){var _this;_classCallCheck(this,TelegramApp);_this=_possibleConstructorReturn(this,_getPrototypeOf(TelegramApp).call(this,props));_this.onClientUpdateDatabaseExists=function(update){var exists=update.exists;if(!exists){_this.setState({authorizationState:{'@type':'authorizationStateWaitTdlib'},databaseExists:exists});}};_this.onUpdate=function(update){if(OPTIMIZATIONS_FIRST_START){if(!_this.checkServiceWorker){_this.checkServiceWorker=true;var cookieEnabled=navigator.cookieEnabled;if(cookieEnabled){var cookies=new Cookies();var register=cookies.get('register');if(!register){registerServiceWorker();}}}}};_this.onUpdateFatalError=function(update){_this.setState({fatalError:true});};_this.onUpdateAuthorizationState=function(update){var authorizationState=update.authorization_state;_this.setState({authorizationState:authorizationState});if(!window.hasFocus)return;if(!authorizationState)return;TdLibController.send({'@type':'setOption',name:'online',value:{'@type':'optionValueBoolean',value:true}});};_this.onClientUpdateAppInactive=function(update){_this.setState({inactive:true});};_this.handleChangePhone=function(){_this.setState({authorizationState:{'@type':'authorizationStateWaitPhoneNumber'}});};_this.handleDragOver=function(event){event.preventDefault();event.stopPropagation();};_this.handleDrop=function(event){event.preventDefault();event.stopPropagation();};_this.handleRefresh=function(){_this.setState({fatalError:false});window.location.reload();};_this.handleDestroy=function(){_this.setState({fatalError:false});TdLibController.send({'@type':'destroy'});};_this.handleKeyDown=function(event){//console.log('KeyDown', event);\n};console.log(\"Start Telegram Web \".concat(packageJson.version));_this.state={authorizationState:null,databaseExists:true,inactive:false,fatalError:false};return _this;}_createClass(TelegramApp,[{key:\"componentWillMount\",value:function componentWillMount(){var location=this.props.location;TdLibController.init(location);}},{key:\"componentDidMount\",value:function componentDidMount(){TdLibController.addListener('update',this.onUpdate);ApplicationStore.on('clientUpdateAppInactive',this.onClientUpdateAppInactive);ApplicationStore.on('clientUpdateDatabaseExists',this.onClientUpdateDatabaseExists);ApplicationStore.on('updateAuthorizationState',this.onUpdateAuthorizationState);ApplicationStore.on('updateFatalError',this.onUpdateFatalError);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){TdLibController.removeListener('update',this.onUpdate);ApplicationStore.removeListener('clientUpdateAppInactive',this.onClientUpdateAppInactive);ApplicationStore.removeListener('clientUpdateDatabaseExists',this.onClientUpdateDatabaseExists);ApplicationStore.removeListener('updateAuthorizationState',this.onUpdateAuthorizationState);ApplicationStore.removeListener('updateFatalError',this.onUpdateFatalError);}},{key:\"render\",value:function render(){var t=this.props.t;var _this$state=this.state,inactive=_this$state.inactive,authorizationState=_this$state.authorizationState,databaseExists=_this$state.databaseExists,fatalError=_this$state.fatalError;var loading=t('Loading').replace('...','');//let page = <StubPage title={loading} />;\nvar page=React.createElement(React.Suspense,{fallback:React.createElement(StubPage,{title:\"\"})},React.createElement(MainPage,null));if(inactive){page=React.createElement(InactivePage,null);}else if(authorizationState){switch(authorizationState['@type']){case'authorizationStateClosed':case'authorizationStateClosing':case'authorizationStateLoggingOut':case'authorizationStateReady':{page=React.createElement(React.Suspense,{fallback:React.createElement(StubPage,{title:\"\"})},React.createElement(MainPage,null));break;}case'authorizationStateWaitCode':case'authorizationStateWaitPassword':case'authorizationStateWaitPhoneNumber':case'authorizationStateWaitTdlib':page=React.createElement(AuthFormControl,{authorizationState:authorizationState,onChangePhone:this.handleChangePhone});break;case'authorizationStateWaitEncryptionKey':case'authorizationStateWaitTdlibParameters':{if(!databaseExists){page=React.createElement(AuthFormControl,{authorizationState:authorizationState,onChangePhone:this.handleChangePhone});}break;}}}return React.createElement(\"div\",{id:\"app\",onDragOver:this.handleDragOver,onDrop:this.handleDrop,onKeyDown:this.handleKeyDown},page,React.createElement(Dialog,{transitionDuration:0,open:fatalError,onClose:this.handleRefresh,\"aria-labelledby\":\"fatal-error-dialog-title\",\"aria-describedby\":\"fatal-error-dialog-description\"},React.createElement(DialogTitle,{id:\"fatal-error-dialog-title\"},\"Telegram\"),React.createElement(DialogContent,null,React.createElement(DialogContentText,{id:\"fatal-error-dialog-description\"},\"Oops! Something went wrong. We need to refresh this page.\")),React.createElement(DialogActions,null,React.createElement(Button,{onClick:this.handleDestroy,color:\"primary\"},\"Log out\"),React.createElement(Button,{onClick:this.handleRefresh,color:\"primary\",autoFocus:true},\"Refresh\"))));}}]);return TelegramApp;}(Component);var keyMap=new Map();window.keyMap=keyMap;function openPinnedChat(_x){return _openPinnedChat.apply(this,arguments);}function _openPinnedChat(){_openPinnedChat=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(index){var chats,pinnedIndex,i,chat;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return TdLibController.send({'@type':'getChats',offset_order:'9223372036854775807',offset_chat_id:0,limit:10});case 2:chats=_context2.sent;if(!chats){_context2.next=15;break;}pinnedIndex=-1;i=0;case 6:if(!(i<chats.chat_ids.length)){_context2.next=15;break;}chat=ChatStore.get(chats.chat_ids[i]);if(chat&&chat.is_pinned){pinnedIndex++;}if(!(pinnedIndex===index)){_context2.next=12;break;}TdLibController.setChatId(chat.id);return _context2.abrupt(\"return\");case 12:i++;_context2.next=6;break;case 15:case\"end\":return _context2.stop();}}},_callee2);}));return _openPinnedChat.apply(this,arguments);}document.addEventListener('keyup',function(event){keyMap.delete(event.key);//console.log('keyup key=' + event.key, keyMap);\n});document.addEventListener('keydown',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var authorizationState,chat;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:keyMap.set(event.key,event.key);//console.log('keydown key=' + event.key, event.altKey, event.ctrlKey, event, keyMap);\nauthorizationState=ApplicationStore.authorizationState;if(authorizationState){_context.next=4;break;}return _context.abrupt(\"return\");case 4:if(!(authorizationState['@type']!=='authorizationStateReady')){_context.next=6;break;}return _context.abrupt(\"return\");case 6:if(!(keyMap.size>3)){_context.next=8;break;}return _context.abrupt(\"return\");case 8:if(!(event.altKey&&event.ctrlKey)){_context.next=39;break;}_context.t0=event.key;_context.next=_context.t0==='0'?12:_context.t0==='1'?19:_context.t0==='2'?23:_context.t0==='3'?27:_context.t0==='4'?31:_context.t0==='5'?35:39;break;case 12:event.preventDefault();event.stopPropagation();_context.next=16;return TdLibController.send({'@type':'createPrivateChat',user_id:UserStore.getMyId(),force:true});case 16:chat=_context.sent;if(chat){TdLibController.setChatId(chat.id);}return _context.abrupt(\"break\",39);case 19:event.preventDefault();event.stopPropagation();openPinnedChat(0);return _context.abrupt(\"break\",39);case 23:event.preventDefault();event.stopPropagation();openPinnedChat(1);return _context.abrupt(\"break\",39);case 27:event.preventDefault();event.stopPropagation();openPinnedChat(2);return _context.abrupt(\"break\",39);case 31:event.preventDefault();event.stopPropagation();openPinnedChat(3);return _context.abrupt(\"break\",39);case 35:event.preventDefault();event.stopPropagation();openPinnedChat(4);return _context.abrupt(\"break\",39);case 39:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref.apply(this,arguments);};}());window.hasFocus=true;// set offline on page lost focus\n// console.log('[ns] window.onblur attach');\nwindow.onblur=function(){keyMap.clear();window.hasFocus=false;TdLibController.clientUpdate({'@type':'clientUpdateFocusWindow',focused:false});};// set online on page get focus\n// console.log('[ns] window.onfocus attach');\nwindow.onfocus=function(){keyMap.clear();window.hasFocus=true;TdLibController.clientUpdate({'@type':'clientUpdateFocusWindow',focused:true});};// disable back navigation\nwindow.history.pushState(null,null,window.location.href);window.onpopstate=function(){window.history.go(1);};var enhance=compose(withLanguage,withTranslation(),withTheme,withStyles(styles));export default enhance(TelegramApp);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/TelegramApp.js"],"names":["React","Component","Cookies","compose","withStyles","withTranslation","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","packageJson","withLanguage","withTheme","AuthFormControl","InactivePage","StubPage","registerServiceWorker","OPTIMIZATIONS_FIRST_START","ChatStore","UserStore","ApplicationStore","TdLibController","MainPage","lazy","styles","theme","a","color","palette","primary","main","code","dark","TelegramApp","props","onClientUpdateDatabaseExists","update","exists","setState","authorizationState","databaseExists","onUpdate","checkServiceWorker","cookieEnabled","navigator","cookies","register","get","onUpdateFatalError","fatalError","onUpdateAuthorizationState","authorization_state","window","hasFocus","send","name","value","onClientUpdateAppInactive","inactive","handleChangePhone","handleDragOver","event","preventDefault","stopPropagation","handleDrop","handleRefresh","location","reload","handleDestroy","handleKeyDown","console","log","version","state","init","addListener","on","removeListener","t","loading","replace","page","keyMap","Map","openPinnedChat","index","offset_order","offset_chat_id","limit","chats","pinnedIndex","i","chat_ids","length","chat","is_pinned","setChatId","id","document","addEventListener","delete","key","set","size","altKey","ctrlKey","user_id","getMyId","force","onblur","clear","clientUpdate","focused","onfocus","history","pushState","href","onpopstate","go","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport Cookies from 'universal-cookie';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport packageJson from '../package.json';\nimport withLanguage from './Language';\nimport withTheme from './Theme';\nimport AuthFormControl from './Components/Auth/AuthFormControl';\nimport InactivePage from './Components/InactivePage';\nimport StubPage from './Components/StubPage';\nimport registerServiceWorker from './registerServiceWorker';\nimport { OPTIMIZATIONS_FIRST_START } from './Constants';\nimport ChatStore from './Stores/ChatStore';\nimport UserStore from './Stores/UserStore';\nimport ApplicationStore from './Stores/ApplicationStore';\nimport TdLibController from './Controllers/TdLibController';\nimport './TelegramApp.css';\n\nconst MainPage = React.lazy(() => import('./Components/MainPage'));\n\nconst styles = theme => ({\n    '@global': {\n        a: {\n            color: theme.palette.primary.main\n        },\n        code: {\n            color: theme.palette.primary.dark\n        }\n    }\n});\n\nclass TelegramApp extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`Start Telegram Web ${packageJson.version}`);\n\n        this.state = {\n            authorizationState: null,\n            databaseExists: true,\n            inactive: false,\n            fatalError: false\n        };\n    }\n\n    componentWillMount() {\n        const { location } = this.props;\n\n        TdLibController.init(location);\n    }\n\n    componentDidMount() {\n        TdLibController.addListener('update', this.onUpdate);\n\n        ApplicationStore.on('clientUpdateAppInactive', this.onClientUpdateAppInactive);\n        ApplicationStore.on('clientUpdateDatabaseExists', this.onClientUpdateDatabaseExists);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('updateFatalError', this.onUpdateFatalError);\n    }\n\n    componentWillUnmount() {\n        TdLibController.removeListener('update', this.onUpdate);\n\n        ApplicationStore.removeListener('clientUpdateAppInactive', this.onClientUpdateAppInactive);\n        ApplicationStore.removeListener('clientUpdateDatabaseExists', this.onClientUpdateDatabaseExists);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('updateFatalError', this.onUpdateFatalError);\n    }\n\n    onClientUpdateDatabaseExists = update => {\n        const { exists } = update;\n\n        if (!exists) {\n            this.setState({\n                authorizationState: {\n                    '@type': 'authorizationStateWaitTdlib'\n                },\n                databaseExists: exists\n            });\n        }\n    };\n\n    onUpdate = update => {\n        if (OPTIMIZATIONS_FIRST_START) {\n            if (!this.checkServiceWorker) {\n                this.checkServiceWorker = true;\n\n                const cookieEnabled = navigator.cookieEnabled;\n                if (cookieEnabled) {\n                    const cookies = new Cookies();\n                    const register = cookies.get('register');\n                    if (!register) {\n                        registerServiceWorker();\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateFatalError = update => {\n        this.setState({ fatalError: true });\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState });\n\n        if (!window.hasFocus) return;\n        if (!authorizationState) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'online',\n            value: { '@type': 'optionValueBoolean', value: true }\n        });\n    };\n\n    onClientUpdateAppInactive = update => {\n        this.setState({ inactive: true });\n    };\n\n    handleChangePhone = () => {\n        this.setState({\n            authorizationState: { '@type': 'authorizationStateWaitPhoneNumber' }\n        });\n    };\n\n    handleDragOver = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleRefresh = () => {\n        this.setState({ fatalError: false });\n        window.location.reload();\n    };\n\n    handleDestroy = () => {\n        this.setState({ fatalError: false });\n        TdLibController.send({ '@type': 'destroy' });\n    };\n\n    handleKeyDown = event => {\n        //console.log('KeyDown', event);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { inactive, authorizationState, databaseExists, fatalError } = this.state;\n\n        const loading = t('Loading').replace('...', '');\n        //let page = <StubPage title={loading} />;\n        let page = (\n            <React.Suspense fallback={<StubPage title='' />}>\n                <MainPage />\n            </React.Suspense>\n        );\n\n        if (inactive) {\n            page = <InactivePage />;\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                case 'authorizationStateClosing':\n                case 'authorizationStateLoggingOut':\n                case 'authorizationStateReady': {\n                    page = (\n                        <React.Suspense fallback={<StubPage title='' />}>\n                            <MainPage />\n                        </React.Suspense>\n                    );\n                    break;\n                }\n                case 'authorizationStateWaitCode':\n                case 'authorizationStateWaitPassword':\n                case 'authorizationStateWaitPhoneNumber':\n                case 'authorizationStateWaitTdlib':\n                    page = (\n                        <AuthFormControl\n                            authorizationState={authorizationState}\n                            onChangePhone={this.handleChangePhone}\n                        />\n                    );\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                case 'authorizationStateWaitTdlibParameters': {\n                    if (!databaseExists) {\n                        page = (\n                            <AuthFormControl\n                                authorizationState={authorizationState}\n                                onChangePhone={this.handleChangePhone}\n                            />\n                        );\n                    }\n\n                    break;\n                }\n            }\n        }\n\n        return (\n            <div id='app' onDragOver={this.handleDragOver} onDrop={this.handleDrop} onKeyDown={this.handleKeyDown}>\n                {page}\n                <Dialog\n                    transitionDuration={0}\n                    open={fatalError}\n                    onClose={this.handleRefresh}\n                    aria-labelledby='fatal-error-dialog-title'\n                    aria-describedby='fatal-error-dialog-description'>\n                    <DialogTitle id='fatal-error-dialog-title'>Telegram</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='fatal-error-dialog-description'>\n                            Oops! Something went wrong. We need to refresh this page.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDestroy} color='primary'>\n                            Log out\n                        </Button>\n                        <Button onClick={this.handleRefresh} color='primary' autoFocus>\n                            Refresh\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst keyMap = new Map();\nwindow.keyMap = keyMap;\n\nasync function openPinnedChat(index) {\n    const chats = await TdLibController.send({\n        '@type': 'getChats',\n        offset_order: '9223372036854775807',\n        offset_chat_id: 0,\n        limit: 10\n    });\n\n    if (chats) {\n        let pinnedIndex = -1;\n        for (let i = 0; i < chats.chat_ids.length; i++) {\n            const chat = ChatStore.get(chats.chat_ids[i]);\n            if (chat && chat.is_pinned) {\n                pinnedIndex++;\n            }\n\n            if (pinnedIndex === index) {\n                TdLibController.setChatId(chat.id);\n                return;\n            }\n        }\n    }\n}\n\ndocument.addEventListener('keyup', event => {\n    keyMap.delete(event.key);\n    //console.log('keyup key=' + event.key, keyMap);\n});\n\ndocument.addEventListener('keydown', async event => {\n    keyMap.set(event.key, event.key);\n    //console.log('keydown key=' + event.key, event.altKey, event.ctrlKey, event, keyMap);\n\n    const { authorizationState } = ApplicationStore;\n    if (!authorizationState) return;\n    if (authorizationState['@type'] !== 'authorizationStateReady') return;\n    if (keyMap.size > 3) return;\n\n    if (event.altKey && event.ctrlKey) {\n        switch (event.key) {\n            case '0': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                const chat = await TdLibController.send({\n                    '@type': 'createPrivateChat',\n                    user_id: UserStore.getMyId(),\n                    force: true\n                });\n\n                if (chat) {\n                    TdLibController.setChatId(chat.id);\n                }\n                break;\n            }\n            case '1': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(0);\n                break;\n            }\n            case '2': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(1);\n                break;\n            }\n            case '3': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(2);\n                break;\n            }\n            case '4': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(3);\n                break;\n            }\n            case '5': {\n                event.preventDefault();\n                event.stopPropagation();\n\n                openPinnedChat(4);\n                break;\n            }\n        }\n    }\n});\n\nwindow.hasFocus = true;\n\n// set offline on page lost focus\n// console.log('[ns] window.onblur attach');\nwindow.onblur = function() {\n    keyMap.clear();\n\n    window.hasFocus = false;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateFocusWindow',\n        focused: false\n    });\n};\n\n// set online on page get focus\n// console.log('[ns] window.onfocus attach');\nwindow.onfocus = function() {\n    keyMap.clear();\n\n    window.hasFocus = true;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateFocusWindow',\n        focused: true\n    });\n};\n\n// disable back navigation\nwindow.history.pushState(null, null, window.location.href);\nwindow.onpopstate = function() {\n    window.history.go(1);\n};\n\nconst enhance = compose(\n    withLanguage,\n    withTranslation(),\n    withTheme,\n    withStyles(styles)\n);\n\nexport default enhance(TelegramApp);\n"]},"metadata":{},"sourceType":"module"}