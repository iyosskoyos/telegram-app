{"ast":null,"code":"var _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnMiddle/StickerSet.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport './StickerSet.css';\n\nconst styles = theme => ({\n  title: {\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.primary\n  },\n  stickerSetItem: {\n    width: STICKER_SMALL_DISPLAY_SIZE,\n    height: STICKER_SMALL_DISPLAY_SIZE,\n    padding: 3,\n    boxSizing: 'border-box',\n    '&:hover': {\n      background: theme.palette.type === 'dark' ? '#303030' : '#f4f4f4',\n      borderRadius: 6\n    }\n  }\n});\n\nclass StickerSet extends React.Component {\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    const _this$props = this.props,\n          info = _this$props.info,\n          theme = _this$props.theme;\n\n    if (theme !== nextProps.theme) {\n      return true;\n    }\n\n    if (info !== nextProps.info) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          classes = _this$props2.classes,\n          info = _this$props2.info,\n          onSelect = _this$props2.onSelect,\n          onMouseDown = _this$props2.onMouseDown,\n          onMouseEnter = _this$props2.onMouseEnter;\n    if (!info) return null;\n    const title = info.title,\n          stickers = info.stickers;\n    const items = stickers.map((x, i) => React.createElement(\"div\", {\n      className: classNames('sticker-set-item', classes.stickerSetItem),\n      key: x.sticker.id,\n      \"data-sticker-id\": x.sticker.id,\n      onClick: () => onSelect(x),\n      onMouseEnter: onMouseEnter,\n      onMouseDown: onMouseDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Sticker, {\n      key: x.sticker.id,\n      sticker: x,\n      autoplay: false,\n      blur: false,\n      displaySize: STICKER_SMALL_DISPLAY_SIZE - 6,\n      preview: true,\n      source: StickerSourceEnum.PICKER,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      className: \"sticker-set\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('sticker-set-title', classes.title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, title)), React.createElement(\"div\", {\n      className: \"sticker-set-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, items));\n  }\n\n}\n\nStickerSet.propTypes = {\n  info: PropTypes.object.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onMouseDown: PropTypes.func.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(StickerSet);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnMiddle/StickerSet.js"],"names":["React","PropTypes","classNames","withStyles","Sticker","StickerSourceEnum","STICKER_SMALL_DISPLAY_SIZE","styles","theme","title","backgroundColor","palette","background","paper","color","text","primary","stickerSetItem","width","height","padding","boxSizing","type","borderRadius","StickerSet","Component","shouldComponentUpdate","nextProps","nextState","nextContext","props","info","render","classes","onSelect","onMouseDown","onMouseEnter","stickers","items","map","x","i","sticker","id","PICKER","propTypes","object","isRequired","func","withTheme"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,OAAP,IAAkBC,iBAAlB,QAA2C,0BAA3C;AACA,SAASC,0BAAT,QAA2C,iBAA3C;AACA,OAAO,kBAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,KADvC;AAEHC,IAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcI,IAAd,CAAmBC;AAFvB,GADc;AAKrBC,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAEZ,0BADK;AAEZa,IAAAA,MAAM,EAAEb,0BAFI;AAGZc,IAAAA,OAAO,EAAE,CAHG;AAIZC,IAAAA,SAAS,EAAE,YAJC;AAKZ,eAAW;AACPT,MAAAA,UAAU,EAAEJ,KAAK,CAACG,OAAN,CAAcW,IAAd,KAAuB,MAAvB,GAAgC,SAAhC,GAA4C,SADjD;AAEPC,MAAAA,YAAY,EAAE;AAFP;AALC;AALK,CAAL,CAApB;;AAiBA,MAAMC,UAAN,SAAyBxB,KAAK,CAACyB,SAA/B,CAAyC;AACrCC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,WAAvB,EAAoC;AAAA,wBAC7B,KAAKC,KADwB;AAAA,UAC7CC,IAD6C,eAC7CA,IAD6C;AAAA,UACvCvB,KADuC,eACvCA,KADuC;;AAGrD,QAAIA,KAAK,KAAKmB,SAAS,CAACnB,KAAxB,EAA+B;AAC3B,aAAO,IAAP;AACH;;AAED,QAAIuB,IAAI,KAAKJ,SAAS,CAACI,IAAvB,EAA6B;AACzB,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBAC0D,KAAKF,KAD/D;AAAA,UACGG,OADH,gBACGA,OADH;AAAA,UACYF,IADZ,gBACYA,IADZ;AAAA,UACkBG,QADlB,gBACkBA,QADlB;AAAA,UAC4BC,WAD5B,gBAC4BA,WAD5B;AAAA,UACyCC,YADzC,gBACyCA,YADzC;AAEL,QAAI,CAACL,IAAL,EAAW,OAAO,IAAP;AAFN,UAIGtB,KAJH,GAIuBsB,IAJvB,CAIGtB,KAJH;AAAA,UAIU4B,QAJV,GAIuBN,IAJvB,CAIUM,QAJV;AAML,UAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,KACvB;AACI,MAAA,SAAS,EAAEvC,UAAU,CAAC,kBAAD,EAAqB+B,OAAO,CAAChB,cAA7B,CADzB;AAEI,MAAA,GAAG,EAAEuB,CAAC,CAACE,OAAF,CAAUC,EAFnB;AAGI,yBAAiBH,CAAC,CAACE,OAAF,CAAUC,EAH/B;AAII,MAAA,OAAO,EAAE,MAAMT,QAAQ,CAACM,CAAD,CAJ3B;AAKI,MAAA,YAAY,EAAEJ,YALlB;AAMI,MAAA,WAAW,EAAED,WANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEK,CAAC,CAACE,OAAF,CAAUC,EADnB;AAEI,MAAA,OAAO,EAAEH,CAFb;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,IAAI,EAAE,KAJV;AAKI,MAAA,WAAW,EAAElC,0BAA0B,GAAG,CAL9C;AAMI,MAAA,OAAO,MANX;AAOI,MAAA,MAAM,EAAED,iBAAiB,CAACuC,MAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADU,CAAd;AAoBA,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE1C,UAAU,CAAC,mBAAD,EAAsB+B,OAAO,CAACxB,KAA9B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAP,CADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC6B,KAAtC,CAJJ,CADJ;AAQH;;AAjDoC;;AAoDzCd,UAAU,CAACqB,SAAX,GAAuB;AACnBd,EAAAA,IAAI,EAAE9B,SAAS,CAAC6C,MAAV,CAAiBC,UADJ;AAEnBb,EAAAA,QAAQ,EAAEjC,SAAS,CAAC+C,IAAV,CAAeD,UAFN;AAGnBZ,EAAAA,WAAW,EAAElC,SAAS,CAAC+C,IAAV,CAAeD;AAHT,CAAvB;AAMA,eAAe5C,UAAU,CAACI,MAAD,EAAS;AAAE0C,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCzB,UAAxC,CAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport './StickerSet.css';\n\nconst styles = theme => ({\n    title: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary\n    },\n    stickerSetItem: {\n        width: STICKER_SMALL_DISPLAY_SIZE,\n        height: STICKER_SMALL_DISPLAY_SIZE,\n        padding: 3,\n        boxSizing: 'border-box',\n        '&:hover': {\n            background: theme.palette.type === 'dark' ? '#303030' : '#f4f4f4',\n            borderRadius: 6\n        }\n    }\n});\n\nclass StickerSet extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { info, theme } = this.props;\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (info !== nextProps.info) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { classes, info, onSelect, onMouseDown, onMouseEnter } = this.props;\n        if (!info) return null;\n\n        const { title, stickers } = info;\n\n        const items = stickers.map((x, i) => (\n            <div\n                className={classNames('sticker-set-item', classes.stickerSetItem)}\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onClick={() => onSelect(x)}\n                onMouseEnter={onMouseEnter}\n                onMouseDown={onMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE - 6}\n                    preview\n                    source={StickerSourceEnum.PICKER}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='sticker-set'>\n                <div className={classNames('sticker-set-title', classes.title)}>\n                    <span>{title}</span>\n                </div>\n                <div className='sticker-set-content'>{items}</div>\n            </div>\n        );\n    }\n}\n\nStickerSet.propTypes = {\n    info: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onMouseDown: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(StickerSet);\n"]},"metadata":{},"sourceType":"module"}