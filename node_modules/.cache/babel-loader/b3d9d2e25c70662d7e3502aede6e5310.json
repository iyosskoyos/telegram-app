{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/Tile/DocumentTile.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n  background: {\n    background: theme.palette.primary.main,\n    borderRadius: '50%',\n    width: 48,\n    height: 48\n  }\n});\n\nclass DocumentTile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClientUpdateDocumentThumbnailBlob = update => {\n      const thumbnail = this.props.thumbnail;\n      if (!thumbnail) return;\n      const file = thumbnail.photo;\n      if (!file) return;\n      const fileId = update.fileId;\n\n      if (file.id !== fileId) {\n        return;\n      }\n\n      this.forceUpdate();\n    };\n\n    this.handleLoad = () => {\n      this.setState({\n        loaded: true\n      });\n    };\n\n    this.state = {\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n  }\n\n  componentWillUnmount() {\n    FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          thumbnail = _this$props.thumbnail,\n          file = _this$props.file,\n          icon = _this$props.icon,\n          completeIcon = _this$props.completeIcon,\n          openMedia = _this$props.openMedia;\n    const loaded = this.state.loaded;\n    const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n    const className = classNames('tile-photo', {\n      'document-tile-background': !thumbnailSrc\n    });\n    const tileLoaded = thumbnailSrc && loaded;\n    return React.createElement(\"div\", {\n      className: \"document-tile\",\n      onClick: openMedia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, !tileLoaded && React.createElement(\"div\", {\n      className: classes.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), thumbnailSrc && React.createElement(\"img\", {\n      className: className,\n      src: thumbnailSrc,\n      onLoad: this.handleLoad,\n      draggable: false,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), file && React.createElement(FileProgress, {\n      file: file,\n      thumbnailSrc: thumbnailSrc,\n      download: true,\n      upload: true,\n      cancelButton: true,\n      zIndex: 1,\n      icon: icon,\n      completeIcon: completeIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nDocumentTile.propTypes = {\n  thumbnail: PropTypes.object,\n  file: PropTypes.object,\n  openMedia: PropTypes.func,\n  icon: PropTypes.node,\n  completeIcon: PropTypes.node\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(DocumentTile);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/Tile/DocumentTile.js"],"names":["React","PropTypes","classNames","withStyles","FileProgress","getSrc","FileStore","styles","theme","background","palette","primary","main","borderRadius","width","height","DocumentTile","Component","constructor","props","onClientUpdateDocumentThumbnailBlob","update","thumbnail","file","photo","fileId","id","forceUpdate","handleLoad","setState","loaded","state","componentDidMount","on","componentWillUnmount","removeListener","render","classes","icon","completeIcon","openMedia","thumbnailSrc","className","tileLoaded","propTypes","object","func","node","withTheme"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,oBAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,UAAU,EAAE;AACRA,IAAAA,UAAU,EAAED,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC,IAD1B;AAERC,IAAAA,YAAY,EAAE,KAFN;AAGRC,IAAAA,KAAK,EAAE,EAHC;AAIRC,IAAAA,MAAM,EAAE;AAJA;AADS,CAAL,CAApB;;AASA,MAAMC,YAAN,SAA2BhB,KAAK,CAACiB,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,mCAlBmB,GAkBmBC,MAAM,IAAI;AAAA,YACpCC,SADoC,GACtB,KAAKH,KADiB,CACpCG,SADoC;AAE5C,UAAI,CAACA,SAAL,EAAgB;AAEhB,YAAMC,IAAI,GAAGD,SAAS,CAACE,KAAvB;AACA,UAAI,CAACD,IAAL,EAAW;AALiC,YAOpCE,MAPoC,GAOzBJ,MAPyB,CAOpCI,MAPoC;;AAS5C,UAAIF,IAAI,CAACG,EAAL,KAAYD,MAAhB,EAAwB;AACpB;AACH;;AAED,WAAKE,WAAL;AACH,KAhCkB;;AAAA,SAkCnBC,UAlCmB,GAkCN,MAAM;AACf,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACH,KApCkB;;AAGf,SAAKC,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB1B,IAAAA,SAAS,CAAC2B,EAAV,CAAa,mCAAb,EAAkD,KAAKb,mCAAvD;AACAd,IAAAA,SAAS,CAAC2B,EAAV,CAAa,gCAAb,EAA+C,KAAKb,mCAApD;AACH;;AAEDc,EAAAA,oBAAoB,GAAG;AACnB5B,IAAAA,SAAS,CAAC6B,cAAV,CAAyB,mCAAzB,EAA8D,KAAKf,mCAAnE;AACAd,IAAAA,SAAS,CAAC6B,cAAV,CAAyB,gCAAzB,EAA2D,KAAKf,mCAAhE;AACH;;AAsBDgB,EAAAA,MAAM,GAAG;AAAA,wBAC+D,KAAKjB,KADpE;AAAA,UACGkB,OADH,eACGA,OADH;AAAA,UACYf,SADZ,eACYA,SADZ;AAAA,UACuBC,IADvB,eACuBA,IADvB;AAAA,UAC6Be,IAD7B,eAC6BA,IAD7B;AAAA,UACmCC,YADnC,eACmCA,YADnC;AAAA,UACiDC,SADjD,eACiDA,SADjD;AAAA,UAEGV,MAFH,GAEc,KAAKC,KAFnB,CAEGD,MAFH;AAIL,UAAMW,YAAY,GAAGpC,MAAM,CAACiB,SAAS,GAAGA,SAAS,CAACE,KAAb,GAAqB,IAA/B,CAA3B;AACA,UAAMkB,SAAS,GAAGxC,UAAU,CAAC,YAAD,EAAe;AAAE,kCAA4B,CAACuC;AAA/B,KAAf,CAA5B;AACA,UAAME,UAAU,GAAGF,YAAY,IAAIX,MAAnC;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,OAAO,EAAEU,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACG,UAAD,IAAe;AAAK,MAAA,SAAS,EAAEN,OAAO,CAAC5B,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpB,EAEKgC,YAAY,IACT;AAAK,MAAA,SAAS,EAAEC,SAAhB;AAA2B,MAAA,GAAG,EAAED,YAAhC;AAA8C,MAAA,MAAM,EAAE,KAAKb,UAA3D;AAAuE,MAAA,SAAS,EAAE,KAAlF;AAAyF,MAAA,GAAG,EAAC,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,EAKKL,IAAI,IACD,oBAAC,YAAD;AACI,MAAA,IAAI,EAAEA,IADV;AAEI,MAAA,YAAY,EAAEkB,YAFlB;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,MAAM,MAJV;AAKI,MAAA,YAAY,MALhB;AAMI,MAAA,MAAM,EAAE,CANZ;AAOI,MAAA,IAAI,EAAEH,IAPV;AAQI,MAAA,YAAY,EAAEC,YARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CADJ;AAoBH;;AAnEsC;;AAsE3CvB,YAAY,CAAC4B,SAAb,GAAyB;AACrBtB,EAAAA,SAAS,EAAErB,SAAS,CAAC4C,MADA;AAErBtB,EAAAA,IAAI,EAAEtB,SAAS,CAAC4C,MAFK;AAGrBL,EAAAA,SAAS,EAAEvC,SAAS,CAAC6C,IAHA;AAIrBR,EAAAA,IAAI,EAAErC,SAAS,CAAC8C,IAJK;AAKrBR,EAAAA,YAAY,EAAEtC,SAAS,CAAC8C;AALH,CAAzB;AAQA,eAAe5C,UAAU,CAACI,MAAD,EAAS;AAAEyC,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwChC,YAAxC,CAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n        const tileLoaded = thumbnailSrc && loaded;\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {!tileLoaded && <div className={classes.background} />}\n                {thumbnailSrc && (\n                    <img className={className} src={thumbnailSrc} onLoad={this.handleLoad} draggable={false} alt='' />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n"]},"metadata":{},"sourceType":"module"}