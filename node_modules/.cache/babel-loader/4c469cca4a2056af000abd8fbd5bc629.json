{"ast":null,"code":"import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import{compose}from'recompose';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import FormHelperText from'@material-ui/core/FormHelperText';import FormControl from'@material-ui/core/FormControl';import Link from'@material-ui/core/Link';import Typography from'@material-ui/core/Typography';import HeaderProgress from'../ColumnMiddle/HeaderProgress';import{cleanProgressStatus,isConnecting,isValidPhoneNumber}from'../../Utils/Common';import ApplicationStore from'../../Stores/ApplicationStore';import OptionStore from'../../Stores/OptionStore';import LocalizationStore from'../../Stores/LocalizationStore';import TdLibController from'../../Controllers/TdLibController';import'./SignInControl.css';var styles={button:{margin:'16px 0 0 0'},phone:{fontWeight:'bold',textAlign:'center'},continueAtLanguage:{transform:'translateY(100px)',textAlign:'center',position:'absolute',cursor:'pointer',left:0,right:0,bottom:0}};var SignInControl=/*#__PURE__*/function(_React$Component){_inherits(SignInControl,_React$Component);function SignInControl(){var _getPrototypeOf2;var _this;_classCallCheck(this,SignInControl);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SignInControl)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={connecting:isConnecting(ApplicationStore.connectionState),error:null,loading:false};_this.onUpdateConnectionState=function(update){var state=update.state;_this.setState({connecting:isConnecting(state)});};_this.onClientUpdateSetPhoneCanceled=function(update){_this.setState({loading:false});};_this.onClientUpdateSetPhoneError=function(update){var error=update.error;var errorString=null;if(error&&error['@type']==='error'&&error.message){errorString=error.message;}else{errorString=JSON.stringify(error);}_this.setState({error:{string:errorString},loading:false});};_this.onClientUpdateSetPhoneResult=function(update){_this.setState({loading:false});};_this.onUpdateOption=function(update){var name=update.name;if(name==='suggested_language_pack_id'){_this.handleSuggestedLanguagePackId();}};_this.handleSuggestedLanguagePackId=function(){var i18n=_this.props.i18n;if(!i18n)return;var languagePackId=OptionStore.get('suggested_language_pack_id');if(!languagePackId)return;var value=languagePackId.value;if(value===i18n.language){_this.setState({suggestedLanguage:null});return;}LocalizationStore.loadLanguage(value).then(function(){_this.setState({suggestedLanguage:value});});};_this.handleNext=function(){var defaultPhone=_this.props.defaultPhone;var phone=_this.enteredPhone||defaultPhone;if(isValidPhoneNumber(phone)){_this.setState({error:null,openConfirmation:true});}else{_this.setState({error:{code:'InvalidPhoneNumber'}});}};_this.handleChange=function(event){_this.enteredPhone=event.target.value;};_this.handleKeyPress=function(event){if(event.key==='Enter'){event.preventDefault();_this.handleDone();}};_this.handleDone=function(){var defaultPhone=_this.props.defaultPhone;var phone=_this.enteredPhone||defaultPhone;if(!isValidPhoneNumber(phone)){_this.setState({error:{code:'InvalidPhoneNumber'}});return;}_this.setState({error:null,loading:true});TdLibController.clientUpdate({'@type':'clientUpdateSetPhone',phone:phone});};_this.handleChangeLanguage=function(){var i18n=_this.props.i18n;var suggestedLanguage=_this.state.suggestedLanguage;if(!i18n)return;if(!suggestedLanguage)return;_this.setState({suggestedLanguage:i18n.language});TdLibController.clientUpdate({'@type':'clientUpdateLanguageChange',language:suggestedLanguage});};return _this;}_createClass(SignInControl,[{key:\"componentDidMount\",value:function componentDidMount(){this.handleSuggestedLanguagePackId();ApplicationStore.on('clientUpdateSetPhoneCanceled',this.onClientUpdateSetPhoneCanceled);ApplicationStore.on('clientUpdateSetPhoneError',this.onClientUpdateSetPhoneError);ApplicationStore.on('clientUpdateSetPhoneResult',this.onClientUpdateSetPhoneResult);ApplicationStore.on('updateConnectionState',this.onUpdateConnectionState);OptionStore.on('updateOption',this.onUpdateOption);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('clientUpdateSetPhoneCanceled',this.onClientUpdateSetPhoneCanceled);ApplicationStore.removeListener('clientUpdateSetPhoneError',this.onClientUpdateSetPhoneError);ApplicationStore.removeListener('clientUpdateSetPhoneResult',this.onClientUpdateSetPhoneResult);ApplicationStore.removeListener('updateConnectionState',this.onUpdateConnectionState);OptionStore.removeListener('updateOption',this.onUpdateOption);}},{key:\"render\",value:function render(){var _this$props=this.props,defaultPhone=_this$props.defaultPhone,classes=_this$props.classes,t=_this$props.t;var _this$state=this.state,connecting=_this$state.connecting,loading=_this$state.loading,error=_this$state.error,suggestedLanguage=_this$state.suggestedLanguage;var errorString='';if(error){var code=error.code,string=error.string;if(code){errorString=t(code);}else{errorString=string;}}var title=connecting?cleanProgressStatus(t('Connecting')):t('YourPhone');return React.createElement(FormControl,{fullWidth:true},React.createElement(\"div\",{className:\"authorization-header\"},React.createElement(\"span\",{className:\"authorization-header-content\"},title),connecting&&React.createElement(HeaderProgress,null)),React.createElement(\"div\",null,t('StartText')),React.createElement(TextField,{color:\"primary\",disabled:loading,error:Boolean(errorString),fullWidth:true,autoFocus:true,id:\"phoneNumber\",label:\"\",margin:\"normal\",onChange:this.handleChange,onKeyPress:this.handleKeyPress,defaultValue:defaultPhone}),React.createElement(FormHelperText,{id:\"sign-in-error-text\"},errorString),React.createElement(\"div\",{className:\"sign-in-actions\"},React.createElement(Button,{fullWidth:true,color:\"primary\",disabled:loading,className:classes.button,onClick:this.handleDone},t('Next')),React.createElement(Typography,{className:classes.continueAtLanguage},React.createElement(Link,{onClick:this.handleChangeLanguage},Boolean(suggestedLanguage)?t('ContinueOnThisLanguage',{lng:suggestedLanguage}):' '))));}}]);return SignInControl;}(React.Component);var enhance=compose(withTranslation(),withStyles(styles,{withTheme:true}));export default enhance(SignInControl);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Auth/SignInControl.js"],"names":["React","withStyles","withTranslation","compose","Button","TextField","FormHelperText","FormControl","Link","Typography","HeaderProgress","cleanProgressStatus","isConnecting","isValidPhoneNumber","ApplicationStore","OptionStore","LocalizationStore","TdLibController","styles","button","margin","phone","fontWeight","textAlign","continueAtLanguage","transform","position","cursor","left","right","bottom","SignInControl","state","connecting","connectionState","error","loading","onUpdateConnectionState","update","setState","onClientUpdateSetPhoneCanceled","onClientUpdateSetPhoneError","errorString","message","JSON","stringify","string","onClientUpdateSetPhoneResult","onUpdateOption","name","handleSuggestedLanguagePackId","i18n","props","languagePackId","get","value","language","suggestedLanguage","loadLanguage","then","handleNext","defaultPhone","enteredPhone","openConfirmation","code","handleChange","event","target","handleKeyPress","key","preventDefault","handleDone","clientUpdate","handleChangeLanguage","on","removeListener","classes","t","title","Boolean","lng","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport HeaderProgress from '../ColumnMiddle/HeaderProgress';\nimport { cleanProgressStatus, isConnecting, isValidPhoneNumber } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SignInControl.css';\n\nconst styles = {\n    button: {\n        margin: '16px 0 0 0'\n    },\n    phone: {\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    continueAtLanguage: {\n        transform: 'translateY(100px)',\n        textAlign: 'center',\n        position: 'absolute',\n        cursor: 'pointer',\n        left: 0,\n        right: 0,\n        bottom: 0\n    }\n};\n\nclass SignInControl extends React.Component {\n    state = {\n        connecting: isConnecting(ApplicationStore.connectionState),\n        error: null,\n        loading: false\n    };\n\n    componentDidMount() {\n        this.handleSuggestedLanguagePackId();\n\n        ApplicationStore.on('clientUpdateSetPhoneCanceled', this.onClientUpdateSetPhoneCanceled);\n        ApplicationStore.on('clientUpdateSetPhoneError', this.onClientUpdateSetPhoneError);\n        ApplicationStore.on('clientUpdateSetPhoneResult', this.onClientUpdateSetPhoneResult);\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        OptionStore.on('updateOption', this.onUpdateOption);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSetPhoneCanceled', this.onClientUpdateSetPhoneCanceled);\n        ApplicationStore.removeListener('clientUpdateSetPhoneError', this.onClientUpdateSetPhoneError);\n        ApplicationStore.removeListener('clientUpdateSetPhoneResult', this.onClientUpdateSetPhoneResult);\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        OptionStore.removeListener('updateOption', this.onUpdateOption);\n    }\n\n    onUpdateConnectionState = update => {\n        const { state } = update;\n\n        this.setState({ connecting: isConnecting(state) });\n    };\n\n    onClientUpdateSetPhoneCanceled = update => {\n        this.setState({ loading: false });\n    };\n\n    onClientUpdateSetPhoneError = update => {\n        const { error } = update;\n\n        let errorString = null;\n        if (error && error['@type'] === 'error' && error.message) {\n            errorString = error.message;\n        } else {\n            errorString = JSON.stringify(error);\n        }\n\n        this.setState({ error: { string: errorString }, loading: false });\n    };\n\n    onClientUpdateSetPhoneResult = update => {\n        this.setState({ loading: false });\n    };\n\n    onUpdateOption = update => {\n        const { name } = update;\n\n        if (name === 'suggested_language_pack_id') {\n            this.handleSuggestedLanguagePackId();\n        }\n    };\n\n    handleSuggestedLanguagePackId = () => {\n        const { i18n } = this.props;\n        if (!i18n) return;\n\n        const languagePackId = OptionStore.get('suggested_language_pack_id');\n        if (!languagePackId) return;\n\n        const { value } = languagePackId;\n        if (value === i18n.language) {\n            this.setState({ suggestedLanguage: null });\n            return;\n        }\n\n        LocalizationStore.loadLanguage(value).then(() => {\n            this.setState({ suggestedLanguage: value });\n        });\n    };\n\n    handleNext = () => {\n        const { defaultPhone } = this.props;\n\n        const phone = this.enteredPhone || defaultPhone;\n\n        if (isValidPhoneNumber(phone)) {\n            this.setState({ error: null, openConfirmation: true });\n        } else {\n            this.setState({ error: { code: 'InvalidPhoneNumber' } });\n        }\n    };\n\n    handleChange = event => {\n        this.enteredPhone = event.target.value;\n    };\n\n    handleKeyPress = event => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.handleDone();\n        }\n    };\n\n    handleDone = () => {\n        const { defaultPhone } = this.props;\n\n        const phone = this.enteredPhone || defaultPhone;\n        if (!isValidPhoneNumber(phone)) {\n            this.setState({ error: { code: 'InvalidPhoneNumber' } });\n            return;\n        }\n\n        this.setState({ error: null, loading: true });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSetPhone',\n            phone\n        });\n    };\n\n    handleChangeLanguage = () => {\n        const { i18n } = this.props;\n        const { suggestedLanguage } = this.state;\n\n        if (!i18n) return;\n        if (!suggestedLanguage) return;\n\n        this.setState({ suggestedLanguage: i18n.language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: suggestedLanguage });\n    };\n\n    render() {\n        const { defaultPhone, classes, t } = this.props;\n        const { connecting, loading, error, suggestedLanguage } = this.state;\n\n        let errorString = '';\n        if (error) {\n            const { code, string } = error;\n            if (code) {\n                errorString = t(code);\n            } else {\n                errorString = string;\n            }\n        }\n\n        const title = connecting ? cleanProgressStatus(t('Connecting')) : t('YourPhone');\n\n        return (\n            <FormControl fullWidth>\n                <div className='authorization-header'>\n                    <span className='authorization-header-content'>{title}</span>\n                    {connecting && <HeaderProgress />}\n                </div>\n                <div>{t('StartText')}</div>\n                <TextField\n                    color='primary'\n                    disabled={loading}\n                    error={Boolean(errorString)}\n                    fullWidth\n                    autoFocus\n                    id='phoneNumber'\n                    label=''\n                    margin='normal'\n                    onChange={this.handleChange}\n                    onKeyPress={this.handleKeyPress}\n                    defaultValue={defaultPhone}\n                />\n                <FormHelperText id='sign-in-error-text'>{errorString}</FormHelperText>\n                <div className='sign-in-actions'>\n                    <Button\n                        fullWidth\n                        color='primary'\n                        disabled={loading}\n                        className={classes.button}\n                        onClick={this.handleDone}>\n                        {t('Next')}\n                    </Button>\n                    <Typography className={classes.continueAtLanguage}>\n                        <Link onClick={this.handleChangeLanguage}>\n                            {Boolean(suggestedLanguage) ? t('ContinueOnThisLanguage', { lng: suggestedLanguage }) : ' '}\n                        </Link>\n                    </Typography>\n                </div>\n            </FormControl>\n        );\n    }\n}\n\nSignInControl.propTypes = {\n    defaultPhone: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(SignInControl);\n"]},"metadata":{},"sourceType":"module"}