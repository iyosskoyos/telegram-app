{"ast":null,"code":"import _defineProperty from \"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Message/Reply.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => _objectSpread({\n  replyContentSubtitle: {\n    color: theme.palette.text.secondary\n  }\n}, accentStyles(theme));\n\nclass Reply extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onGetMessageResult = result => {\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            messageId = _this$props.messageId;\n\n      if (chatId === result.chat_id && messageId === result.id) {\n        this.forceUpdate();\n      }\n    };\n\n    this.handleClick = event => {\n      event.stopPropagation();\n    };\n\n    this.handleOpen = event => {\n      event.stopPropagation();\n      const _this$props2 = this.props,\n            chatId = _this$props2.chatId,\n            messageId = _this$props2.messageId,\n            onClick = _this$props2.onClick;\n      const message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      if (isDeletedMessage(message)) return null;\n      openChat(chatId, messageId, false);\n      if (onClick) onClick();\n    };\n  }\n\n  componentDidMount() {\n    MessageStore.on('getMessageResult', this.onGetMessageResult);\n  }\n\n  componentWillUnmount() {\n    MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          classes = _this$props3.classes,\n          t = _this$props3.t,\n          chatId = _this$props3.chatId,\n          messageId = _this$props3.messageId;\n    const message = MessageStore.get(chatId, messageId);\n    let title = !message ? null : getTitle(message);\n    let content = !message ? t('Loading') : getContent(message, t);\n    const photoSize = getReplyPhotoSize(chatId, messageId);\n\n    if (isDeletedMessage(message)) {\n      title = null;\n      content = t('DeletedMessage');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"reply\",\n      onMouseDown: this.handleOpen,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reply-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('reply-border', classes.accentBackgroundLight),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), photoSize && React.createElement(ReplyTile, {\n      chatId: chatId,\n      messageId: messageId,\n      photoSize: photoSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"reply-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, title && React.createElement(\"div\", {\n      className: classNames('reply-content-title', classes.accentColorMain),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: classNames('reply-content-subtitle', classes.replyContentSubtitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, content))));\n  }\n\n}\n\nReply.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  onClick: PropTypes.func\n};\nconst enhance = compose(withStyles(styles, {\n  withTheme: true\n}), withTranslation());\nexport default enhance(Reply);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Message/Reply.js"],"names":["React","PropTypes","classNames","compose","withTranslation","withStyles","ReplyTile","getContent","getTitle","isDeletedMessage","getReplyPhotoSize","accentStyles","openChat","MessageStore","styles","theme","replyContentSubtitle","color","palette","text","secondary","Reply","Component","onGetMessageResult","result","props","chatId","messageId","chat_id","id","forceUpdate","handleClick","event","stopPropagation","handleOpen","onClick","message","get","componentDidMount","on","componentWillUnmount","removeListener","render","classes","t","title","content","photoSize","accentBackgroundLight","accentColorMain","propTypes","number","isRequired","func","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n"]},"metadata":{},"sourceType":"module"}