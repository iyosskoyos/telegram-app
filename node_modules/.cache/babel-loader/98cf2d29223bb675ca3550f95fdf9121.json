{"ast":null,"code":"import _toConsumableArray from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import Currency from'./Currency';import MessageAuthor from'../Components/Message/MessageAuthor';import ChatStore from'../Stores/ChatStore';import UserStore from'../Stores/UserStore';import SupergroupStore from'../Stores/SupergroupStore';import MessageStore from'../Stores/MessageStore';var serviceMap=new Map();serviceMap.set('messageBasicGroupChatCreate','messageBasicGroupChatCreate');serviceMap.set('messageChatAddMembers','messageChatAddMembers');serviceMap.set('messageChatChangePhoto','messageChatChangePhoto');serviceMap.set('messageChatChangeTitle','messageChatChangeTitle');serviceMap.set('messageChatDeleteMember','messageChatDeleteMember');serviceMap.set('messageChatDeletePhoto','messageChatDeletePhoto');serviceMap.set('messageChatJoinByLink','messageChatJoinByLink');serviceMap.set('messageChatSetTtl','messageChatSetTtl');serviceMap.set('messageChatUpgradeFrom','messageChatUpgradeFrom');serviceMap.set('messageChatUpgradeTo','messageChatUpgradeTo');serviceMap.set('messageContactRegistered','messageContactRegistered');serviceMap.set('messageCustomServiceAction','messageCustomServiceAction');serviceMap.set('messageGameScore','messageGameScore');serviceMap.set('messagePassportDataReceived','messagePassportDataReceived');serviceMap.set('messagePassportDataSent','messagePassportDataSent');serviceMap.set('messagePaymentSuccessful','messagePaymentSuccessful');serviceMap.set('messagePaymentSuccessfulBot','messagePaymentSuccessfulBot');serviceMap.set('messagePinMessage','messagePinMessage');serviceMap.set('messageScreenshotTaken','messageScreenshotTaken');serviceMap.set('messageSupergroupChatCreate','messageSupergroupChatCreate');serviceMap.set('messageUnsupported','messageUnsupported');serviceMap.set('messageWebsiteConnected','messageWebsiteConnected');function isServiceMessage(message){if(!message)return false;if(!message.content)return false;return serviceMap.has(message.content['@type'])||message.ttl>0;}function getTTLString(ttl){if(ttl<60){var seconds=ttl===1?'second':'seconds';return\"\".concat(ttl,\" \").concat(seconds);}if(ttl<60*60){var minutes=Math.floor(ttl/60)===1?'minute':'minutes';return\"\".concat(ttl,\" \").concat(minutes);}if(ttl<24*60*60){var hours=Math.floor(ttl/60/60)===1?'hour':'hours';return\"\".concat(ttl,\" \").concat(hours);}if(ttl<7*24*60*60){var days=Math.floor(ttl/60/60/24)===1?'day':'days';return\"\".concat(ttl,\" \").concat(days);}if(ttl===7*24*60*60){return'1 week';}return\"\".concat(ttl,\" seconds\");}function getPassportElementTypeString(type){switch(type['@type']){case'passportElementTypeAddress':{return'Address';}case'passportElementTypeBankStatement':{return'Bank Statement';}case'passportElementTypeDriverLicense':{return'Driver Licence';}case'passportElementTypeEmailAddress':{return'Email';}case'passportElementTypeIdentityCard':{return'Identity Card';}case'passportElementTypeInternalPassport':{return'Internal Passport';}case'passportElementTypePassport':{return'Passport';}case'passportElementTypePassportRegistration':{return'Passport Registration';}case'passportElementTypePersonalDetails':{return'Personal details';}case'passportElementTypePhoneNumber':{return'Phone Number';}case'passportElementTypeRentalAgreement':{return'Tenancy Agreement';}case'passportElementTypeTemporaryRegistration':{return'Temporary Registration';}case'passportElementTypeUtilityBill':{return'Utility Bill';}}return'';}function getMessageAuthor(message,openUser){if(!message)return null;var chat_id=message.chat_id,sender_user_id=message.sender_user_id;if(sender_user_id!==0){return React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser});}var chat=ChatStore.get(chat_id);if(!chat)return null;return chat.title;}function getServiceMessageContent(message){var openUser=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!message)return null;if(!message.content)return null;var isOutgoing=message.sender_user_id===UserStore.getMyId();var chat=ChatStore.get(message.chat_id);var isChannel=chat.type['@type']==='chatTypeSupergroup'&&chat.type.is_channel;var ttl=message.ttl,sender_user_id=message.sender_user_id,content=message.content;if(ttl>0){switch(content['@type']){case'messagePhoto':{if(isOutgoing){return'You sent a self-destructing photo. Please view it on your mobile';}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' sent a self-destructing photo. Please view it on your mobile');}case'messageVideo':{if(isOutgoing){return'You sent a self-destructing video. Please view it on your mobile';}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' sent a self-destructing video. Please view it on your mobile');}default:{if(isOutgoing){return'You sent a self-destructing message. Please view it on your mobile';}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' sent a self-destructing message. Please view it on your mobile');}}}switch(content['@type']){case'messageBasicGroupChatCreate':{var _ChatStore$get=ChatStore.get(message.chat_id),title=_ChatStore$get.title;if(isOutgoing){return\"You created group \\xAB\".concat(title,\"\\xBB\");}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),\" created group \\xAB\".concat(title,\"\\xBB\"));}case'messageChatAddMembers':{var members=content.member_user_ids.map(function(x){return React.createElement(MessageAuthor,{key:x,userId:x,openUser:openUser});}).reduce(function(accumulator,current,index,array){var separator=index===array.length-1?' and ':', ';return accumulator===null?[current]:[].concat(_toConsumableArray(accumulator),[separator,current]);},null);if(isOutgoing){return content.member_user_ids.length===1&&content.member_user_ids[0]===UserStore.getMyId()?'You joined the group':React.createElement(React.Fragment,null,'You added ',members);}return content.member_user_ids.length===1&&content.member_user_ids[0]===message.sender_user_id?React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' joined the group'):React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' added ',members);}case'messageChatChangePhoto':{if(isChannel){return'Channel photo updated';}if(isOutgoing){return'You updated group photo';}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),\" updated group photo\");}case'messageChatChangeTitle':{var _title=content.title;if(isChannel){return\"Channel name was changed to \\xAB\".concat(_title,\"\\xBB\");}if(isOutgoing){return\"You changed group name to \\xAB\".concat(_title,\"\\xBB\");}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),\" changed group name to \\xAB\".concat(_title,\"\\xBB\"));}case'messageChatDeleteMember':{if(isOutgoing){return content.user_id===UserStore.getMyId()?'You left the group':React.createElement(React.Fragment,null,'You removed ',React.createElement(MessageAuthor,{userId:content.user_id,openUser:openUser}));}return content.user_id===sender_user_id?React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' left the group'):React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' removed ',React.createElement(MessageAuthor,{userId:content.user_id,openUser:openUser}));}case'messageChatDeletePhoto':{if(isChannel){return'Channel photo removed';}if(isOutgoing){return'You removed group photo';}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' removed group photo');}case'messageChatJoinByLink':{if(isOutgoing){return'You joined the group via invite link';}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' joined the group via invite link');}case'messageChatSetTtl':{var _ttl=content.ttl;var ttlString=getTTLString(_ttl);if(_ttl<=0){if(isOutgoing){return'You disabled the self-destruct timer';}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' disabled the self-destruct timer');}if(isOutgoing){return\"You set the self-destruct timer to \".concat(ttlString);}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),\" set the self-destruct timer to \".concat(ttlString));}case'messageChatUpgradeFrom':{return'The group was upgraded to a supergroup';}case'messageChatUpgradeTo':{return'Group migrated to a supergroup';}case'messageContactRegistered':{return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' just joined Telegram');}case'messageCustomServiceAction':{return content.text;}case'messageGameScore':{var messageGame=MessageStore.get(message.chat_id,content.game_message_id);if(messageGame&&messageGame.content&&messageGame.content['@type']==='messageGame'&&messageGame.content.game){var game=messageGame.content.game;if(isOutgoing){return\"You scored \".concat(content.score,\" in \\xAB\").concat(game.title,\"\\xBB\");}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:messageGame.sender_user_id,openUser:openUser}),\" scored \".concat(content.score,\" in \\xAB\").concat(game.title,\"\\xBB\"));}if(isOutgoing){return\"You scored \".concat(content.score);}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),\" scored \".concat(content.score));}case'messagePassportDataReceived':{return'Telegram Passport data received';}case'messagePassportDataSent':{var _chat=ChatStore.get(message.chat_id);var passportElementTypes=content.types.map(function(x){return getPassportElementTypeString(x);}).reduce(function(accumulator,current){return accumulator===null?[current]:[].concat(_toConsumableArray(accumulator),[', ',current]);},null);return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:_chat.type.user_id,openUser:openUser}),' received the following documents: ',passportElementTypes);}case'messagePaymentSuccessful':{var _chat2=ChatStore.get(message.chat_id);var messageInvoice=MessageStore.get(message.chat_id,content.invoice_message_id);if(messageInvoice&&messageInvoice.content&&messageInvoice.content['@type']==='messageInvoice'&&messageInvoice.content.invoice){var invoice=messageInvoice.content.invoice;return React.createElement(React.Fragment,null,\"You have just successfully transferred \".concat(Currency.getString(content.total_amount,content.currency),\" to \"),React.createElement(MessageAuthor,{userId:_chat2.type.user_id,openUser:openUser}),\" for \".concat(invoice.title));}return React.createElement(React.Fragment,null,\"You have just successfully transferred \".concat(Currency.getString(content.total_amount,content.currency),\" to \"),React.createElement(MessageAuthor,{userId:_chat2.type.user_id,openUser:openUser}));}case'messagePaymentSuccessfulBot':{return'Payment successful';}case'messagePinMessage':{var author=getMessageAuthor(message,openUser);var pinnedMessage=MessageStore.get(message.chat_id,content.message_id);if(!pinnedMessage||!pinnedMessage.content){return React.createElement(React.Fragment,null,author,' pinned a message');}var pinnedContent=' pinned a message';if(isServiceMessage(pinnedMessage)){pinnedContent=' pinned a service message';}else{switch(pinnedMessage.content['@type']){case'messageAnimation':{pinnedContent=' pinned a GIF';break;}case'messageAudio':{pinnedContent=' pinned a track';break;}case'messageCall':{pinnedContent=' pinned a call';break;}case'messageContact':{pinnedContent=' pinned a contact';break;}case'messageDocument':{pinnedContent=' pinned a file';break;}case'messageExpiredPhoto':{pinnedContent=' pinned a photo';break;}case'messageExpiredVideo':{pinnedContent=' pinned a video';break;}case'messageGame':{pinnedContent=' pinned a game';break;}case'messageInvoice':{pinnedContent=' pinned an invoice';break;}case'messageLocation':{pinnedContent=' pinned a map';break;}case'messagePhoto':{pinnedContent=' pinned a photo';break;}case'messagePoll':{pinnedContent=' pinned a poll';break;}case'messageSticker':{pinnedContent=' pinned a sticker';break;}case'messageText':{var maxLength=16;var text=pinnedMessage.content.text.text;if(text.length<=maxLength){pinnedContent=\" pinned \\xAB\".concat(text,\"\\xBB\");}else{pinnedContent=\" pinned \\xAB\".concat(text.substring(0,maxLength),\"...\\xBB\");}break;}case'messageUnsupported':{pinnedContent=' pinned unsupported message';break;}case'messageVenue':{pinnedContent=' pinned a venue';break;}case'messageVideo':{pinnedContent=' pinned a video';break;}case'messageVideoNote':{pinnedContent=' pinned a video message';break;}case'messageVoiceNote':{pinnedContent=' pinned a voice message';break;}}}return React.createElement(React.Fragment,null,author,pinnedContent);}case'messageScreenshotTaken':{if(isOutgoing){return'You took a screenshot!';}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),' took a screenshot!');}case'messageSupergroupChatCreate':{var _title2=content.title;if(isChannel){return'Channel created';}if(isOutgoing){return\"You created group \\xAB\".concat(_title2,\"\\xBB\");}return React.createElement(React.Fragment,null,React.createElement(MessageAuthor,{userId:sender_user_id,openUser:openUser}),\" created group \\xAB\".concat(_title2,\"\\xBB\"));}case'messageUnsupported':{return'Unsupported message';}case'messageWebsiteConnected':{return\"You allowed this bot to message you when you logged in on \".concat(content.domain_name,\".\");}}return\"[\".concat(message.content['@type'],\"]\");}export{isServiceMessage,getServiceMessageContent};","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Utils/ServiceMessage.js"],"names":["React","Currency","MessageAuthor","ChatStore","UserStore","SupergroupStore","MessageStore","serviceMap","Map","set","isServiceMessage","message","content","has","ttl","getTTLString","seconds","minutes","Math","floor","hours","days","getPassportElementTypeString","type","getMessageAuthor","openUser","chat_id","sender_user_id","chat","get","title","getServiceMessageContent","isOutgoing","getMyId","isChannel","is_channel","members","member_user_ids","map","x","reduce","accumulator","current","index","array","separator","length","user_id","ttlString","text","messageGame","game_message_id","game","score","passportElementTypes","types","messageInvoice","invoice_message_id","invoice","getString","total_amount","currency","author","pinnedMessage","message_id","pinnedContent","maxLength","substring","domain_name"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n"]},"metadata":{},"sourceType":"module"}