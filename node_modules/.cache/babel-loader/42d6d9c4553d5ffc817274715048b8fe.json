{"ast":null,"code":"import _defineProperty from \"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Player/VolumeButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => _objectSpread({\n  iconButton: {\n    padding: 4\n  },\n  root: {\n    display: 'flex',\n    height: 100,\n    width: 28,\n    padding: '13px 0',\n    background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n  },\n  slider: {\n    padding: '0 13px'\n  },\n  thumb: {\n    opacity: 0\n  }\n}, borderStyle(theme));\n\nclass VolumeButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null,\n      value: PlayerStore.volume,\n      prevValue: PlayerStore.volume,\n      dragging: false,\n      buttonOver: false,\n      popupOver: false\n    };\n\n    this.onClientUpdateMediaVolume = update => {\n      const volume = update.volume,\n            prevVolume = update.prevVolume;\n\n      if (prevVolume === undefined) {\n        this.setState({\n          value: volume\n        });\n      } else {\n        this.setState({\n          value: volume,\n          prevValue: prevVolume\n        });\n      }\n    };\n\n    this.handlePopoverOpen = anchorEl => {\n      this.setState({\n        anchorEl: anchorEl\n      });\n    };\n\n    this.handlePopoverClose = () => {\n      const _this$state = this.state,\n            dragging = _this$state.dragging,\n            buttonOver = _this$state.buttonOver,\n            popupOver = _this$state.popupOver;\n      if (dragging) return;\n      if (buttonOver) return;\n      if (popupOver) return;\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleMouseEnter = (event, openPopover) => {\n      this.setState({\n        buttonOver: true\n      });\n\n      if (openPopover) {\n        this.handlePopoverOpen(event.currentTarget);\n      }\n    };\n\n    this.handleMouseLeave = () => {\n      this.setState({\n        buttonOver: false\n      }, () => {\n        this.handlePopoverClose();\n      });\n    };\n\n    this.handlePopupMouseLeave = () => {\n      this.setState({\n        popupOver: false\n      }, () => {\n        this.handlePopoverClose();\n      });\n    };\n\n    this.handleVoiceClick = () => {\n      const _this$state2 = this.state,\n            value = _this$state2.value,\n            prevValue = _this$state2.prevValue;\n      const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaVolume',\n        volume: nextValue\n      });\n    };\n\n    this.handleChange = (event, value) => {\n      const _this$state3 = this.state,\n            dragging = _this$state3.dragging,\n            prevValue = _this$state3.prevValue;\n\n      if (dragging) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateMediaVolume',\n          volume: value\n        });\n      } else {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateMediaVolume',\n          prevVolume: value > 0 ? value : prevValue,\n          volume: value\n        });\n      }\n    };\n\n    this.handleDragStart = () => {\n      const value = this.state.value;\n      this.setState({\n        dragging: true,\n        prevValue: value\n      });\n    };\n\n    this.handleDragEnd = () => {\n      const _this$state4 = this.state,\n            value = _this$state4.value,\n            prevValue = _this$state4.prevValue;\n      this.setState({\n        dragging: false,\n        prevValue: value > 0 ? value : prevValue\n      }, () => {\n        this.handlePopoverClose();\n      });\n    };\n\n    this.getVolumeIcon = value => {\n      if (value === 0) {\n        return React.createElement(VolumeOffIcon, {\n          fontSize: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        });\n      }\n\n      if (value < 0.25) {\n        return React.createElement(VolumeMuteIcon, {\n          fontSize: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        });\n      }\n\n      if (value < 0.5) {\n        return React.createElement(VolumeDownIcon, {\n          fontSize: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(VolumeUpIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n  }\n\n  componentWillUnmount() {\n    PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state5 = this.state,\n          anchorEl = _this$state5.anchorEl,\n          value = _this$state5.value;\n    const open = Boolean(anchorEl);\n    return React.createElement(\"div\", {\n      onMouseEnter: e => this.handleMouseEnter(e, true),\n      onMouseLeave: this.handleMouseLeave,\n      style: {\n        position: 'relative',\n        background: 'transparent'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.iconButton,\n      color: \"primary\",\n      onClick: this.handleVoiceClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.getVolumeIcon(value)), React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        background: 'transparent',\n        visibility: open ? 'visible' : 'hidden',\n        zIndex: 1\n      },\n      onMouseEnter: e => this.handleMouseEnter(e, false),\n      onMouseLeave: this.handlePopupMouseLeave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames(classes.borderColor, classes.root),\n      style: {\n        marginTop: 8,\n        borderWidth: 1,\n        borderStyle: 'solid'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      classes: {\n        container: classes.slider,\n        thumb: classes.thumb\n      },\n      min: 0,\n      max: 1,\n      value: value,\n      onChange: this.handleChange,\n      onDragStart: this.handleDragStart,\n      onDragEnd: this.handleDragEnd,\n      vertical: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(VolumeButton);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Player/VolumeButton.js"],"names":["React","classNames","withStyles","VolumeMuteIcon","VolumeDownIcon","VolumeUpIcon","VolumeOffIcon","IconButton","Slider","borderStyle","PLAYER_VOLUME_NORMAL","PlayerStore","TdLibController","styles","theme","iconButton","padding","root","display","height","width","background","palette","type","default","slider","thumb","opacity","VolumeButton","Component","state","anchorEl","value","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","update","prevVolume","undefined","setState","handlePopoverOpen","handlePopoverClose","handleMouseEnter","event","openPopover","currentTarget","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","clientUpdate","handleChange","handleDragStart","handleDragEnd","getVolumeIcon","componentDidMount","on","componentWillUnmount","removeListener","render","classes","props","open","Boolean","e","position","visibility","zIndex","borderColor","marginTop","borderWidth","container","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n"]},"metadata":{},"sourceType":"module"}