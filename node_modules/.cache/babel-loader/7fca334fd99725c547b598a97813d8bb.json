{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/Additional/SafeLink.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport './SafeLink.css';\n\nclass SafeLink extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = event => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({\n        confirm: true\n      });\n    };\n\n    this.handleDialogClick = event => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        confirm: false\n      });\n    };\n\n    this.handleDone = event => {\n      this.handleClose();\n      const _this$props = this.props,\n            url = _this$props.url,\n            onClick = _this$props.onClick;\n      if (!url) return;\n\n      if (onClick) {\n        onClick(event);\n      } else {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n      }\n    };\n\n    this.handleSafeClick = event => {\n      event.stopPropagation();\n      const onClick = this.props.onClick;\n\n      if (onClick) {\n        event.preventDefault();\n        onClick(event);\n      }\n    };\n\n    this.state = {};\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const displayText = props.displayText,\n          mail = props.mail,\n          url = props.url;\n\n    if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n      return {\n        prevUrl: url,\n        prevDisplayText: displayText,\n        safe: isUrlSafe(displayText, url),\n        decodedUrl: getDecodedUrl(url, mail),\n        href: getHref(url, mail),\n        confirm: false\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children,\n          t = _this$props2.t,\n          url = _this$props2.url;\n    const _this$state = this.state,\n          confirm = _this$state.confirm,\n          decodedUrl = _this$state.decodedUrl,\n          href = _this$state.href,\n          safe = _this$state.safe;\n    if (!url) return null;\n    if (!decodedUrl) return null;\n    return React.createElement(React.Fragment, null, safe ? React.createElement(\"a\", {\n      className: className,\n      href: href,\n      title: decodedUrl,\n      target: \"_blank\",\n      rel: \"noopener norefferer\",\n      onClick: this.handleSafeClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, children || url) : React.createElement(React.Fragment, null, React.createElement(\"a\", {\n      className: className,\n      title: decodedUrl,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, children || url), confirm && React.createElement(Dialog, {\n      transitionDuration: 0,\n      open: confirm,\n      onClose: this.handleClose,\n      onClick: this.handleDialogClick,\n      \"aria-labelledby\": \"confirm-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"confirm-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, t('Confirm')), React.createElement(DialogContent, {\n      classes: {\n        root: 'safe-link-content-root'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Open this link?\\n\\n\".concat(decodedUrl))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, t('Cancel')), React.createElement(Button, {\n      onClick: this.handleDone,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, t('Open'))))));\n  }\n\n}\n\nSafeLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  displayText: PropTypes.string,\n  mail: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default withTranslation()(SafeLink);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/Additional/SafeLink.js"],"names":["React","PropTypes","withTranslation","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","getDecodedUrl","getHref","isUrlSafe","SafeLink","Component","constructor","props","handleClick","event","preventDefault","stopPropagation","setState","confirm","handleDialogClick","handleClose","handleDone","url","onClick","newWindow","window","open","opener","location","handleSafeClick","state","getDerivedStateFromProps","displayText","mail","prevUrl","prevDisplayText","safe","decodedUrl","href","render","className","children","t","root","propTypes","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport './SafeLink.css';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleSafeClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener norefferer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n"]},"metadata":{},"sourceType":"module"}