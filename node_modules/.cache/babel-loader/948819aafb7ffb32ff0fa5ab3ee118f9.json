{"ast":null,"code":"var _jsxFileName = \"/home/me-admin/Downloads/telegram-app/src/Components/Tile/ChatControl.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            onSelect = _this$props.onSelect;\n      if (!onSelect) return;\n      onSelect(chatId);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      const chatId = this.props.chatId;\n      this.state = {\n        chat: ChatStore.get(chatId)\n      };\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.chatId !== this.props.chatId;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          chatId = _this$props2.chatId,\n          onTileSelect = _this$props2.onTileSelect,\n          showStatus = _this$props2.showStatus,\n          showSavedMessages = _this$props2.showSavedMessages;\n    return React.createElement(\"div\", {\n      className: \"chat\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ChatTile, {\n      chatId: chatId,\n      onSelect: onTileSelect,\n      showSavedMessages: showSavedMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dialog-inner-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tile-first-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      chatId: chatId,\n      showSavedMessages: showSavedMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), showStatus && !showSavedMessages && React.createElement(\"div\", {\n      className: \"tile-second-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(DialogStatus, {\n      chatId: chatId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nChatControl.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  showSavedMessages: PropTypes.bool,\n  showStatus: PropTypes.bool,\n  onSelect: PropTypes.func,\n  onTileSelect: PropTypes.func\n};\nChatControl.defaultProps = {\n  showSavedMessages: true,\n  showStatus: true\n};\nexport default ChatControl;","map":{"version":3,"sources":["/home/me-admin/Downloads/telegram-app/src/Components/Tile/ChatControl.js"],"names":["React","PropTypes","ChatTile","DialogTitle","DialogStatus","ChatStore","ChatControl","Component","constructor","props","handleClick","chatId","onSelect","process","env","NODE_ENV","state","chat","get","shouldComponentUpdate","nextProps","nextState","render","onTileSelect","showStatus","showSavedMessages","propTypes","number","isRequired","bool","func","defaultProps"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,WAdmB,GAcL,MAAM;AAAA,0BACa,KAAKD,KADlB;AAAA,YACRE,MADQ,eACRA,MADQ;AAAA,YACAC,QADA,eACAA,QADA;AAEhB,UAAI,CAACA,QAAL,EAAe;AAEfA,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACH,KAnBkB;;AAEf,QAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAAA,YAC/BJ,MAD+B,GACpB,KAAKF,KADe,CAC/BE,MAD+B;AAEvC,WAAKK,KAAL,GAAa;AACTC,QAAAA,IAAI,EAAEZ,SAAS,CAACa,GAAV,CAAcP,MAAd;AADG,OAAb;AAGH;AACJ;;AAEDQ,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,WAAOD,SAAS,CAACT,MAAV,KAAqB,KAAKF,KAAL,CAAWE,MAAvC;AACH;;AASDW,EAAAA,MAAM,GAAG;AAAA,yBAC2D,KAAKb,KADhE;AAAA,UACGE,MADH,gBACGA,MADH;AAAA,UACWY,YADX,gBACWA,YADX;AAAA,UACyBC,UADzB,gBACyBA,UADzB;AAAA,UACqCC,iBADrC,gBACqCA,iBADrC;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAE,KAAKf,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEC,MAAlB;AAA0B,MAAA,QAAQ,EAAEY,YAApC;AAAkD,MAAA,iBAAiB,EAAEE,iBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAEd,MAArB;AAA6B,MAAA,iBAAiB,EAAEc,iBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAIKD,UAAU,IAAI,CAACC,iBAAf,IACG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAEd,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALR,CAFJ,CADJ,CADJ;AAiBH;;AA1CqC;;AA6C1CL,WAAW,CAACoB,SAAZ,GAAwB;AACpBf,EAAAA,MAAM,EAAEV,SAAS,CAAC0B,MAAV,CAAiBC,UADL;AAEpBH,EAAAA,iBAAiB,EAAExB,SAAS,CAAC4B,IAFT;AAGpBL,EAAAA,UAAU,EAAEvB,SAAS,CAAC4B,IAHF;AAIpBjB,EAAAA,QAAQ,EAAEX,SAAS,CAAC6B,IAJA;AAKpBP,EAAAA,YAAY,EAAEtB,SAAS,CAAC6B;AALJ,CAAxB;AAQAxB,WAAW,CAACyB,YAAZ,GAA2B;AACvBN,EAAAA,iBAAiB,EAAE,IADI;AAEvBD,EAAAA,UAAU,EAAE;AAFW,CAA3B;AAKA,eAAelB,WAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n"]},"metadata":{},"sourceType":"module"}