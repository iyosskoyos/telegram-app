{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import dateFormat from'dateformat';import{getUserFullName,getUserShortName,getUserStatus,isUserOnline}from'./User';import{getSupergroupStatus}from'./Supergroup';import{getBasicGroupStatus}from'./BasicGroup';import{getLetters}from'./Common';import{getContent}from'./Message';import{isServiceMessage}from'./ServiceMessage';import BasicGroupStore from'../Stores/BasicGroupStore';import ChatStore from'../Stores/ChatStore';import NotificationStore from'../Stores/NotificationStore';import SupergroupStore from'../Stores/SupergroupStore';import UserStore from'../Stores/UserStore';import TdLibController from'../Controllers/TdLibController';function getGroupChatTypingString(inputTypingManager){if(!inputTypingManager)return null;var size=inputTypingManager.actions.size;if(size>2){return\"\".concat(size,\" people are typing\");}else if(size>1){var firstUser;var secondUser;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=inputTypingManager.actions.keys()[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var userId=_step.value;if(!firstUser){firstUser=UserStore.get(userId);}else if(!secondUser){secondUser=UserStore.get(userId);break;}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}if(!firstUser||!secondUser){return\"\".concat(size,\" people are typing\");}firstUser=firstUser.first_name?firstUser.first_name:firstUser.second_name;secondUser=secondUser.first_name?secondUser.first_name:secondUser.second_name;if(!firstUser||!secondUser){return\"\".concat(size,\" people are typing\");}return\"\".concat(firstUser,\" and \").concat(secondUser,\" are typing\");}else{var _firstUser;if(inputTypingManager.actions.size>=1){var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=inputTypingManager.actions.keys()[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _userId=_step2.value;if(!_firstUser){_firstUser=UserStore.get(_userId);break;}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}if(!_firstUser){return\"1 person is typing\";}_firstUser=_firstUser.first_name?_firstUser.first_name:_firstUser.second_name;if(!_firstUser){return\"1 person is typing\";}var action=inputTypingManager.actions.values().next().value.action;switch(action['@type']){case'chatActionRecordingVideo':return\"\".concat(_firstUser,\" is recording a video\");case'chatActionRecordingVideoNote':return\"\".concat(_firstUser,\" is recording a video message\");case'chatActionRecordingVoiceNote':return\"\".concat(_firstUser,\" is recording a voice message\");case'chatActionStartPlayingGame':return\"\".concat(_firstUser,\" is playing a game\");case'chatActionUploadingDocument':return\"\".concat(_firstUser,\" is sending a file\");case'chatActionUploadingPhoto':return\"\".concat(_firstUser,\" is sending a photo\");case'chatActionUploadingVideo':return\"\".concat(_firstUser,\" is sending a video\");case'chatActionUploadingVideoNote':return\"\".concat(_firstUser,\" is sending a video message\");case'chatActionUploadingVoiceNote':return\"\".concat(_firstUser,\" is sending a voice message\");case'chatActionChoosingContact':case'chatActionChoosingLocation':case'chatActionTyping':default:return\"\".concat(_firstUser,\" is typing\");}}}return null;}function getPrivateChatTypingString(inputTypingManager){if(!inputTypingManager)return null;if(inputTypingManager.actions.size>=1){var action=inputTypingManager.actions.values().next().value.action;switch(action['@type']){case'chatActionRecordingVideo':return'recording a video';case'chatActionRecordingVideoNote':return'recording a video message';case'chatActionRecordingVoiceNote':return'recording a voice message';case'chatActionStartPlayingGame':return'playing a game';case'chatActionUploadingDocument':return'sending a file';case'chatActionUploadingPhoto':return'sending a photo';case'chatActionUploadingVideo':return'sending a video';case'chatActionUploadingVideoNote':return'sending a video message';case'chatActionUploadingVoiceNote':return'sending a voice message';case'chatActionChoosingContact':case'chatActionChoosingLocation':case'chatActionTyping':default:return'typing';}}return null;}function getChatTypingString(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;if(!chat.type)return null;var typingManager=ChatStore.getTypingManager(chat.id);if(!typingManager)return null;switch(chat.type['@type']){case'chatTypePrivate':case'chatTypeSecret':{var typingString=getPrivateChatTypingString(typingManager);return typingString?typingString+'...':null;}case'chatTypeBasicGroup':case'chatTypeSupergroup':{var _typingString=getGroupChatTypingString(typingManager);return _typingString?_typingString+'...':null;}}return null;}function getMessageSenderFullName(message){if(!message)return null;if(isServiceMessage(message))return null;if(!message.sender_user_id)return null;var user=UserStore.get(message.sender_user_id);if(!user)return null;return getUserFullName(user);}function getMessageSenderName(message){if(!message)return null;if(isServiceMessage(message))return null;var chat=ChatStore.get(message.chat_id);if(chat&&chat.type['@type']!=='chatTypeBasicGroup'&&chat.type['@type']!=='chatTypeSupergroup'){return null;}return getUserShortName(message.sender_user_id);}function getLastMessageSenderName(chat){if(!chat)return null;return getMessageSenderName(chat.last_message);}function getLastMessageContent(chat){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(key){return key;};if(!chat)return null;var last_message=chat.last_message;if(!last_message)return null;return getContent(last_message,t);}function showChatUnreadMessageIcon(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var is_marked_as_unread=chat.is_marked_as_unread,last_message=chat.last_message,last_read_outbox_message_id=chat.last_read_outbox_message_id;if(!last_message)return false;var is_outgoing=last_message.is_outgoing;return is_outgoing&&last_message.id>last_read_outbox_message_id&&!is_marked_as_unread&&!showChatDraft(chatId);}function showChatUnreadMentionCount(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var unread_mention_count=chat.unread_mention_count;return unread_mention_count>0;}function showChatUnreadCount(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var is_marked_as_unread=chat.is_marked_as_unread,unread_count=chat.unread_count,unread_mention_count=chat.unread_mention_count;return unread_count>1||unread_count===1&&unread_mention_count===0||is_marked_as_unread&&unread_count===0&&unread_mention_count===0;}function isChatUnread(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var is_marked_as_unread=chat.is_marked_as_unread,unread_count=chat.unread_count,unread_mention_count=chat.unread_mention_count;return is_marked_as_unread||unread_count>0;}function isChatMuted(chatId){return getChatMuteFor(chatId)>0;}function getChatMuteFor(chatId){var chat=ChatStore.get(chatId);if(!chat)return 0;var notification_settings=chat.notification_settings;if(!notification_settings)return 0;var use_default_mute_for=notification_settings.use_default_mute_for,mute_for=notification_settings.mute_for;if(use_default_mute_for){var settings=getScopeNotificationSettings(chatId);return settings?settings.mute_for:false;}return mute_for;}export function getChatDisablePinnedMessageNotifications(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var notification_settings=chat.notification_settings;if(!chat)return false;var use_default_disable_pinned_message_notifications=notification_settings.use_default_disable_pinned_message_notifications,disable_pinned_message_notifications=notification_settings.disable_pinned_message_notifications;if(use_default_disable_pinned_message_notifications){var settings=getScopeNotificationSettings(chatId);return settings?settings.disable_pinned_message_notifications:false;}return disable_pinned_message_notifications;}export function getChatDisableMentionNotifications(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var notification_settings=chat.notification_settings;if(!notification_settings)return false;var use_default_disable_mention_notifications=notification_settings.use_default_disable_mention_notifications,disable_mention_notifications=notification_settings.disable_mention_notifications;if(use_default_disable_mention_notifications){var settings=getScopeNotificationSettings(chatId);return settings?settings.disable_mention_notifications:false;}return disable_mention_notifications;}export function getScopeNotificationSettings(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;switch(chat.type['@type']){case'chatTypePrivate':case'chatTypeSecret':{return NotificationStore.settings.get('notificationSettingsScopePrivateChats');}case'chatTypeBasicGroup':case'chatTypeSupergroup':{var settings=null;if(isChannelChat(chatId)){settings=NotificationStore.settings.get('notificationSettingsScopeChannelChats');}else{settings=NotificationStore.settings.get('notificationSettingsScopeGroupChats');}return settings;}}return null;}function getMessageDate(message){var date=new Date(message.date*1000);var dayStart=new Date();dayStart.setHours(0,0,0,0);if(date>dayStart){return dateFormat(date,'H:MM');}var now=new Date();var day=now.getDay();var weekStart=now.getDate()-day+(day===0?-6:1);var monday=new Date(now.setDate(weekStart));if(date>monday){return dateFormat(date,'ddd');}return dateFormat(date,'d.mm.yyyy');}function getLastMessageDate(chat){if(!chat)return null;if(!chat.last_message)return null;if(!chat.last_message.date)return null;if(showChatDraft(chat.id))return null;return getMessageDate(chat.last_message);}function getChatSubtitleWithoutTyping(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;var type=chat.type;if(!type)return null;switch(type['@type']){case'chatTypeBasicGroup':{var basicGroup=BasicGroupStore.get(type.basic_group_id);if(basicGroup){return getBasicGroupStatus(basicGroup,chatId);}break;}case'chatTypePrivate':case'chatTypeSecret':{var user=UserStore.get(type.user_id);if(user){return getUserStatus(user);}break;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(type.supergroup_id);if(supergroup){return getSupergroupStatus(supergroup,chatId);}break;}}return null;}function getChatSubtitle(chatId){var showSavedMessages=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(isMeChat(chatId)&&showSavedMessages){return null;}var chatTypingString=getChatTypingString(chatId);if(chatTypingString){return chatTypingString;}return getChatSubtitleWithoutTyping(chatId);}function getChatLetters(chat){if(!chat)return null;var title=chat.title||'Deleted account';if(title.length===0)return null;var letters=getLetters(title);if(letters&&letters.length>0){return letters;}return chat.title.charAt(0);}function isAccentChatSubtitleWithoutTyping(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;if(!chat.type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':{return false;}case'chatTypePrivate':case'chatTypeSecret':{var user=UserStore.get(chat.type.user_id);if(user){return isUserOnline(user);}break;}case'chatTypeSupergroup':{return false;}}return false;}function isAccentChatSubtitle(chatId){var typingString=getChatTypingString(chatId);if(typingString)return false;return isAccentChatSubtitleWithoutTyping(chatId);}function getChatUsername(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;if(!chat.type)return null;switch(chat.type['@type']){case'chatTypeBasicGroup':{return null;}case'chatTypePrivate':case'chatTypeSecret':{var user=UserStore.get(chat.type.user_id);if(user){return user.username;}break;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(chat.type.supergroup_id);if(supergroup){return supergroup.username;}break;}}return null;}function getChatPhoneNumber(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;if(!chat.type)return null;switch(chat.type['@type']){case'chatTypeBasicGroup':{return null;}case'chatTypePrivate':case'chatTypeSecret':{var user=UserStore.get(chat.type.user_id);if(user){return user.phone_number;}break;}case'chatTypeSupergroup':{return null;}}return null;}function getChatBio(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;if(!chat.type)return null;switch(chat.type['@type']){case'chatTypeBasicGroup':{return null;}case'chatTypePrivate':case'chatTypeSecret':{var fullInfo=UserStore.getFullInfo(chat.type.user_id);if(fullInfo){return fullInfo.bio;}break;}case'chatTypeSupergroup':{var _fullInfo=SupergroupStore.getFullInfo(chat.type.supergroup_id);if(_fullInfo){return _fullInfo.description;}break;}}return null;}function isPrivateChat(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;if(!chat.type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':case'chatTypeSupergroup':{return false;}case'chatTypePrivate':case'chatTypeSecret':{return true;}}return false;}function isGroupChat(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;if(!chat.type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':case'chatTypeSupergroup':{return true;}case'chatTypePrivate':case'chatTypeSecret':{return false;}}return false;}function isChannelChat(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;if(!chat.type)return false;switch(chat.type['@type']){case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(chat.type.supergroup_id);return supergroup&&supergroup.is_channel;}case'chatTypeBasicGroup':case'chatTypePrivate':case'chatTypeSecret':{return false;}}return false;}function isChatMember(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;if(!chat.type)return false;switch(chat.type['@type']){case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(chat.type.supergroup_id);if(supergroup&&supergroup.status){switch(supergroup.status['@type']){case'chatMemberStatusAdministrator':{return true;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{return true;}case'chatMemberStatusRestricted':{return supergroup.status.is_member;}}}break;}case'chatTypeBasicGroup':{var basicGroup=BasicGroupStore.get(chat.type.basic_group_id);if(basicGroup&&basicGroup.status){switch(basicGroup.status['@type']){case'chatMemberStatusAdministrator':{return true;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{return true;}case'chatMemberStatusRestricted':{return basicGroup.status.is_member;}}}break;}case'chatTypePrivate':case'chatTypeSecret':{return true;}}return false;}function getChatTitle(chatId){var showSavedMessages=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var t=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(key){return key;};var chat=ChatStore.get(chatId);if(!chat)return null;if(isMeChat(chatId)&&showSavedMessages){return t('SavedMessages');}return chat.title||t('HiddenName');}function isMeChat(chatId){var fallbackValue=false;var chat=ChatStore.get(chatId);if(!chat)return fallbackValue;switch(chat.type['@type']){case'chatTypeBasicGroup':case'chatTypeSupergroup':{return false;}case'chatTypeSecret':case'chatTypePrivate':{return UserStore.getMyId()===chat.type.user_id;}}return fallbackValue;}function getGroupChatMembers(chatId){var fallbackValue=[];var chat=ChatStore.get(chatId);if(!chat)return fallbackValue;switch(chat.type['@type']){case'chatTypeBasicGroup':{var fullInfo=BasicGroupStore.getFullInfo(chat.type.basic_group_id);if(fullInfo){return fullInfo.members||fallbackValue;}break;}case'chatTypeSupergroup':{break;}case'chatTypeSecret':case'chatTypePrivate':{break;}}return fallbackValue;}function getChatFullInfo(_x){return _getChatFullInfo.apply(this,arguments);}function _getChatFullInfo(){_getChatFullInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(chatId){var chat,type;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:chat=ChatStore.get(chatId);if(chat){_context.next=3;break;}return _context.abrupt(\"return\",null);case 3:type=chat.type;if(type){_context.next=6;break;}return _context.abrupt(\"return\",null);case 6:_context.t0=type['@type'];_context.next=_context.t0==='chatTypePrivate'?9:_context.t0==='chatTypeSecret'?12:_context.t0==='chatTypeBasicGroup'?15:_context.t0==='chatTypeSupergroup'?18:21;break;case 9:_context.next=11;return TdLibController.send({'@type':'getUserFullInfo',user_id:type.user_id});case 11:return _context.abrupt(\"return\",_context.sent);case 12:_context.next=14;return TdLibController.send({'@type':'getUserFullInfo',user_id:type.user_id});case 14:return _context.abrupt(\"return\",_context.sent);case 15:_context.next=17;return TdLibController.send({'@type':'getBasicGroupFullInfo',basic_group_id:type.basic_group_id});case 17:return _context.abrupt(\"return\",_context.sent);case 18:_context.next=20;return TdLibController.send({'@type':'getSupergroupFullInfo',supergroup_id:type.supergroup_id});case 20:return _context.abrupt(\"return\",_context.sent);case 21:return _context.abrupt(\"return\",null);case 22:case\"end\":return _context.stop();}}},_callee);}));return _getChatFullInfo.apply(this,arguments);}function hasBasicGroupId(chatId,basicGroupId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;return type&&type['@type']==='chatTypeBasicGroup'&&type.basic_group_id===basicGroupId;}function isSupergroup(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;return type&&type['@type']==='chatTypeSupergroup';}function getSupergroupId(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;if(type&&type['@type']==='chatTypeSupergroup'){return type.supergroup_id;}return 0;}function hasSupergroupId(chatId,supergroupId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;return isSupergroup(chatId)&&type.supergroup_id===supergroupId;}function hasUserId(chatId,userId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;return type&&(type['@type']==='chatTypePrivate'||type['@type']==='chatTypeSecret')&&type.user_id===userId;}function getChatUserId(chatId){var chat=ChatStore.get(chatId);if(!chat)return 0;var type=chat.type;return type&&(type['@type']==='chatTypePrivate'||type['@type']==='chatTypeSecret')?type.user_id:0;}function getPhotoFromChat(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;if(isPrivateChat(chatId)){var user=UserStore.get(getChatUserId(chatId));if(user){return user.profile_photo;}}return chat.photo;}function canSendFiles(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;if(!chat.type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':{var basicGroup=BasicGroupStore.get(chat.type.basic_group_id);if(basicGroup&&basicGroup.status){switch(basicGroup.status['@type']){case'chatMemberStatusAdministrator':{return true;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{return true;}case'chatMemberStatusRestricted':{if(basicGroup.status.can_send_media_messages){return true;}else{return false;}}}}break;}case'chatTypePrivate':{return true;}case'chatTypeSecret':{return true;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(chat.type.supergroup_id);if(supergroup&&supergroup.status){switch(supergroup.status['@type']){case'chatMemberStatusAdministrator':{return true;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{if(supergroup.is_channel){return false;}else{return true;}}case'chatMemberStatusRestricted':{if(supergroup.status.can_send_media_messages){return true;}else{return false;}}}}}}return false;}function getChatShortTitle(chatId){var showSavedMessages=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(isMeChat(chatId)&&showSavedMessages){return'Saved Messages';}var chat=ChatStore.get(chatId);if(!chat)return null;if(!chat.type)return null;switch(chat.type['@type']){case'chatTypeBasicGroup':{return chat.title;}case'chatTypeSupergroup':{return chat.title;}case'chatTypePrivate':case'chatTypeSecret':{return getUserShortName(chat.type.user_id);}}return null;}function getGroupChatMembersCount(chatId){var chat=ChatStore.get(chatId);if(!chat)return null;if(!chat.type)return null;switch(chat.type['@type']){case'chatTypeBasicGroup':{var basicGroup=BasicGroupStore.get(chat.type.basic_group_id);if(basicGroup){return basicGroup.member_count;}return 0;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(chat.type.supergroup_id);if(supergroup){return supergroup.member_count;}return 0;}case'chatTypePrivate':case'chatTypeSecret':{return 0;}}return 0;}function canClearHistory(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;if(!chat.type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':{return true;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(chat.type.supergroup_id);if(supergroup){return!Boolean(supergroup.username);}return true;}case'chatTypePrivate':case'chatTypeSecret':{return true;}}return false;}function canDeleteChat(chatId){return!isMeChat(chatId);}function canSendPhotos(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;if(!type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':{return true;}case'chatTypePrivate':{return true;}case'chatTypeSecret':{return true;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(type.supergroup_id);if(supergroup){var status=supergroup.status;if(status){switch(supergroup.status['@type']){case'chatMemberStatusAdministrator':{return true;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{return!supergroup.is_channel;}case'chatMemberStatusRestricted':{return status.can_send_media_messages;}}}}}}return false;}function canSendDocuments(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;if(!type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':{return true;}case'chatTypePrivate':{return true;}case'chatTypeSecret':{return true;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(type.supergroup_id);if(supergroup){var status=supergroup.status;if(status){switch(supergroup.status['@type']){case'chatMemberStatusAdministrator':{return true;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{return!supergroup.is_channel;}case'chatMemberStatusRestricted':{return status.can_send_media_messages;}}}}}}return false;}function canSendPolls(chatId){return true;}function canSendMessages(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;if(!type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':{var basicGroup=BasicGroupStore.get(type.basic_group_id);if(basicGroup&&basicGroup.status){switch(basicGroup.status['@type']){case'chatMemberStatusAdministrator':{return true;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{return true;}case'chatMemberStatusRestricted':{if(basicGroup.status.can_send_messages){return true;}else{return false;}}}}break;}case'chatTypePrivate':{return true;}case'chatTypeSecret':{return true;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(type.supergroup_id);if(supergroup&&supergroup.status){switch(supergroup.status['@type']){case'chatMemberStatusAdministrator':{return true;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{if(supergroup.is_channel){return false;}else{return true;}}case'chatMemberStatusRestricted':{if(supergroup.status.can_send_messages){return true;}else{return false;}}}}}}return false;}function showChatDraft(chatId){var chat=ChatStore.get(chatId);var draft=getChatDraft(chatId);return draft&&chat.unread_count===0&&chat.unread_mention_count===0;}function getChatDraft(chatId){var chat=ChatStore.get(chatId);if(chat){var draft_message=chat.draft_message;if(draft_message){var input_message_text=draft_message.input_message_text;if(input_message_text){return input_message_text.text;}}}return null;}function getChatDraftReplyToMessageId(chatId){var replyToMessageId=0;var chat=ChatStore.get(chatId);if(chat){var draft_message=chat.draft_message;if(draft_message){replyToMessageId=draft_message.reply_to_message_id;}}console.log('getChatDraft',replyToMessageId);return replyToMessageId;}function canPinMessages(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;if(!type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':{var basicGroup=BasicGroupStore.get(type.basic_group_id);if(basicGroup&&basicGroup.status){switch(basicGroup.status['@type']){case'chatMemberStatusAdministrator':{return basicGroup.status.can_pin_messages;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{return false;}case'chatMemberStatusRestricted':{return false;}}}break;}case'chatTypePrivate':{return isMeChat(chatId);}case'chatTypeSecret':{return false;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(type.supergroup_id);if(supergroup&&supergroup.status){switch(supergroup.status['@type']){case'chatMemberStatusAdministrator':{return supergroup.status.can_pin_messages;}case'chatMemberStatusBanned':{return false;}case'chatMemberStatusCreator':{return true;}case'chatMemberStatusLeft':{return false;}case'chatMemberStatusMember':{return false;}case'chatMemberStatusRestricted':{return false;}}}}}return false;}function isChatVerified(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;if(!type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':{return false;}case'chatTypePrivate':case'chatTypeSecret':{var user=UserStore.get(type.user_id);return user&&user.is_verified;}case'chatTypeSupergroup':{var supergroup=SupergroupStore.get(type.supergroup_id);return supergroup&&supergroup.is_verified;}}return false;}function isChatSecret(chatId){var chat=ChatStore.get(chatId);if(!chat)return false;var type=chat.type;if(!type)return false;switch(chat.type['@type']){case'chatTypeBasicGroup':{return false;}case'chatTypePrivate':{return false;}case'chatTypeSecret':{return true;}case'chatTypeSupergroup':{return false;}}return false;}export{showChatDraft,getChatDraft,getChatDraftReplyToMessageId,getChatTypingString,showChatUnreadMessageIcon,showChatUnreadMentionCount,showChatUnreadCount,getChatMuteFor,getChatSubtitle,getChatSubtitleWithoutTyping,getLastMessageSenderName,getMessageSenderName,getMessageSenderFullName,getLastMessageContent,getLastMessageDate,getMessageDate,getChatLetters,isAccentChatSubtitle,isAccentChatSubtitleWithoutTyping,isChatMuted,getChatUsername,getChatPhoneNumber,getChatBio,isPrivateChat,isGroupChat,isChannelChat,isChatUnread,isChatMember,isChatVerified,isChatSecret,getChatTitle,getGroupChatMembers,getChatFullInfo,hasBasicGroupId,hasSupergroupId,isSupergroup,getSupergroupId,hasUserId,getChatUserId,getPhotoFromChat,getChatShortTitle,getGroupChatMembersCount,isMeChat,canClearHistory,canDeleteChat,canPinMessages,canSendFiles,canSendMessages,canSendPhotos,canSendDocuments,canSendPolls};","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Utils/Chat.js"],"names":["React","dateFormat","getUserFullName","getUserShortName","getUserStatus","isUserOnline","getSupergroupStatus","getBasicGroupStatus","getLetters","getContent","isServiceMessage","BasicGroupStore","ChatStore","NotificationStore","SupergroupStore","UserStore","TdLibController","getGroupChatTypingString","inputTypingManager","size","actions","firstUser","secondUser","keys","userId","get","first_name","second_name","action","values","next","value","getPrivateChatTypingString","getChatTypingString","chatId","chat","type","typingManager","getTypingManager","id","typingString","getMessageSenderFullName","message","sender_user_id","user","getMessageSenderName","chat_id","getLastMessageSenderName","last_message","getLastMessageContent","t","key","showChatUnreadMessageIcon","is_marked_as_unread","last_read_outbox_message_id","is_outgoing","showChatDraft","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","unread_count","isChatUnread","isChatMuted","getChatMuteFor","notification_settings","use_default_mute_for","mute_for","settings","getScopeNotificationSettings","getChatDisablePinnedMessageNotifications","use_default_disable_pinned_message_notifications","disable_pinned_message_notifications","getChatDisableMentionNotifications","use_default_disable_mention_notifications","disable_mention_notifications","isChannelChat","getMessageDate","date","Date","dayStart","setHours","now","day","getDay","weekStart","getDate","monday","setDate","getLastMessageDate","getChatSubtitleWithoutTyping","basicGroup","basic_group_id","user_id","supergroup","supergroup_id","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","length","letters","charAt","isAccentChatSubtitleWithoutTyping","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","fullInfo","getFullInfo","bio","description","isPrivateChat","isGroupChat","is_channel","isChatMember","status","is_member","getChatTitle","fallbackValue","getMyId","getGroupChatMembers","members","getChatFullInfo","send","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","hasUserId","getChatUserId","getPhotoFromChat","profile_photo","photo","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","member_count","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","draft","getChatDraft","draft_message","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","reply_to_message_id","console","log","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getChatDisablePinnedMessageNotifications(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { notification_settings } = chat;\n    if (!chat) return false;\n\n    const {\n        use_default_disable_pinned_message_notifications,\n        disable_pinned_message_notifications\n    } = notification_settings;\n    if (use_default_disable_pinned_message_notifications) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.disable_pinned_message_notifications : false;\n    }\n\n    return disable_pinned_message_notifications;\n}\n\nexport function getChatDisableMentionNotifications(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return false;\n\n    const { use_default_disable_mention_notifications, disable_mention_notifications } = notification_settings;\n    if (use_default_disable_mention_notifications) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.disable_mention_notifications : false;\n    }\n\n    return disable_mention_notifications;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return basicGroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return isMeChat(chatId);\n        }\n        case 'chatTypeSecret': {\n            return false;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return supergroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n"]},"metadata":{},"sourceType":"module"}