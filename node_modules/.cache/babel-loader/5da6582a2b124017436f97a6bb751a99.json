{"ast":null,"code":"var _jsxFileName = \"/home/chilly/Projects/Capacitor/telegram-app/src/Components/InstantView/Blocks/Table.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n  const caption = props.caption,\n        cells = props.cells,\n        isBordered = props.isBordered,\n        isStriped = props.isStriped,\n        iv = props.iv;\n  return React.createElement(\"table\", {\n    striped: isStriped ? '' : null,\n    border: isBordered ? 1 : 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, !isEmptyText(caption) && React.createElement(\"caption\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(RichText, {\n    text: caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, cells.map((row, rowIndex) => {\n    return React.createElement(\"tr\", {\n      key: rowIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, row.map((x, index) => getPageBlock(x, iv, index)));\n  })));\n}\n\nTable.propTypes = {\n  caption: PropTypes.object.isRequired,\n  cells: PropTypes.array.isRequired,\n  isBordered: PropTypes.bool.isRequired,\n  isStriped: PropTypes.bool.isRequired\n};\nexport default withIV(Table);","map":{"version":3,"sources":["/home/chilly/Projects/Capacitor/telegram-app/src/Components/InstantView/Blocks/Table.js"],"names":["React","PropTypes","withIV","RichText","getPageBlock","isEmptyText","Table","props","caption","cells","isBordered","isStriped","iv","map","row","rowIndex","x","index","propTypes","object","isRequired","array","bool"],"mappings":";;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,4BAA1C;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,QACVC,OADU,GACoCD,KADpC,CACVC,OADU;AAAA,QACDC,KADC,GACoCF,KADpC,CACDE,KADC;AAAA,QACMC,UADN,GACoCH,KADpC,CACMG,UADN;AAAA,QACkBC,SADlB,GACoCJ,KADpC,CACkBI,SADlB;AAAA,QAC6BC,EAD7B,GACoCL,KADpC,CAC6BK,EAD7B;AAGlB,SACI;AAAO,IAAA,OAAO,EAAED,SAAS,GAAG,EAAH,GAAQ,IAAjC;AAAuC,IAAA,MAAM,EAAED,UAAU,GAAG,CAAH,GAAO,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACL,WAAW,CAACG,OAAD,CAAZ,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAK,CAACI,GAAN,CAAU,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAC1B,WAAO;AAAI,MAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,GAAG,CAACD,GAAJ,CAAQ,CAACG,CAAD,EAAIC,KAAJ,KAAcb,YAAY,CAACY,CAAD,EAAIJ,EAAJ,EAAQK,KAAR,CAAlC,CAApB,CAAP;AACH,GAFA,CADL,CANJ,CADJ;AAcH;;AAEDX,KAAK,CAACY,SAAN,GAAkB;AACdV,EAAAA,OAAO,EAAEP,SAAS,CAACkB,MAAV,CAAiBC,UADZ;AAEdX,EAAAA,KAAK,EAAER,SAAS,CAACoB,KAAV,CAAgBD,UAFT;AAGdV,EAAAA,UAAU,EAAET,SAAS,CAACqB,IAAV,CAAeF,UAHb;AAIdT,EAAAA,SAAS,EAAEV,SAAS,CAACqB,IAAV,CAAeF;AAJZ,CAAlB;AAOA,eAAelB,MAAM,CAACI,KAAD,CAArB","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n"]},"metadata":{},"sourceType":"module"}