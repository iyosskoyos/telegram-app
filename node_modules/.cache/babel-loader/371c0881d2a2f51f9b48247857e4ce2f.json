{"ast":null,"code":"/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import dateFormat from'dateformat';import{getLetters,getSize}from'./Common';import{PROFILE_PHOTO_BIG_SIZE,PROFILE_PHOTO_SMALL_SIZE,SERVICE_NOTIFICATIONS_USER_ID}from'../Constants';import UserStore from'../Stores/UserStore';function getUserStatus(user){if(!user)return null;if(!user.status)return null;if(user.id===SERVICE_NOTIFICATIONS_USER_ID){return'service notifications';}if(user.type&&user.type['@type']==='userTypeBot'){return'bot';}switch(user.status['@type']){case'userStatusEmpty':{return'last seen a long time ago';}case'userStatusLastMonth':{return'last seen within a month';}case'userStatusLastWeek':{return'last seen within a week';}case'userStatusOffline':{var was_online=user.status.was_online;if(!was_online)return'offline';var now=new Date();var wasOnline=new Date(was_online*1000);if(wasOnline>now){return'last seen just now';}var diff=new Date(now-wasOnline);// within a minute\nif(diff.getTime()/1000<60){return'last seen just now';}// within an hour\nif(diff.getTime()/1000<60*60){var minutes=Math.floor(diff.getTime()/1000/60);return\"last seen \".concat(minutes===1?'1 minute':minutes+' minutes',\" ago\");}// today\nvar today=new Date();today.setHours(0,0,0,0);if(wasOnline>today){// up to 6 hours ago\nif(diff.getTime()/1000<6*60*60){var hours=Math.floor(diff.getTime()/1000/60/60);return\"last seen \".concat(hours===1?'1 hour':hours+' hours',\" ago\");}// other\nreturn\"last seen today at \".concat(dateFormat(wasOnline,'H:MM'));}// yesterday\nvar yesterday=new Date();yesterday.setDate(now.getDate()-1);today.setHours(0,0,0,0);if(wasOnline>yesterday){return\"last seen yesterday at \".concat(dateFormat(wasOnline,'H:MM'));}return\"last seen \".concat(dateFormat(wasOnline,'dd.mm.yyyy'));}case'userStatusOnline':{return'online';}case'userStatusRecently':{return'last seen recently';}}return null;}function isUserOnline(user){if(!user)return false;var id=user.id,status=user.status,type=user.type;if(!status)return false;if(!type)return false;if(id===SERVICE_NOTIFICATIONS_USER_ID)return false;return status['@type']==='userStatusOnline'&&type['@type']!=='userTypeBot';}function getUserFullName(user){if(!user)return null;if(!user.type)return null;switch(user.type['@type']){case'userTypeBot':case'userTypeRegular':{if(user.first_name&&user.last_name)return\"\".concat(user.first_name,\" \").concat(user.last_name);if(user.first_name)return user.first_name;if(user.last_name)return user.last_name;}case'userTypeDeleted':case'userTypeUnknown':{return'Deleted account';}}return null;}function getUserShortName(userId){var user=UserStore.get(userId);if(!user)return null;if(!user.type)return null;switch(user.type['@type']){case'userTypeBot':case'userTypeRegular':{if(user.first_name)return user.first_name;if(user.last_name)return user.last_name;}case'userTypeDeleted':case'userTypeUnknown':{return'Deleted account';}}return null;}function isUserBlocked(userId){var fullInfo=UserStore.getFullInfo(userId);if(fullInfo){return fullInfo.is_blocked;}return false;}function getUserLetters(userId,firstName,lastName){var user=UserStore.get(userId);if(!user&&!(firstName||lastName))return null;var title=getUserFullName(user)||\"\".concat(firstName,\" \").concat(lastName).trim();var letters=getLetters(title);if(letters&&letters.length>0){return letters;}if(user){return user.first_name?user.first_name.charAt(0):user.last_name?user.last_name.charAt(0):'';}return firstName?firstName.charAt(0):lastName?lastName.charAt(0):'';}function getUserStatusOrder(user){if(!user)return 0;if(!user.status)return 0;if(user.type['@type']==='userTypeBot')return 0;switch(user.status['@type']){case'userStatusEmpty':{return 1;}case'userStatusLastMonth':{return 10;}case'userStatusLastWeek':{return 100;}case'userStatusOffline':{return user.status.was_online;}case'userStatusOnline':{return user.status.expires;}case'userStatusRecently':{return 1000;}}}function getProfilePhoto(userProfilePhoto){if(!userProfilePhoto)return null;var id=userProfilePhoto.id,sizes=userProfilePhoto.sizes;if(!sizes)return null;if(!sizes.length)return null;var smallPhotoSize=getSize(sizes,PROFILE_PHOTO_SMALL_SIZE);var bigPhotoSize=getSize(sizes,PROFILE_PHOTO_BIG_SIZE);return{'@type':'profilePhoto',id:id,small:smallPhotoSize.photo,big:bigPhotoSize.photo};}function getProfilePhotoDateHint(userProfilePhoto){if(!userProfilePhoto)return null;var added_date=userProfilePhoto.added_date;if(!added_date)return null;var date=new Date(added_date*1000);return dateFormat(date,'H:MM:ss d.mm.yyyy');}export{getUserStatus,isUserOnline,getUserFullName,isUserBlocked,getUserLetters,getUserStatusOrder,getProfilePhoto,getProfilePhotoDateHint,getUserShortName};","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Utils/User.js"],"names":["dateFormat","getLetters","getSize","PROFILE_PHOTO_BIG_SIZE","PROFILE_PHOTO_SMALL_SIZE","SERVICE_NOTIFICATIONS_USER_ID","UserStore","getUserStatus","user","status","id","type","was_online","now","Date","wasOnline","diff","getTime","minutes","Math","floor","today","setHours","hours","yesterday","setDate","getDate","isUserOnline","getUserFullName","first_name","last_name","getUserShortName","userId","get","isUserBlocked","fullInfo","getFullInfo","is_blocked","getUserLetters","firstName","lastName","title","trim","letters","length","charAt","getUserStatusOrder","expires","getProfilePhoto","userProfilePhoto","sizes","smallPhotoSize","bigPhotoSize","small","photo","big","getProfilePhotoDateHint","added_date","date"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(user) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n    }\n\n    return firstName ? firstName.charAt(0) : lastName ? lastName.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n"]},"metadata":{},"sourceType":"module"}