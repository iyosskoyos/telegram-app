{"ast":null,"code":"import _defineProperty from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/me-admin/Downloads/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import ListItem from'@material-ui/core/ListItem';import withStyles from'@material-ui/core/styles/withStyles';import classNames from'classnames';import ChatTile from'./ChatTile';import DialogTitle from'./DialogTitle';import{getChatUsername,getGroupChatMembersCount}from'../../Utils/Chat';import ApplicationStore from'../../Stores/ApplicationStore';import'./FoundPublicChat.css';var styles=function styles(theme){return{listItem:{padding:0},verifiedIcon:{color:theme.palette.primary.main},foundPublicChatActive:{color:'#fff',backgroundColor:theme.palette.primary.main,'& $verifiedIcon':{color:'#fff'}},foundPublicChatSubtitle:{color:theme.palette.text.secondary}};};var FoundPublicChat=/*#__PURE__*/function(_React$Component){_inherits(FoundPublicChat,_React$Component);function FoundPublicChat(props){var _this;_classCallCheck(this,FoundPublicChat);_this=_possibleConstructorReturn(this,_getPrototypeOf(FoundPublicChat).call(this,props));_this.onClientUpdateChatId=function(update){var nextChatId=update.nextChatId,previousChatId=update.previousChatId;_this.setState({nextChatId:nextChatId,previousChatId:previousChatId});};_this.state={nextChatId:ApplicationStore.getChatId(),previousChatId:null};return _this;}_createClass(FoundPublicChat,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){var _this$props=this.props,chatId=_this$props.chatId,theme=_this$props.theme;if(nextState.nextChatId===chatId){return true;}if(nextState.previousChatId===chatId){return true;}if(nextProps.theme!==theme){return true;}return false;}},{key:\"componentDidMount\",value:function componentDidMount(){ApplicationStore.on('clientUpdateChatId',this.onClientUpdateChatId);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ApplicationStore.removeListener('clientUpdateChatId',this.onClientUpdateChatId);}},{key:\"render\",value:function render(){var _classNames;var _this$props2=this.props,chatId=_this$props2.chatId,onClick=_this$props2.onClick,classes=_this$props2.classes;var selectedChatId=this.state.nextChatId;var username=getChatUsername(chatId);var membersCount=getGroupChatMembersCount(chatId);var subscribersString='';if(membersCount>0){subscribersString=membersCount===1?', 1 subscriber':\", \".concat(membersCount,\" subscribers\");}return React.createElement(ListItem,{button:true,classes:{root:classes.listItem},onClick:onClick},React.createElement(\"div\",{className:classNames('found-public-chat',(_classNames={},_defineProperty(_classNames,classes.foundPublicChatActive,chatId===selectedChatId),_defineProperty(_classNames,'accent-background',chatId===selectedChatId),_classNames))},React.createElement(ChatTile,{chatId:chatId}),React.createElement(\"div\",{className:\"dialog-inner-wrapper\"},React.createElement(\"div\",{className:\"tile-first-row\"},React.createElement(DialogTitle,{chatId:chatId,classes:{verifiedIcon:classes.verifiedIcon}})),React.createElement(\"div\",{className:\"tile-second-row\"},React.createElement(\"div\",{className:classNames('dialog-content',classes.foundPublicChatSubtitle)},\"@\",username,subscribersString)))));}}]);return FoundPublicChat;}(React.Component);export default withStyles(styles,{withTheme:true})(FoundPublicChat);","map":{"version":3,"sources":["/home/me-admin/Downloads/my-app/src/Components/Tile/FoundPublicChat.js"],"names":["React","ListItem","withStyles","classNames","ChatTile","DialogTitle","getChatUsername","getGroupChatMembersCount","ApplicationStore","styles","theme","listItem","padding","verifiedIcon","color","palette","primary","main","foundPublicChatActive","backgroundColor","foundPublicChatSubtitle","text","secondary","FoundPublicChat","props","onClientUpdateChatId","update","nextChatId","previousChatId","setState","state","getChatId","nextProps","nextState","chatId","on","removeListener","onClick","classes","selectedChatId","username","membersCount","subscribersString","root","Component","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n"]},"metadata":{},"sourceType":"module"}