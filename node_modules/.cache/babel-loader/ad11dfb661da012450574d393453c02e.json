{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _defineProperty from\"/Users/yosuahalim/Documents/Projects/telegram-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */import React from'react';import classNames from'classnames';import{compose}from'recompose';import withStyles from'@material-ui/core/styles/withStyles';import{withTranslation}from'react-i18next';import Button from'@material-ui/core/Button';import CloseIcon from'@material-ui/icons/Close';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import DialogTitle from'@material-ui/core/DialogTitle';import IconButton from'@material-ui/core/IconButton';import ReplyTile from'../Tile/ReplyTile';import{accentStyles,borderStyle}from'../Theme';import{canPinMessages}from'../../Utils/Chat';import{getContent,getReplyPhotoSize,isDeletedMessage}from'../../Utils/Message';import{loadMessageContents}from'../../Utils/File';import{openChat}from'../../Actions/Client';import ChatStore from'../../Stores/ChatStore';import FileStore from'../../Stores/FileStore';import MessageStore from'../../Stores/MessageStore';import TdLibController from'../../Controllers/TdLibController';import'./PinnedMessage.css';var styles=function styles(theme){return _objectSpread({},accentStyles(theme),{},borderStyle(theme),{iconButton:{// padding: 4\n},pinnedMessage:{background:theme.palette.type==='dark'?theme.palette.background.default:'#FFFFFF',color:theme.palette.text.primary},pinnedMessageContentSubtitle:{color:theme.palette.text.secondary}});};var PinnedMessage=/*#__PURE__*/function(_React$Component){_inherits(PinnedMessage,_React$Component);function PinnedMessage(props){var _this;_classCallCheck(this,PinnedMessage);_this=_possibleConstructorReturn(this,_getPrototypeOf(PinnedMessage).call(this,props));_this.onClientUpdateSetChatClientData=function(update){var chatId=update.chatId,clientData=update.clientData;if(_this.props.chatId!==chatId)return;_this.setState({clientData:clientData});};_this.onUpdateChatPinnedMessage=function(update){var chat_id=update.chat_id,pinned_message_id=update.pinned_message_id;var chatId=_this.props.chatId;if(chatId!==chat_id)return;_this.setState({messageId:pinned_message_id});};_this.loadContent=function(){var chatId=_this.props.chatId;var messageId=_this.state.messageId;if(!chatId)return;if(!messageId)return;var message=MessageStore.get(chatId,messageId);if(message)return;TdLibController.send({'@type':'getMessage',chat_id:chatId,message_id:messageId}).then(function(result){MessageStore.set(result);var store=FileStore.getStore();loadMessageContents(store,[result]);_this.forceUpdate();}).catch(function(error){var deletedMessage={'@type':'deletedMessage',chat_id:chatId,id:messageId,content:null};MessageStore.set(deletedMessage);_this.forceUpdate();});};_this.handleClick=function(event){var chatId=_this.props.chatId;var messageId=_this.state.messageId;if(!messageId)return;openChat(chatId,messageId);};_this.handleDelete=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var chatId,messageId,canPin,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();event.stopPropagation();chatId=_this.props.chatId;messageId=_this.state.messageId;canPin=canPinMessages(chatId);if(!canPin){_context.next=9;break;}_this.setState({confirm:true});_context.next=12;break;case 9:data=ChatStore.getClientData(chatId);_context.next=12;return TdLibController.clientUpdate({'@type':'clientUpdateSetChatClientData',chatId:chatId,clientData:Object.assign({},data,{unpinned_message_id:messageId})});case 12:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.handleUnpin=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var chatId;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:chatId=_this.props.chatId;_this.handleClose();TdLibController.send({'@type':'unpinChatMessage',chat_id:chatId});case 3:case\"end\":return _context2.stop();}}},_callee2);}));_this.handleClose=function(){_this.setState({confirm:false});};var chat=ChatStore.get(props.chatId);_this.state={prevPropsChatId:props.chatId,clientData:ChatStore.getClientData(props.chatId),messageId:chat&&chat.pinned_message_id?chat.pinned_message_id:0,confirm:false};return _this;}_createClass(PinnedMessage,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){var messageId=this.state.messageId;if(messageId&&prevState.messageId!==messageId){this.loadContent();}}},{key:\"componentDidMount\",value:function componentDidMount(){this.loadContent();ChatStore.on('updateChatPinnedMessage',this.onUpdateChatPinnedMessage);ChatStore.on('clientUpdateSetChatClientData',this.onClientUpdateSetChatClientData);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ChatStore.removeListener('updateChatPinnedMessage',this.onUpdateChatPinnedMessage);ChatStore.removeListener('clientUpdateSetChatClientData',this.onClientUpdateSetChatClientData);}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState,nextContext){var _this$props=this.props,chatId=_this$props.chatId,t=_this$props.t,theme=_this$props.theme;var _this$state=this.state,clientData=_this$state.clientData,confirm=_this$state.confirm,messageId=_this$state.messageId;if(nextProps.t!==t){return true;}if(nextProps.theme!==theme){return true;}if(nextProps.chatId!==chatId){return true;}if(nextState.clientData!==clientData){return true;}if(nextState.confirm!==confirm){return true;}if(nextState.messageId!==messageId){return true;}return false;}},{key:\"render\",value:function render(){var _this$props2=this.props,chatId=_this$props2.chatId,classes=_this$props2.classes,t=_this$props2.t;var _this$state2=this.state,messageId=_this$state2.messageId,confirm=_this$state2.confirm;if(!chatId)return null;var _ChatStore$getClientD=ChatStore.getClientData(chatId),unpinned_message_id=_ChatStore$getClientD.unpinned_message_id;if(unpinned_message_id===messageId)return null;var message=MessageStore.get(chatId,messageId);if(!message)return null;var content=!message?t('Loading'):getContent(message,t);var photoSize=getReplyPhotoSize(chatId,messageId);if(isDeletedMessage(message)){content=t('DeletedMessage');}return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:classNames('pinned-message',classes.pinnedMessage,classes.borderColor),onClick:this.handleClick},React.createElement(\"div\",{className:\"pinned-message-wrapper\"},React.createElement(\"div\",{className:classNames('reply-border',classes.accentBackgroundLight)}),photoSize&&React.createElement(ReplyTile,{chatId:chatId,messageId:messageId,photoSize:photoSize}),React.createElement(\"div\",{className:\"pinned-message-content\"},React.createElement(\"div\",{className:classNames('pinned-message-content-title',classes.accentColorMain)},t('PinnedMessage')),React.createElement(\"div\",{className:classNames('pinned-message-content-subtitle',classes.pinnedMessageContentSubtitle)},content)),React.createElement(\"div\",{className:\"pinned-message-delete-button\"},React.createElement(IconButton,{className:classes.iconButton,onClick:this.handleDelete},React.createElement(CloseIcon,null))))),confirm&&React.createElement(Dialog,{transitionDuration:0,open:true,onClose:this.handleClose,\"aria-labelledby\":\"unpin-message-confirmation\"},React.createElement(DialogTitle,{id:\"unpin-message-confirmation\"},t('AppName')),React.createElement(DialogContent,null,React.createElement(DialogContentText,null,t('UnpinMessageAlert'))),React.createElement(DialogActions,null,React.createElement(Button,{onClick:this.handleClose,color:\"primary\"},t('Cancel')),React.createElement(Button,{onClick:this.handleUnpin,color:\"primary\"},t('Ok')))));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){var prevPropsChatId=state.prevPropsChatId;var chatId=props.chatId;if(prevPropsChatId!==chatId){var chat=ChatStore.get(chatId);return{prevPropsChatId:chatId,clientData:ChatStore.getClientData(chatId),messageId:chat&&chat.pinned_message_id?chat.pinned_message_id:0,confirm:false};}return null;}}]);return PinnedMessage;}(React.Component);var enhance=compose(withStyles(styles,{withTheme:true}),withTranslation());export default enhance(PinnedMessage);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/ColumnMiddle/PinnedMessage.js"],"names":["React","classNames","compose","withStyles","withTranslation","Button","CloseIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","ReplyTile","accentStyles","borderStyle","canPinMessages","getContent","getReplyPhotoSize","isDeletedMessage","loadMessageContents","openChat","ChatStore","FileStore","MessageStore","TdLibController","styles","theme","iconButton","pinnedMessage","background","palette","type","default","color","text","primary","pinnedMessageContentSubtitle","secondary","PinnedMessage","props","onClientUpdateSetChatClientData","update","chatId","clientData","setState","onUpdateChatPinnedMessage","chat_id","pinned_message_id","messageId","loadContent","state","message","get","send","message_id","then","result","set","store","getStore","forceUpdate","catch","error","deletedMessage","id","content","handleClick","event","handleDelete","preventDefault","stopPropagation","canPin","confirm","data","getClientData","clientUpdate","Object","assign","unpinned_message_id","handleUnpin","handleClose","chat","prevPropsChatId","prevProps","prevState","snapshot","on","removeListener","nextProps","nextState","nextContext","t","classes","photoSize","borderColor","accentBackgroundLight","accentColorMain","Component","enhance","withTheme"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n"]},"metadata":{},"sourceType":"module"}