{"ast":null,"code":"var _jsxFileName = \"/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Message/Media/Poll.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dialog: false,\n      contextMenu: false,\n      left: 0,\n      top: 0\n    };\n\n    this.getTotalVoterCountString = (count, t = key => key) => {\n      if (!count) return t('NoVotes');\n      if (count === 1) return '1 vote';\n      return count + ' votes';\n    };\n\n    this.handleVote = index => {\n      const _this$props = this.props,\n            chatId = _this$props.chatId,\n            messageId = _this$props.messageId;\n      setPollAnswer(chatId, messageId, [index]);\n    };\n\n    this.handleUnvote = event => {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      const _this$props2 = this.props,\n            chatId = _this$props2.chatId,\n            messageId = _this$props2.messageId,\n            poll = _this$props2.poll;\n      const contextMenu = this.state.contextMenu;\n\n      if (contextMenu) {\n        this.handleCloseContextMenu();\n      }\n\n      const is_closed = poll.is_closed;\n      if (is_closed) return;\n      cancelPollAnswer(chatId, messageId);\n    };\n\n    this.handleStopPoll = event => {\n      event.stopPropagation();\n      const _this$props3 = this.props,\n            chatId = _this$props3.chatId,\n            messageId = _this$props3.messageId;\n      const dialog = this.state.dialog;\n\n      if (dialog) {\n        this.setState({\n          dialog: false\n        });\n      }\n\n      stopPoll(chatId, messageId);\n    };\n\n    this.handleDialog = event => {\n      const dialog = this.state.dialog;\n      if (dialog) return;\n      this.setState({\n        dialog: true,\n        contextMenu: false\n      });\n    };\n\n    this.handleCloseDialog = event => {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.setState({\n        dialog: false\n      });\n    };\n\n    this.handleContextMenu = event => {\n      const poll = this.props.poll;\n      const is_closed = poll.is_closed;\n      if (is_closed) return;\n\n      if (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      const contextMenu = this.state.contextMenu;\n\n      if (contextMenu) {\n        this.setState({\n          contextMenu: false\n        });\n      } else {\n        this.setState({\n          contextMenu: true,\n          left: event.clientX,\n          top: event.clientY\n        });\n      }\n    };\n\n    this.handleCloseContextMenu = event => {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.setState({\n        contextMenu: false\n      });\n    };\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          chatId = _this$props4.chatId,\n          messageId = _this$props4.messageId,\n          poll = _this$props4.poll,\n          t = _this$props4.t;\n    const _this$state = this.state,\n          left = _this$state.left,\n          top = _this$state.top,\n          contextMenu = _this$state.contextMenu,\n          dialog = _this$state.dialog;\n    const question = poll.question,\n          options = poll.options,\n          total_voter_count = poll.total_voter_count,\n          is_closed = poll.is_closed;\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n    const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n    const canStopPoll = message && message.can_be_edited;\n    const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n    const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n    return React.createElement(\"div\", {\n      className: \"poll\",\n      onContextMenu: this.handleContextMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"poll-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"poll-question-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, question), React.createElement(\"span\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, is_closed ? t('FinalResults') : t('AnonymousPoll'))), React.createElement(\"div\", {\n      className: \"poll-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, options.map((x, index) => React.createElement(PollOption, {\n      key: index,\n      option: x,\n      canBeSelected: canBeSelected,\n      closed: is_closed,\n      maxVoterCount: maxVoterCount,\n      onVote: () => this.handleVote(index),\n      onUnvote: this.handleUnvote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"poll-total-count subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.getTotalVoterCountString(total_voter_count, t)), React.createElement(Popover, {\n      open: contextMenu && (canUnvote || canStopPoll),\n      onClose: this.handleCloseContextMenu,\n      anchorReference: \"anchorPosition\",\n      anchorPosition: {\n        top,\n        left\n      },\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, canUnvote && React.createElement(MenuItem, {\n      onClick: this.handleUnvote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, t('Unvote')), canStopPoll && React.createElement(MenuItem, {\n      onClick: this.handleDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, t('StopPoll')))), React.createElement(Dialog, {\n      transitionDuration: 0,\n      open: dialog,\n      onClose: this.handleCloseDialog,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, t('StopPollAlertTitle')), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, t('StopPollAlertText'))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseDialog,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, t('Cancel')), React.createElement(Button, {\n      onClick: this.handleStopPoll,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, t('Stop')))));\n  }\n\n}\n\nPoll.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  poll: PropTypes.object.isRequired,\n  openMedia: PropTypes.func.isRequired\n};\nexport default withTranslation()(Poll);","map":{"version":3,"sources":["/Users/yosuahalim/Documents/Projects/telegram-app/src/Components/Message/Media/Poll.js"],"names":["React","PropTypes","withTranslation","Popover","MenuItem","MenuList","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","PollOption","cancelPollAnswer","setPollAnswer","stopPoll","MessageStore","Poll","Component","state","dialog","contextMenu","left","top","getTotalVoterCountString","count","t","key","handleVote","index","props","chatId","messageId","handleUnvote","event","stopPropagation","poll","handleCloseContextMenu","is_closed","handleStopPoll","setState","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","render","question","options","total_voter_count","message","get","canUnvote","some","x","is_chosen","is_being_chosen","canStopPoll","can_be_edited","canBeSelected","every","maxVoterCount","Math","max","map","voter_count","vertical","horizontal","e","propTypes","number","isRequired","object","openMedia","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n"]},"metadata":{},"sourceType":"module"}